Gadgets information
============================================================
0x0000000000496568 : adc ah, ch ; clc ; call qword ptr [rax]
0x000000000041f4af : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f519 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004be770 : adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004be728 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000004be7d0 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x00000000004be710 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000425b35 : adc al, 0x13 ; jmp rdx
0x0000000000424125 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000437108 : adc al, 0x18 ; add byte ptr [rax], al ; ret
0x000000000048f2d8 : adc al, 0x1a ; call 0x422019
0x0000000000434d8a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000043412d : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000048f0aa : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000041117d : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000430cf0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000415ec2 : adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000047103b : adc al, 0x83 ; ret 0x8308
0x00000000004344a7 : adc al, 0x89 ; ret 0xdaf7
0x000000000045efc8 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000045953e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000420940 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041f06e : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000425b31 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004172f7 : adc al, 0xa ; jmp r10
0x0000000000424293 : adc al, 0xa ; sub eax, edx ; ret
0x000000000044b268 : adc al, 0xc5 ; sal byte ptr [rax + 0x4a], 0 ; jmp rdx
0x000000000044b083 : adc al, 0xc5 ; sal byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x0000000000446f2e : adc al, 0xc5 ; sal byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x000000000044b4c4 : adc al, 0xc5 ; shr byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x000000000044b2b6 : adc al, 0xc5 ; shr byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x000000000044b3a0 : adc al, 0xc5 ; shr byte ptr [rsi + 0x4a], 0 ; jmp rdx
0x00000000004b3194 : adc al, 0xd ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xb], al ; call qword ptr [rax]
0x00000000004187d1 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000404aba : adc al, 0xe9 ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048f42c : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004965cd : adc al, 0xf9 ; jmp qword ptr [rax]
0x000000000049660d : adc al, 0xf9 ; jmp rax
0x0000000000483a8c : adc al, 9 ; ret 0xa374
0x000000000041f657 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f6c1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045104e : adc al, byte ptr [rbx - 0x110f43] ; call qword ptr [rax]
0x00000000004474a1 : adc al, byte ptr [rbx - 0x55343] ; call qword ptr [rax]
0x0000000000492c2b : adc al, ch ; jmp qword ptr [rcx]
0x00000000004069a7 : adc al, ch ; ret
0x000000000044ff98 : adc al, ch ; ret 0xfbd4
0x0000000000496580 : adc al, dh ; clc ; call qword ptr [rax + 0x20fff8f0]
0x0000000000404578 : adc bh, byte ptr [rbx] ; add r9b, bpl ; ret 0xfff1
0x0000000000496578 : adc bh, ch ; clc ; call qword ptr [rax + 0x10fff8ef]
0x00000000004965c9 : adc bh, cl ; inc dword ptr [rax + 0x14] ; stc ; jmp qword ptr [rax]
0x0000000000496609 : adc bh, cl ; inc dword ptr [rax] ; adc al, 0xf9 ; jmp rax
0x00000000004965e9 : adc bh, cl ; jmp qword ptr [rax]
0x00000000004bb5ad : adc bh, dl ; jmp qword ptr [rdx]
0x000000000041caf5 : adc bl, ch ; call 0xffffffffc412544a
0x0000000000419575 : adc bl, ch ; call 0xffffffffc43a1eca
0x000000000046bfc2 : adc bl, ch ; jno 0x46c018 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000041c4c5 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000430626 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430697 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004305f7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430625 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004680e0 : adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000458bd1 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000040a5a3 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045e768 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000465fa3 : adc byte ptr [r8 - 0x77], r9b ; ret 0x63e8
0x0000000000465a6e : adc byte ptr [r8 - 0x77], r9b ; ret 0x98e8
0x00000000004455a9 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000412d0c : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000040b074 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000046c5ee : adc byte ptr [rax + 1], cl ; ret
0x000000000045e769 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000045efc5 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000422084 : adc byte ptr [rax - 0x73], cl ; jg 0x4220a1 ; jne 0x422078 ; ret
0x000000000045efc4 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000048fbca : adc byte ptr [rax - 0x75], cl ; jne 0x48fbd5 ; call r14
0x0000000000478a56 : adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042249a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004583c7 : adc byte ptr [rax - 0x77], cl ; jo 0x4583e5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000458387 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000483c88 : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000045838b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000465fa4 : adc byte ptr [rax - 0x77], cl ; ret 0x63e8
0x0000000000413bda : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000465a6f : adc byte ptr [rax - 0x77], cl ; ret 0x98e8
0x000000000042d397 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042d3d3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401187 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000040feb3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000415da3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000422906 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000492a87 : adc byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x00000000004929d7 : adc byte ptr [rax - 0x7f], cl ; jmp rax
0x00000000004343f5 : adc byte ptr [rax - 1], bh ; ret
0x000000000040c554 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000420f0c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f861 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000450de3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x0000000000471bb2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr fs:[rdx], eax ; jmp 0x46de31
0x00000000004332f0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004965d4 : adc byte ptr [rax], bl ; stc ; call qword ptr [rax]
0x0000000000496624 : adc byte ptr [rax], dl ; stc ; push rax ; adc ecx, edi ; call rax
0x0000000000462061 : adc byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000041c5f8 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000422088 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000004474a8 : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x0000000000435297 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000004b3060 : adc byte ptr [rbp - 0xb], al ; call qword ptr [rbx]
0x000000000045b129 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x00000000004373b3 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000045665c : adc byte ptr [rbx + 0x5d], bl ; mov rax, r12 ; pop r12 ; ret
0x0000000000413cfb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004055c3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf15b : adc byte ptr [rbx + 0xa4a0202], al ; ret
0x00000000004bb943 : adc byte ptr [rbx + 0xa530202], al ; ret
0x00000000004bb973 : adc byte ptr [rbx + 0xa5b0202], al ; ret
0x000000000040e8e2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000475bf7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x475c11 ; ret
0x000000000046bb99 : adc byte ptr [rcx + 0x29], cl ; ret
0x0000000000456292 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447f0e : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000491f77 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000418853 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000486b67 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000433794 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496678 : adc byte ptr [rcx], bl ; stc ; call qword ptr [rax]
0x000000000040e8e5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000048e002 : adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x000000000043387f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000496368 : adc byte ptr [rdi - 8], ch ; jmp qword ptr [rax]
0x0000000000430f03 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000489fdb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488adf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000489cdf : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004893df : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004896df : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488dd7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000489084 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489c84 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489f84 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489684 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489384 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000488d7c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487e0d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487c2d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000488605 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000487525 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488425 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040a5a4 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000444f6d : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000496674 : adc byte ptr [rdi], dl ; stc ; call qword ptr [rax]
0x0000000000458dae : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000444f6c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000426029 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000407e33 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x00000000004be460 : adc byte ptr [rdx - 4], bl ; jmp qword ptr [rax]
0x00000000004344af : adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0x43446f
0x00000000004965d8 : adc byte ptr [rdx], bl ; stc ; call qword ptr [rax]
0x0000000000424f8b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424e3a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000424435 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000417445 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041cf7b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000496208 : adc byte ptr [rsi], ch ; clc ; jmp rax
0x00000000004b6229 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf607
0x00000000004b5bb1 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf60d
0x000000000048ccbf : adc byte ptr [rsp - 4], al ; ret
0x000000000048cd05 : adc byte ptr [rsp - 8], al ; ret
0x0000000000489087 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049656c : adc ch, ch ; clc ; call qword ptr [rax]
0x00000000004966a9 : adc cl, bh ; call rax
0x00000000004965e5 : adc cl, bh ; inc dword ptr [rax + 0x12] ; stc ; jmp qword ptr [rax]
0x0000000000496605 : adc cl, bh ; jmp qword ptr [rax]
0x0000000000496625 : adc cl, bh ; push rax ; adc ecx, edi ; call rax
0x000000000045e76d : adc cl, byte ptr [rax + 1] ; ret
0x000000000046c484 : adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000419565 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000043ef33 : adc cl, byte ptr [rbp - 0x77] ; ret
0x000000000041b4c8 : adc cl, ch ; ret 0xfffd
0x0000000000496604 : adc cl, dil ; jmp qword ptr [rax]
0x000000000041c564 : adc dh, bh ; ret
0x0000000000496570 : adc dh, ch ; clc ; call qword ptr [rax + 0x10fff8ee]
0x00000000004965e8 : adc dil, cl ; jmp qword ptr [rax]
0x00000000004b23a8 : adc dl, bl ; std ; push qword ptr [rax - 0x26] ; std ; jmp rax
0x0000000000413af0 : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x00000000004144bd : adc dword ptr [rax + 0x29], ecx ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000041b01b : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000046b821 : adc dword ptr [rax + rax + 0x48], ebp ; add esp, 8 ; jmp rax
0x0000000000464bb4 : adc dword ptr [rax + rax + 0x5b], ebp ; pop rbp ; jmp rax
0x000000000046a13d : adc dword ptr [rax + rax - 1], ebp ; loopne 0x46a1a4 ; ret
0x000000000041089e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000046997a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000043430b : adc dword ptr [rax], 0x46 ; add byte ptr [rax], al ; ret
0x0000000000420f0b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000041f7f7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420e0f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044208e : adc dword ptr [rax], ebp ; add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x000000000047b561 : adc dword ptr [rbx], ecx ; xor eax, eax ; call 0x467867
0x000000000041f7f6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496691 : adc eax, 0x16d0fff9 ; stc ; call rax
0x0000000000496671 : adc eax, 0x1710fff9 ; stc ; call qword ptr [rax]
0x0000000000438747 : adc eax, 0x28784c ; pop rbx ; ret
0x000000000046501d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x0000000000464f59 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x000000000043424b : adc eax, 0x46 ; add byte ptr [rax], al ; ret
0x0000000000400d08 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000046f60b : adc eax, 0x83480000 ; ret
0x000000000041f381 : adc eax, 0x83480000 ; ret 0xe910
0x000000000045a97a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000046fee2 : adc eax, dword ptr [eax] ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000046fee3 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000420c6e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487349 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488d7f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046d049 : adc eax, eax ; ret
0x000000000046d186 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004ad3c5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000467fec : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040907d : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000047ba60 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040e88c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045aa6c : adc ecx, dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000479c69 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000402bc3 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000441c04 : adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x0000000000490487 : adc ecx, dword ptr [rcx - 0x77] ; ret
0x0000000000496629 : adc ecx, edi ; call rax
0x0000000000496689 : adc ecx, edi ; jmp qword ptr [rax]
0x000000000047b6ca : adc edi, dword ptr [rcx] ; ret 0x8175
0x000000000047b626 : adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000437afb : adc edi, dword ptr [rdi + 0x49] ; add byte ptr [rax + 9], cl ; ret 0x8948
0x000000000049666d : adc edi, ecx ; inc dword ptr [rax + 0x15] ; stc ; call qword ptr [rax]
0x0000000000435019 : adc edi, esi ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004ae8de : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040cd11 : adc esi, esi ; ret 0xf02
0x0000000000488f62 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c4c4 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004874b0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046d185 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000041c563 : adc sil, r15b ; ret
0x00000000004b9563 : add ah, ah ; jo 0x4b956f ; add al, cl ; mov ch, 0xf8 ; jmp qword ptr [rsi]
0x00000000004bd473 : add ah, ah ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret 0xfb88
0x00000000004b5263 : add ah, ah ; sub eax, 0xa1f80000 ; cmc ; call qword ptr [rsi]
0x00000000004b8c43 : add ah, al ; add byte ptr [eax], al ; fdiv dword ptr [rdi] ; clc ; jmp qword ptr [rdx]
0x00000000004b5a9c : add ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000004bde43 : add ah, al ; mov ecx, 0xdb980000 ; sti ; call qword ptr [rdx]
0x00000000004be743 : add ah, al ; ret 0
0x000000000043327e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004332a1 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043333f : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043325d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b407b : add ah, bh ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x75], ah ; cmc ; jmp rax
0x00000000004b6b5b : add ah, bl ; add byte ptr [rax], r8b ; shl dl, 1 ; cmc ; jmp rbx
0x00000000004be45b : add ah, bl ; mov edi, 0x5a100000 ; cld ; jmp qword ptr [rax]
0x00000000004b305b : add ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax], dl ; cmc ; call qword ptr [rbx]
0x00000000004b7b5b : add ah, bl ; push rsi ; add byte ptr [rax], al ; sal dil, cl ; call qword ptr [rdi]
0x00000000004be75b : add ah, bl ; ret 0
0x000000000046b61f : add ah, byte ptr [rax + 0x48006c1b] ; add esp, 0x58 ; ret
0x00000000004b46ce : add ah, byte ptr [rsi + 0xd1cfff5] ; mov dl, 0x9b ; cmc ; jmp qword ptr [rdx]
0x00000000004ba56b : add ah, ch ; add byte ptr [rax], 0 ; ror cl, 1 ; stc ; call qword ptr [rdx]
0x00000000004be873 : add ah, dh ; ret
0x00000000004be773 : add ah, dh ; ret 0
0x00000000004bd753 : add ah, dl ; mov dl, 0 ; add byte ptr [rax - 0x75], ch ; sti ; jmp qword ptr [rdx]
0x000000000043d49f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000467158 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000460a6d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000418f8d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421b2f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418fb1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048fcf1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000435c7c : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000045aa03 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000046ab0b : add al, 0 ; add byte ptr [rcx - 0x73], al ; pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x0000000000480789 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000004332cd : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000045efcb : add al, 0x16 ; ret
0x0000000000424121 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000041868a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004b3f84 : add al, 0x1b ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rax]
0x0000000000476010 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043a519 : add al, 0x24 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046a1d8 : add al, 0x24 ; add rsp, 0x48 ; jmp r11
0x000000000043d70d : add al, 0x24 ; call qword ptr [rbx]
0x00000000004449fa : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407511 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000459c1e : add al, 0x31 ; ret
0x0000000000459b1a : add al, 0x37 ; ret
0x000000000040e31f : add al, 0x3a ; ret
0x0000000000496b10 : add al, 0x3a ; stc ; push qword ptr [rcx + rdi - 7] ; jmp rsp
0x0000000000434218 : add al, 0x47 ; add byte ptr [rax], al ; ret
0x0000000000432f53 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000465021 : add al, 0x48 ; add esp, 8 ; ret
0x0000000000468082 : add al, 0x48 ; cmp ecx, dword ptr [rsi + rdi] ; jae 0x46804a ; xor eax, eax ; ret
0x00000000004679d5 : add al, 0x48 ; cmp edx, ecx ; jne 0x467991 ; mov eax, dword ptr [rdx] ; ret
0x0000000000430b5b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000430069 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043007b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000458913 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000045886e : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000042ab9a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000458704 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000042e8a9 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000468554 : add al, 0x48 ; mov edi, eax ; call 0x4147b6
0x0000000000459814 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000430077 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042e8b7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000412ba1 : add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x0000000000441c02 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x00000000004160a5 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x000000000049176c : add al, 0x81 ; add r9, rax ; jmp r9
0x000000000048dbc5 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000048c675 : add al, 0x81 ; je 0x48c655 ; ret
0x000000000041f06b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000048c671 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x48c659 ; ret
0x0000000000420943 : add al, 0x81 ; sub eax, edx ; ret
0x00000000004333fa : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4333e8 ; ret
0x000000000041edc7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000048dac4 : add al, 0x83 ; add rax, r11 ; jmp rax
0x000000000043e637 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000048e614 : add al, 0x86 ; add r8, r14 ; jmp r8
0x000000000048eb21 : add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000430066 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000042e8a6 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000004333fd : add al, 0x8a ; je 0x4333e5 ; ret
0x000000000045b127 : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x00000000004569cb : add al, 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x0000000000450650 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000456af9 : add al, 0x8b ; xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x000000000048fd54 : add al, 0xb8 ; add r8, rax ; jmp r8
0x00000000004be584 : add al, 0xc1 ; add byte ptr [rax], al ; test al, 0xa1 ; cld ; call qword ptr [rax]
0x000000000046d0dd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x46d139
0x000000000047b8bd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47b919
0x00000000004761f1 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004187cd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000045b40a : add al, 0xf ; xchg eax, ebp ; ret 0xc8e9
0x000000000045b266 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000042af03 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000467bb1 : add al, 0xf6 ; ret 0x7402
0x000000000041c5b9 : add al, 0xf6 ; ret 0x7408
0x0000000000450934 : add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x00000000004bbe6d : add al, 2 ; in al, 0xa ; ret
0x000000000045e9b8 : add al, 2 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000425697 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046dba9 : add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000041705d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000422c18 : add al, 7 ; ret
0x000000000042428f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004762a5 : add al, al ; sbb ebp, dword ptr [rax + rax + 0x48] ; add esp, 8 ; ret
0x00000000004b874f : add al, al ; xchg eax, edi ; std ; call rsp
0x00000000004b6b17 : add al, bh ; loopne 0x4b6b14 ; call qword ptr [rcx]
0x00000000004bc8b7 : add al, bl ; mov bh, 0xfa ; call rsi
0x00000000004bd927 : add al, bl ; mov dr1, ebx ; call qword ptr [rax]
0x00000000004b3ab7 : add al, bl ; push rsi ; cmc ; jmp rsp
0x00000000004ba527 : add al, bl ; ret 0xfff9
0x0000000000483e7a : add al, bpl ; jmp qword ptr [rdx]
0x0000000000489e62 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419561 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000045ea76 : add al, byte ptr [rax] ; add al, ch ; ret 0xfb01
0x000000000040ec75 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000043ee74 : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041bb73 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000048045d : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000048f5ea : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000045dcc7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405686 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041912d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420701 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419151 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048fd01 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004360ec : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000435e5f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000435d2b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000435ca3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000045a9e3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000045e34a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000432504 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000045e920 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000048f5f7 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x0000000000402cfc : add al, byte ptr [rax] ; add byte ptr [rdi + 0x6c32a0], bh ; call rax
0x0000000000441f74 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x000000000048e3c0 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000411e43 : add al, byte ptr [rax] ; nop dword ptr [rax] ; ret
0x000000000040b6d5 : add al, byte ptr [rax] ; pop rdx ; cdqe ; ret
0x000000000043875a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43874e
0x000000000043720e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004b3980 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000496850 : add al, byte ptr [rcx + rdi*8 - 1] ; xchg eax, edx ; stc ; jmp qword ptr [rdx]
0x000000000045dcc6 : add al, byte ptr ss:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000483e7b : add al, ch ; jmp qword ptr [rdx]
0x00000000004bb7a7 : add al, ch ; or edx, edi ; jmp rbx
0x00000000004bc107 : add al, ch ; pop rcx ; cli ; jmp rdi
0x0000000000402fe7 : add al, ch ; ret
0x0000000000481368 : add al, ch ; ret 0xf805
0x0000000000481068 : add al, ch ; ret 0xf808
0x000000000045ea78 : add al, ch ; ret 0xfb01
0x0000000000445eb8 : add al, ch ; ret 0xfd66
0x000000000045856c : add al, ch ; ret 0xfffb
0x000000000045e9ae : add al, ch ; sbb al, 2 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b88f7 : add al, ch ; sbb edi, eax ; call rdx
0x000000000047e2ff : add al, ch ; sub esi, dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b9567 : add al, cl ; mov ch, 0xf8 ; jmp qword ptr [rsi]
0x00000000004b75b7 : add al, cl ; mov esi, edi ; jmp qword ptr [rbx]
0x00000000004b9137 : add al, cl ; xchg eax, edi ; clc ; call qword ptr [rdx]
0x00000000004ba56f : add al, dl ; leave ; stc ; call qword ptr [rdx]
0x00000000004b6b5f : add al, dl ; loop 0x4b6b5c ; jmp rbx
0x00000000004b7990 : add bh, 0xf7 ; jmp qword ptr [rdi]
0x00000000004bf435 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000046a13f : add bh, bh ; loopne 0x46a1a2 ; ret
0x0000000000476170 : add bh, bh ; loopne 0x4761d3 ; ret
0x0000000000401184 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000402778 : add bh, bh ; sar dword ptr [rdi + 0x6c20c0], cl ; call rbx
0x000000000040bedd : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000045e9b9 : add bh, bl ; dec dword ptr [rax + 0x39] ; ret
0x000000000045e97a : add bh, bl ; dec dword ptr [rax - 0x77] ; ret
0x000000000046d2a4 : add bh, byte ptr [rax + 1] ; ret
0x00000000004328d2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004b2724 : add bh, cl ; hlt ; jmp qword ptr [rdx]
0x0000000000464006 : add bh, dh ; ret 0x804
0x00000000004af99f : add bl, al ; fild word ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041be64 : add bl, al ; lea rax, qword ptr [rip + 0x15313] ; ret
0x000000000043870a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000045b105 : add bl, al ; ret
0x00000000004bb976 : add bl, byte ptr [rbx + 0xa] ; ret
0x00000000004603ca : add bl, ch ; mov cs, word ptr [rax - 0x7d] ; ret
0x0000000000464bc1 : add bl, ch ; mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000043c705 : add bl, ch ; ret 0x8b48
0x00000000004bcbfa : add bl, cl ; ret
0x00000000004084b8 : add bl, dh ; ret
0x0000000000412b6c : add bl, dl ; loopne 0x412afd ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004b498b : add byte ptr [0xffffffff80d00000], cl ; cmc ; jmp rbx
0x00000000004b8c45 : add byte ptr [eax], al ; fdiv dword ptr [rdi] ; clc ; jmp qword ptr [rdx]
0x00000000004b8b8d : add byte ptr [eax], al ; push rax ; clc ; call qword ptr [rax]
0x000000000041022d : add byte ptr [eax], al ; ret
0x00000000004b8bf5 : add byte ptr [eax], al ; xor dil, al ; jmp rax
0x000000000043a4fd : add byte ptr [r15 + 0x6c3220], dil ; call rax
0x0000000000475faf : add byte ptr [r15 + 0x6c3640], r15b ; call rax
0x000000000040037c : add byte ptr [r15], cl ; xchg eax, esp ; ret
0x00000000004332ed : add byte ptr [r8 + 0x10], dil ; pop rbx ; ret
0x00000000004680c1 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000410293 : add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x0000000000437fcb : add byte ptr [r8 + 0xf], cl ; ret
0x000000000041babd : add byte ptr [r8 + 0xf], cl ; ret 0x8348
0x0000000000408554 : add byte ptr [r8 + 0xf], cl ; ret 0x8948
0x000000000040b206 : add byte ptr [r8 + 0xf], cl ; ret 0x8b48
0x000000000047bbf0 : add byte ptr [r8 + 1], cl ; ret 0x8b48
0x0000000000437afd : add byte ptr [r8 + 9], cl ; ret 0x8948
0x000000000047a759 : add byte ptr [r8 - 0x77], cl ; ret
0x000000000040182e : add byte ptr [r8 - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x000000000047d3d4 : add byte ptr [r8 - 0x7d], cl ; ret
0x0000000000472c20 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000043fe33 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004345a9 : add byte ptr [r8], al ; ret
0x0000000000434219 : add byte ptr [r8], r8b ; ret
0x00000000004b6c25 : add byte ptr [r8], r8b ; sbb dh, ah ; cmc ; call rdx
0x000000000040b06f : add byte ptr [r9 + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000047b562 : add byte ptr [r9], sil ; shr al, 0xf5 ; ret 0xfffe
0x00000000004332ee : add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x00000000004bf207 : add byte ptr [rax + 0x21], ch ; std ; call qword ptr [rbx]
0x000000000040b0cf : add byte ptr [rax + 0x29], cl ; ret
0x000000000048ddc5 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000044e516 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000043d4a1 : add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000040f915 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004b8b8f : add byte ptr [rax + 0x2e], dl ; clc ; call qword ptr [rax]
0x00000000004b8bf7 : add byte ptr [rax + 0x32], cl ; clc ; jmp rax
0x000000000040a579 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000040fd7e : add byte ptr [rax + 0x39], cl ; ret
0x0000000000442090 : add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x000000000040ab5f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000410294 : add byte ptr [rax + 0x39], cl ; ret 0xd575
0x0000000000437380 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000004790ee : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000475f80 : add byte ptr [rax + 0x48006c36], al ; add esp, 8 ; ret
0x00000000004be5b7 : add byte ptr [rax + 0x5b], bl ; cld ; call qword ptr [rax]
0x0000000000482ba4 : add byte ptr [rax + 0x63], cl ; imul al ; ret
0x000000000048e3c1 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000046715a : add byte ptr [rax + 0x63], cl ; ret
0x000000000048224e : add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x00000000004695c3 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000045eb1f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x000000000045eb3f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000045eb2f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x0000000000410827 : add byte ptr [rax + 0x6c0860], bh ; ret
0x000000000045eb4f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x000000000041955f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004b407f : add byte ptr [rax + 0x75], ah ; cmc ; jmp rax
0x0000000000430aff : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004bec2f : add byte ptr [rax + 0xb], al ; std ; call rsp
0x000000000045b4bf : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x000000000040c733 : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004694a7 : add byte ptr [rax + 0xf], al ; test dword ptr [rax], eax ; or al, 0 ; add bl, dh ; ret
0x0000000000459a85 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000437fcc : add byte ptr [rax + 0xf], cl ; ret
0x000000000041babe : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000408555 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040b207 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000045cc20 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000040164f : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000441eaf : add byte ptr [rax + 1], bh ; ret
0x000000000041bb75 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000047a667 : add byte ptr [rax + 1], cl ; ret
0x0000000000477549 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000477f59 : add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000047bbf1 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000476bb7 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000004be9df : add byte ptr [rax + 7], dl ; std ; jmp rsp
0x0000000000437afe : add byte ptr [rax + 9], cl ; ret 0x8948
0x0000000000492c28 : add byte ptr [rax + r10 - 0x18], sil ; jmp qword ptr [rcx]
0x00000000004bd46f : add byte ptr [rax + rax], al ; add ah, ah ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret 0xfb88
0x00000000004be6c7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 0
0x00000000004be86f : add byte ptr [rax + rax], cl ; add ah, dh ; ret
0x00000000004694ab : add byte ptr [rax + rax], cl ; add bl, dh ; ret
0x0000000000413b61 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000413d11 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004be76f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004be727 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000004be7cf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret
0x00000000004b4d03 : add byte ptr [rax + rbp - 0x6e980000], al ; cmc ; call qword ptr [rcx]
0x00000000004bccd3 : add byte ptr [rax + rbp*4], dl ; add byte ptr [rax], bl ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004b4cd3 : add byte ptr [rax + rbp], dl ; add byte ptr [rax - 0x70], bh ; cmc ; call qword ptr [rdi]
0x0000000000465020 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000492c29 : add byte ptr [rax + rdx - 0x18], dh ; jmp qword ptr [rcx]
0x00000000004b9503 : add byte ptr [rax + rsi*2 - 0x4ad80000], al ; clc ; call qword ptr [rcx]
0x00000000004b94eb : add byte ptr [rax + rsi*2], ch ; add byte ptr [rax], ah ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b94d3 : add byte ptr [rax + rsi*2], dl ; add byte ptr [rax], bl ; mov ch, 0xf8 ; call qword ptr [rcx]
0x000000000045b6d2 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b48
0x0000000000402e2e : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x000000000047d703 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040a4af : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000044c1b8 : add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000434120 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000045a9ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000045a9cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000045aa2f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000045a9df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000045aa1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000441f8d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047c434 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004bc7cf : add byte ptr [rax - 0x4c], dl ; cli ; call qword ptr [rbx]
0x00000000004b5107 : add byte ptr [rax - 0x65], bh ; cmc ; jmp qword ptr [rax]
0x00000000004b4d07 : add byte ptr [rax - 0x6f], ch ; cmc ; call qword ptr [rcx]
0x00000000004b4cd7 : add byte ptr [rax - 0x70], bh ; cmc ; call qword ptr [rdi]
0x000000000048d9cf : add byte ptr [rax - 0x73], cl ; je 0x48da00 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000043541f : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004bd757 : add byte ptr [rax - 0x75], ch ; sti ; jmp qword ptr [rdx]
0x000000000044b265 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sal byte ptr [rax + 0x4a], 0 ; jmp rdx
0x000000000044b080 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sal byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x0000000000446f2b : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sal byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x000000000044b4c1 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; shr byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x000000000044b2b3 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; shr byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x000000000044b39d : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; shr byte ptr [rsi + 0x4a], 0 ; jmp rdx
0x000000000040feaf : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045d01f : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000441fbf : add byte ptr [rax - 0x75], cl ; add eax, 0x2812a9 ; ret
0x00000000004399bf : add byte ptr [rax - 0x75], cl ; add eax, 0x28a641 ; ret
0x000000000040ebaf : add byte ptr [rax - 0x75], cl ; add eax, 0x2b14e9 ; ret
0x000000000040da26 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000439958 : add byte ptr [rax - 0x75], cl ; jnp 0x43997a ; call rax
0x0000000000459636 : add byte ptr [rax - 0x75], cl ; js 0x459681 ; jmp 0x459606
0x0000000000464246 : add byte ptr [rax - 0x75], cl ; mov r9b, r13b ; ret
0x00000000004579ff : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000467d12 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004129b7 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000040f3e7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000042745f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004b4b1f : add byte ptr [rax - 0x77], al ; cmc ; jmp qword ptr [rcx]
0x000000000043d70a : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040ebdf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000046cf0c : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000045b0f7 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x0000000000408647 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048f5ec : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000414c01 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000040d4e2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040d662 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004084b1 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000491b47 : add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x00000000004360fb : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000414d17 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000402f40 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000469f55 : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000474891 : add byte ptr [rax - 0x77], cl ; ret 0x36e8
0x0000000000475ddc : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000490624 : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000041328c : add byte ptr [rax - 0x77], cl ; ret 0x58b
0x0000000000433d9c : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000404f0f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041028a : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000408b2f : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000044459f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000040f801 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004512bb : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000041ba40 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000044ecff : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040bee3 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000046fee5 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000440c21 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000045980f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000040182f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x000000000045912a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000408b57 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000414c29 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000048cee6 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004018d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000413539 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000004491b1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000448ee2 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000408c52 : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x000000000040175e : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000412c7f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000004329cf : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000043cb57 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000438163 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000459036 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004698e7 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004933df : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000043fe34 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000045df3f : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000041884f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f26f : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000040f8bc : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041bd6f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041bcff : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000483077 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000463cef : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x000000000043b58c : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x000000000041b322 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041f1e3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000471987 : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000418873 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046719f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000458bfc : add byte ptr [rax - 0x7d], cl ; ret 0xf301
0x00000000004241cf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000441b1e : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000443067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000049187a : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000048033f : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000402fe0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004286eb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b2a97 : add byte ptr [rax - 0xe], ch ; std ; call rdi
0x00000000004587e7 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040eb5f : add byte ptr [rax - 1], bh ; ret
0x000000000040ef5e : add byte ptr [rax - 1], dil ; ret
0x0000000000402fe4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000477f56 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000040bee0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000042af0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000046b84b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000436a8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040faab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000422bbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004246b1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000416ecc : add byte ptr [rax], 0 ; add cl, ch ; jmp rdi
0x00000000004082f0 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x0000000000402fb2 : add byte ptr [rax], 0 ; add cl, ch ; ret 0xffed
0x00000000004ba56d : add byte ptr [rax], 0 ; ror cl, 1 ; stc ; call qword ptr [rdx]
0x000000000049673c : add byte ptr [rax], 0xf9 ; call rax
0x00000000004b94ef : add byte ptr [rax], ah ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004baadf : add byte ptr [rax], ah ; sar cl, 1 ; call rcx
0x00000000004be76e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004be726 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000004be7ce : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x00000000004b3192 : add byte ptr [rax], al ; adc al, 0xd ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xb], al ; call qword ptr [rax]
0x00000000004b305e : add byte ptr [rax], al ; adc byte ptr [rbp - 0xb], al ; call qword ptr [rbx]
0x00000000004be45e : add byte ptr [rax], al ; adc byte ptr [rdx - 4], bl ; jmp qword ptr [rax]
0x00000000004bd471 : add byte ptr [rax], al ; add ah, ah ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret 0xfb88
0x00000000004be741 : add byte ptr [rax], al ; add ah, al ; ret 0
0x00000000004be759 : add byte ptr [rax], al ; add ah, bl ; ret 0
0x00000000004be871 : add byte ptr [rax], al ; add ah, dh ; ret
0x00000000004be771 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000004b3f82 : add byte ptr [rax], al ; add al, 0x1b ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rax]
0x000000000046501f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004be582 : add byte ptr [rax], al ; add al, 0xc1 ; add byte ptr [rax], al ; test al, 0xa1 ; cld ; call qword ptr [rax]
0x0000000000402fe5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000445eb6 : add byte ptr [rax], al ; add al, ch ; ret 0xfd66
0x000000000045856a : add byte ptr [rax], al ; add al, ch ; ret 0xfffb
0x00000000004b798e : add byte ptr [rax], al ; add bh, 0xf7 ; jmp qword ptr [rdi]
0x000000000045b103 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000043c703 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x000000000040e07e : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004680ad : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048ddc3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000044e514 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000040f913 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000040a577 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x00000000004144d8 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040ab5d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000482ba2 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x0000000000430afd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040164d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000441ead : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000047a665 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000477547 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000477f57 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x894c
0x00000000004be86d : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dh ; ret
0x00000000004be76d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004be725 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000044f615 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000441f8b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000040fead : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040da24 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000459634 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x459683 ; jmp 0x459608
0x00000000004129b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000043d708 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040ebdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000491b45 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x00000000004360f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00000000004084f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000469f53 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000047488f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x36e8
0x0000000000490622 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000478bb7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041ba3e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000040bee1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000041583f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004329cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000043984c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000479f0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004933dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000420837 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f26d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000041bd6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041bcfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004208a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000471985 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000046719d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004241cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000443065 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000482b65 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000429ef8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000040eb5d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004be76c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004be724 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000040eb9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004680ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040ab5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000040ebdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045b80b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047488d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x36e8
0x000000000044328b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004329cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004812eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004933db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000041bd6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041bcfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000046719b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004961da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; clc ; call rax
0x00000000004961db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; call rax
0x000000000040dfcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a2502 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a29f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004be86c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret
0x0000000000415eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000432c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000047a4cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000410c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000041882b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004173fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004961dc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; clc ; call rax
0x000000000044c34b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x000000000045a9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000046b1cf : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000458569 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4147b6
0x0000000000467037 : add byte ptr [rax], al ; add byte ptr [rax], al ; call r12
0x00000000004a452c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a36dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004961dd : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; call rax
0x000000000043112c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043113c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043114c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043115c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043116c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004310ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004310bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004310cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004310dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004310ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004310fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043110c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043111c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043109c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004010aa : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000430afc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004304dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040eb5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000441eac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000042af0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000046b84c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040ebcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000040ebdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042b05c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000040dddb : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d44d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040dfcd : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a34fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a3c94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a2504 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a29f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004b0814 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4afc
0x00000000004b08fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4afe
0x00000000004be7e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000463806 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x46381a ; call rax
0x000000000043322c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040e1cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3485 : add byte ptr [rax], al ; add byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x00000000004be86e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret
0x000000000040aa80 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000437088 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000415eed : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000043329c : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000437576 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000042a7ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000408b46 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040dddc : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004003cb : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040be7d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x00000000004510e7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x00000000004518d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000408782 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc8f2
0x0000000000480a67 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000004506af : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x00000000004505e1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000000004620dc : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; ret
0x0000000000432c0d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040b9b7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2], al ; pop rbx ; ret
0x0000000000471bb3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 2], ah ; jmp 0x46de30
0x00000000004366c5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000435e6f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000409b8e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x0000000000435ca4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000435cb3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000044fb9b : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000048f0e5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2723d37
0x000000000047a4cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000454e06 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x000000000047dafa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000041b661 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000453f87 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x0000000000482f9f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000461605 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; call 0xffffffffc2c95e19
0x0000000000410c0d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000041882d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004173fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041be90 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000041beb6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047cab3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret
0x000000000040772a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000045971b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000043c2f8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000048f182 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048f1aa : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x00000000004be39e : add byte ptr [rax], al ; add byte ptr [rdi - 4], dl ; call rbx
0x000000000042afed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000042b05d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043daa6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043daf0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000456c4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000041bdad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004331f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x000000000046011e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048f3c5 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x00000000004246b2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041bcc2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000435c7d : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000004961de : add byte ptr [rax], al ; add byte ptr [rsi], ah ; clc ; call rax
0x000000000044c34d : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x0000000000416ecd : add byte ptr [rax], al ; add cl, ch ; jmp rdi
0x00000000004082f1 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000047267e : add byte ptr [rax], al ; add cl, ch ; ret 0xffb2
0x0000000000402fb3 : add byte ptr [rax], al ; add cl, ch ; ret 0xffed
0x000000000048d6b0 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x00000000004010ab : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004122e0 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000432361 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b9a0e : add byte ptr [rax], al ; add dl, cl ; clc ; call qword ptr [rbx]
0x00000000004b9a3e : add byte ptr [rax], al ; add dl, cl ; clc ; call qword ptr [rdx]
0x000000000043d0f7 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x43d0c9
0x000000000046b657 : add byte ptr [rax], al ; add rax, -0x10 ; ret
0x000000000045a9ae : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000041bb74 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000476090 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043349e : add byte ptr [rax], al ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000433807 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000434469 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000444db8 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000407f35 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000040b685 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045c908 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004bb3a2 : add byte ptr [rax], al ; and al, 0x8f ; add byte ptr [rax], al ; sub al, bh ; stc ; call rax
0x00000000004bb7a2 : add byte ptr [rax], al ; and al, 0x93 ; add byte ptr [rax], al ; call 0xffffffffe44bb1bf
0x00000000004baade : add byte ptr [rax], al ; and al, dl ; stc ; call rcx
0x000000000041bdae : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004598b7 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000459a84 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000045856b : add byte ptr [rax], al ; call 0x4147b4
0x0000000000406c91 : add byte ptr [rax], al ; call 0x444b69
0x00000000004b88f6 : add byte ptr [rax], al ; call 0xffffffffd34b811d
0x00000000004bb7a6 : add byte ptr [rax], al ; call 0xffffffffe44bb1bb
0x00000000004bc106 : add byte ptr [rax], al ; call 0xffffffffe84bbb6b
0x0000000000401183 : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004a19c2 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000467039 : add byte ptr [rax], al ; call r12
0x000000000048f188 : add byte ptr [rax], al ; call r14
0x000000000040181a : add byte ptr [rax], al ; call rax
0x0000000000435c83 : add byte ptr [rax], al ; call rbx
0x00000000004a452e : add byte ptr [rax], al ; call rdi
0x00000000004a36de : add byte ptr [rax], al ; call rsp
0x00000000004961df : add byte ptr [rax], al ; clc ; call rax
0x00000000004b6b16 : add byte ptr [rax], al ; clc ; loopne 0x4b6b15 ; call qword ptr [rcx]
0x00000000004b407a : add byte ptr [rax], al ; cld ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x75], ah ; cmc ; jmp rax
0x00000000004b72ba : add byte ptr [rax], al ; cmp al, 0x4e ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xa], bh ; call qword ptr [rax]
0x00000000004bd1ba : add byte ptr [rax], al ; cmp al, 0xad ; add byte ptr [rax], al ; xor ch, 0xfa ; jmp rbx
0x00000000004b3196 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0xb], al ; call qword ptr [rax]
0x0000000000409fd7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x409fe8 ; pop rbx ; ret
0x00000000004b6b5a : add byte ptr [rax], al ; fadd qword ptr [rsi] ; add al, dl ; loop 0x4b6b61 ; jmp rbx
0x00000000004b3ab6 : add byte ptr [rax], al ; fcom dword ptr [rsi - 0xb] ; jmp rsp
0x00000000004b8c46 : add byte ptr [rax], al ; fdiv dword ptr [rdi] ; clc ; jmp qword ptr [rdx]
0x00000000004be45a : add byte ptr [rax], al ; fdivr qword ptr [rdi + 0x5a100000] ; cld ; jmp qword ptr [rax]
0x00000000004b305a : add byte ptr [rax], al ; fmul qword ptr [rbx] ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xb], al ; call qword ptr [rbx]
0x00000000004be872 : add byte ptr [rax], al ; hlt ; ret
0x00000000004be772 : add byte ptr [rax], al ; hlt ; ret 0
0x00000000004bd472 : add byte ptr [rax], al ; in al, -0x53 ; add byte ptr [rax], al ; ret 0xfb88
0x00000000004b2b62 : add byte ptr [rax], al ; in al, 6 ; add byte ptr [rax], al ; sub byte ptr [rsi], bl ; cmc ; call qword ptr [rax]
0x00000000004ba56a : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], 0 ; ror cl, 1 ; stc ; call qword ptr [rdx]
0x00000000004b94ea : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jo 0x4b94f8 ; add byte ptr [rax], ah ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004be7ea : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000040f9ac : add byte ptr [rax], al ; je 0x40f9be ; xor eax, eax ; ret
0x00000000004167da : add byte ptr [rax], al ; je 0x4167e4 ; ret
0x000000000048f3c6 : add byte ptr [rax], al ; je 0x48f3bc ; add rsp, 8 ; ret
0x00000000004b88f2 : add byte ptr [rax], al ; je 0x4b8963 ; add byte ptr [rax], al ; call 0xffffffffd34b8121
0x00000000004b8bf2 : add byte ptr [rax], al ; je 0x4b8c66 ; add byte ptr [rax], al ; xor dil, al ; jmp rax
0x000000000040cf33 : add byte ptr [rax], al ; jmp 0x40cf4b
0x0000000000414488 : add byte ptr [rax], al ; jmp 0x41449f
0x000000000043c704 : add byte ptr [rax], al ; jmp 0x43c6cd
0x0000000000445e03 : add byte ptr [rax], al ; jmp 0x445e19
0x00000000004603c9 : add byte ptr [rax], al ; jmp 0x460361
0x000000000046fb59 : add byte ptr [rax], al ; jmp 0x46fa52
0x00000000004734f7 : add byte ptr [rax], al ; jmp 0x472979
0x000000000048fa0f : add byte ptr [rax], al ; jmp rax
0x0000000000450de5 : add byte ptr [rax], al ; jmp rdx
0x00000000004b4cd6 : add byte ptr [rax], al ; js 0x4b4c6f ; cmc ; call qword ptr [rdi]
0x00000000004b5106 : add byte ptr [rax], al ; js 0x4b50aa ; cmc ; jmp qword ptr [rax]
0x000000000043112e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043113e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043114e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043115e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043116e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043108d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004310ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004310be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004310ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004310de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004310ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004310fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043103a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043110e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043111e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043109e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004010ac : add byte ptr [rax], al ; leave ; ret
0x00000000004b9f2a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jp 0x4b9f38 ; add byte ptr [rax], dh ; stc ; call qword ptr [rsi]
0x00000000004bec2a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov dword ptr [rax], 0xfd0b4000 ; call rsp
0x00000000004bde2a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov ecx, 0xdba00000 ; sti ; call qword ptr [rax]
0x00000000004be72a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000004b7332 : add byte ptr [rax], al ; mov ah, 0x4e ; add byte ptr [rax], al ; mov byte ptr [rax - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004bce32 : add byte ptr [rax], al ; mov ah, 0xa9 ; add byte ptr [rax], al ; test al, 0x68 ; std ; jmp qword ptr [rdi]
0x00000000004bd70e : add byte ptr [rax], al ; mov al, 0x35 ; hlt ; jmp qword ptr [rsi]
0x00000000004ba3ae : add byte ptr [rax], al ; mov al, 0x65 ; stc ; call rdx
0x00000000004babde : add byte ptr [rax], al ; mov al, 0xd1 ; stc ; call rsp
0x00000000004b942f : add byte ptr [rax], al ; mov al, 0xf8 ; call qword ptr [rcx]
0x000000000043000e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042e85e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004b7336 : add byte ptr [rax], al ; mov byte ptr [rax - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004b2c76 : add byte ptr [rax], al ; mov byte ptr [rax], ch ; cmc ; call qword ptr [rcx]
0x0000000000430afe : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004304de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000046d1f4 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000471bb4 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], eax ; jmp 0x46de2f
0x00000000004304ee : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000045eb1e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x000000000045eb3e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000045eb2e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000045eb4e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x0000000000410826 : add byte ptr [rax], al ; mov eax, 0x6c0860 ; ret
0x000000000045b4be : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00000000004587e6 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040eb5e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000441eae : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000040e8ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049149e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4914b9 ; ret
0x000000000048c8de : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x237672] ; ret
0x0000000000466fe6 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046a839 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004b4b1e : add byte ptr [rax], al ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000004bdde2 : add byte ptr [rax], al ; mov ecx, 0xdb980000 ; sti ; call qword ptr [rdx]
0x000000000043051e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402cfd : add byte ptr [rax], al ; mov edi, 0x6c32a0 ; call rax
0x000000000048f183 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048f1ab : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000042a7ee : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042af0e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000435c7e : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000476398 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000483ea2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000483f26 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000048f436 : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x0000000000464b05 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x300], rax ; ret
0x00000000004227d6 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000048f46e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000040f938 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000043d709 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000444aa0 : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000040eb6e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045a9ce : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000045a9de : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000045a9ee : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000045a9fe : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000045aa0e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000045aa1e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000045aa2e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00000000004658c1 : add byte ptr [rax], al ; mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000465e3f : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d479 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000409ff0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040da25 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000046b84e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004579fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ebce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048f3de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048f47e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048f4de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048f4ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048f48e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004399be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28a641] ; ret
0x000000000040ebae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b14e9] ; ret
0x000000000048ffbe : add byte ptr [rax], al ; mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x00000000004681ff : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408646 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f5eb : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000414c00 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000045b0f6 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000040ebde : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000414d16 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000475e33 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000459635 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x40] ; jmp 0x459607
0x0000000000439957 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000004638ee : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000435e70 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004366c6 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000435cb4 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000435ca5 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004360fa : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000456efd : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000456702 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000491b46 : add byte ptr [rax], al ; mov rdi, rsp ; call r12
0x000000000042ad4e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000409b8f : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x000000000048fa5e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000400cd4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce7 ; ret
0x00000000004bd70a : add byte ptr [rax], al ; mov word ptr [rdx + 0x35b00000], dr0 ; hlt ; jmp qword ptr [rsi]
0x00000000004b6c22 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; sbb dh, ah ; cmc ; call rdx
0x00000000004bd922 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ah, 0 ; add al, bl ; mov dr1, ebx ; call qword ptr [rax]
0x000000000048ce51 : add byte ptr [rax], al ; movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x000000000042a97e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042b05e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042afee : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004bc49e : add byte ptr [rax], al ; nop ; mov edx, dr1 ; call rdx
0x00000000004b798a : add byte ptr [rax], al ; or al, 0x55 ; add byte ptr [rax], al ; add bh, 0xf7 ; jmp qword ptr [rdi]
0x00000000004b8b8a : add byte ptr [rax], al ; or al, 0x67 ; add byte ptr [rax], al ; push rax ; clc ; call qword ptr [rax]
0x00000000004b9a26 : add byte ptr [rax], al ; or dl, cl ; clc ; call qword ptr [rax]
0x000000000040f649 : add byte ptr [rax], al ; or dword ptr [rbx], 8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a9ae : add byte ptr [rax], al ; or eax, 0x20 ; jmp 0x40a97d
0x0000000000444df9 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x00000000004bec2e : add byte ptr [rax], al ; or edi, ebp ; call rsp
0x00000000004506b0 : add byte ptr [rax], al ; pop r13 ; ret
0x00000000004505e2 : add byte ptr [rax], al ; pop r14 ; ret
0x00000000004620dd : add byte ptr [rax], al ; pop r15 ; ret
0x00000000004be5b6 : add byte ptr [rax], al ; pop rax ; pop rbx ; cld ; call qword ptr [rax]
0x000000000043329d : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000432fa7 : add byte ptr [rax], al ; pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x00000000004081e3 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000437577 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000408915 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000408b47 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040048f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004003cc : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406066 : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000040a7ab : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004baada : add byte ptr [rax], al ; pop rsp ; xchg byte ptr [rax], al ; add byte ptr [rax], ah ; sar cl, 1 ; call rcx
0x00000000004b8b8e : add byte ptr [rax], al ; push rax ; clc ; call qword ptr [rax]
0x00000000004bc7ce : add byte ptr [rax], al ; push rax ; mov ah, 0xfa ; call qword ptr [rbx]
0x00000000004084d1 : add byte ptr [rax], al ; push rbx ; sub rsp, 8 ; call 0x4147b9
0x00000000004be39f : add byte ptr [rax], al ; push rdi ; cld ; call rbx
0x00000000004b94d2 : add byte ptr [rax], al ; push rsp ; jo 0x4b94e0 ; add byte ptr [rax], bl ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004be7d2 : add byte ptr [rax], al ; push rsp ; ret
0x00000000004b4cd2 : add byte ptr [rax], al ; push rsp ; sub byte ptr [rax], al ; add byte ptr [rax - 0x70], bh ; cmc ; call qword ptr [rdi]
0x00000000004bccd2 : add byte ptr [rax], al ; push rsp ; test al, 0 ; add byte ptr [rax], bl ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004b4b1a : add byte ptr [rax], al ; pushfq ; add byte ptr es:[rax], al ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000407f3c : add byte ptr [rax], al ; ret
0x000000000049a886 : add byte ptr [rax], al ; ret 0
0x00000000004a1ac6 : add byte ptr [rax], al ; ret 0x12
0x00000000004a34fe : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a3c96 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a2506 : add byte ptr [rax], al ; ret 0x24
0x00000000004a29f6 : add byte ptr [rax], al ; ret 0x33
0x00000000004b0816 : add byte ptr [rax], al ; ret 0x4afc
0x00000000004b08fe : add byte ptr [rax], al ; ret 0x4afe
0x00000000004a12c6 : add byte ptr [rax], al ; ret 0xc
0x00000000004a16c6 : add byte ptr [rax], al ; ret 0xf
0x00000000004bd476 : add byte ptr [rax], al ; ret 0xfb88
0x00000000004a48c2 : add byte ptr [rax], al ; ret 1
0x00000000004a4ac2 : add byte ptr [rax], al ; ret 2
0x00000000004a4cc2 : add byte ptr [rax], al ; ret 3
0x00000000004a4ec2 : add byte ptr [rax], al ; ret 4
0x00000000004a0aee : add byte ptr [rax], al ; ret 5
0x00000000004a52c2 : add byte ptr [rax], al ; ret 6
0x00000000004a54c2 : add byte ptr [rax], al ; ret 7
0x00000000004a56c2 : add byte ptr [rax], al ; ret 8
0x00000000004a0ec6 : add byte ptr [rax], al ; ret 9
0x00000000004a4ebe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004ba56e : add byte ptr [rax], al ; ror cl, 1 ; stc ; call qword ptr [rdx]
0x00000000004b7b5e : add byte ptr [rax], al ; sal dil, cl ; call qword ptr [rdi]
0x00000000004bc49a : add byte ptr [rax], al ; sbb al, 0xa0 ; add byte ptr [rax], al ; nop ; mov edx, dr1 ; call rdx
0x00000000004be39a : add byte ptr [rax], al ; sbb al, 0xbf ; add byte ptr [rax], al ; add byte ptr [rdi - 4], dl ; call rbx
0x00000000004b3f86 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rax]
0x00000000004bccd6 : add byte ptr [rax], al ; sbb ch, ah ; cli ; jmp qword ptr [rdx]
0x00000000004b6c26 : add byte ptr [rax], al ; sbb dh, ah ; cmc ; call rdx
0x00000000004b6b5e : add byte ptr [rax], al ; shl dl, 1 ; cmc ; jmp rbx
0x00000000004bb16e : add byte ptr [rax], al ; shr al, 0xf9 ; jmp rdx
0x00000000004ba3aa : add byte ptr [rax], al ; sub al, 0x7f ; add byte ptr [rax], al ; mov al, 0x65 ; stc ; call rdx
0x00000000004b31aa : add byte ptr [rax], al ; sub al, 0xd ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xb], al ; call qword ptr [rdx]
0x00000000004bb3a6 : add byte ptr [rax], al ; sub al, bh ; stc ; call rax
0x00000000004b2b66 : add byte ptr [rax], al ; sub byte ptr [rsi], bl ; cmc ; call qword ptr [rax]
0x00000000004250fc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000046ba4d : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x000000000040e326 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000464f66 : add byte ptr [rax], al ; sub rsp, 8 ; call qword ptr [rip + 0x25c2c6]
0x00000000004371f5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x000000000045b4c3 : add byte ptr [rax], al ; syscall ; ret
0x00000000004bce36 : add byte ptr [rax], al ; test al, 0x68 ; std ; jmp qword ptr [rdi]
0x00000000004be586 : add byte ptr [rax], al ; test al, 0xa1 ; cld ; call qword ptr [rax]
0x00000000004bc102 : add byte ptr [rax], al ; test byte ptr [rax + rax - 0x5a61800], bl ; jmp rdi
0x00000000004b5102 : add byte ptr [rax], al ; test byte ptr [rax + rax], ch ; add byte ptr [rax - 0x65], bh ; cmc ; jmp qword ptr [rax]
0x00000000004be7e6 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004b9502 : add byte ptr [rax], al ; test byte ptr [rax], dh ; add byte ptr [rax], ch ; mov ch, 0xf8 ; call qword ptr [rcx]
0x0000000000437089 : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x00000000004bcdca : add byte ptr [rax], al ; test rax, 0x65300000 ; std ; call rcx
0x0000000000463808 : add byte ptr [rax], al ; test rax, rax ; je 0x463818 ; call rax
0x00000000004b6b12 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], r8b ; clc ; loopne 0x4b6b19 ; call qword ptr [rcx]
0x00000000004bde12 : add byte ptr [rax], al ; xchg eax, esp ; mov ecx, 0xdb980000 ; sti ; call qword ptr [rdx]
0x00000000004be712 : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000004be5b2 : add byte ptr [rax], al ; xor al, 0xc1 ; add byte ptr [rax], al ; pop rax ; pop rbx ; cld ; call qword ptr [rax]
0x00000000004bcdce : add byte ptr [rax], al ; xor byte ptr [rbp - 3], ah ; call rcx
0x00000000004b72be : add byte ptr [rax], al ; xor byte ptr [rbx - 0xa], bh ; call qword ptr [rax]
0x00000000004b9f2e : add byte ptr [rax], al ; xor byte ptr [rcx - 7], cl ; call qword ptr [rsi]
0x00000000004b31ae : add byte ptr [rax], al ; xor byte ptr [rsi - 0xb], al ; call qword ptr [rdx]
0x00000000004bd1be : add byte ptr [rax], al ; xor ch, 0xfa ; jmp rbx
0x00000000004b8bf6 : add byte ptr [rax], al ; xor dil, al ; jmp rax
0x000000000041624c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000041556e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040772b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f5f8 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000413b64 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004090a6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000484051 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000403567 : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000435bf0 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000435c15 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000435c39 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000435c59 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000435bcb : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000041bd5d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3197 : add byte ptr [rax], bh ; cmc ; call qword ptr [rax]
0x00000000004010a8 : add byte ptr [rax], bh ; leave ; ret
0x00000000004bc49b : add byte ptr [rax], bl ; add byte ptr [rax], al ; nop ; mov edx, dr1 ; call rdx
0x00000000004b7557 : add byte ptr [rax], bl ; cmp esi, edi ; call qword ptr [rax]
0x00000000004bccd7 : add byte ptr [rax], bl ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004b3f87 : add byte ptr [rax], bl ; jno 0x4b3f84 ; call qword ptr [rax]
0x00000000004b94d7 : add byte ptr [rax], bl ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b6c27 : add byte ptr [rax], bl ; out 0xf5, al ; call rdx
0x00000000004bb3a7 : add byte ptr [rax], ch ; clc ; stc ; call rax
0x00000000004b9507 : add byte ptr [rax], ch ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b8a67 : add byte ptr [rax], ch ; sahf ; std ; jmp qword ptr [rdx]
0x00000000004b7b47 : add byte ptr [rax], ch ; sal bh, cl ; jmp qword ptr [rbx]
0x00000000004b3487 : add byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x000000000048d82e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x236049], 8 ; ret
0x00000000004b73a7 : add byte ptr [rax], cl ; mov dl, 0xf6 ; jmp qword ptr [rsi]
0x000000000048d835 : add byte ptr [rax], cl ; ret
0x00000000004b31af : add byte ptr [rax], dh ; cmc ; call qword ptr [rdx]
0x00000000004b72bf : add byte ptr [rax], dh ; jnp 0x4b72bd ; call qword ptr [rax]
0x00000000004b9f2f : add byte ptr [rax], dh ; stc ; call qword ptr [rsi]
0x00000000004bcdcf : add byte ptr [rax], dh ; std ; call rcx
0x000000000040f9aa : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x40f9c0 ; xor eax, eax ; ret
0x00000000004b305f : add byte ptr [rax], dl ; cmc ; call qword ptr [rbx]
0x00000000004b94bf : add byte ptr [rax], dl ; mov ch, 0xf8 ; call qword ptr [rdi]
0x00000000004be45f : add byte ptr [rax], dl ; pop rdx ; cld ; jmp qword ptr [rax]
0x00000000004bd470 : add byte ptr [rax], r8b ; add ah, ah ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret 0xfb88
0x00000000004be870 : add byte ptr [rax], r8b ; add ah, dh ; ret
0x00000000004b6b15 : add byte ptr [rax], r8b ; clc ; loopne 0x4b6b16 ; call qword ptr [rcx]
0x00000000004b7335 : add byte ptr [rax], r8b ; mov byte ptr [rax - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004587e5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000043050d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004227d5 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000045b0f5 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000043054d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000040a9ad : add byte ptr [rax], r8b ; or eax, 0x20 ; jmp 0x40a97e
0x0000000000406065 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000043424d : add byte ptr [rax], r8b ; ret
0x00000000004b6b5d : add byte ptr [rax], r8b ; shl dl, 1 ; cmc ; jmp rbx
0x00000000004b72bd : add byte ptr [rax], r8b ; xor byte ptr [rbx - 0xa], bh ; call qword ptr [rax]
0x000000000048fd0d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004090a5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000046b4ec : add byte ptr [rbp + 0x11], dh ; xor eax, eax ; add rsp, 0x78 ; ret
0x000000000049387b : add byte ptr [rbp + 0x1e], dh ; ret
0x000000000040aa82 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000450775 : add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x000000000046b413 : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x000000000046b372 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x48 ; ret
0x000000000046c12f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000046c01f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004be9db : add byte ptr [rbp + rax*8], bl ; add byte ptr [rax + 7], dl ; std ; jmp rsp
0x00000000004268d6 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x6fc
0x0000000000432e8f : add byte ptr [rbp + rcx*4 + 0x40], cl ; add dword ptr [rbp + 0x39], ecx ; ret
0x00000000004bf203 : add byte ptr [rbp + rcx*8 + 0x21680000], al ; std ; call qword ptr [rbx]
0x00000000004b9a23 : add byte ptr [rbp + rsi*2 - 0x35f80000], ah ; clc ; call qword ptr [rax]
0x00000000004b9a3b : add byte ptr [rbp + rsi*2 - 0x36000000], bh ; clc ; call qword ptr [rdx]
0x00000000004b9a0b : add byte ptr [rbp + rsi*2 - 0x36000000], cl ; clc ; call qword ptr [rbx]
0x000000000045c2b2 : add byte ptr [rbp - 0x1f3eadfc], cl ; add ch, byte ptr [rcx] ; ret
0x0000000000491e38 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x000000000043708a : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000415eb7 : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000407d87 : add byte ptr [rbp - 0x77], cl ; ret 0xf41
0x000000000040abdf : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x8445
0x0000000000496364 : add byte ptr [rbp - 8], ch ; call qword ptr [rax]
0x00000000004bd1bb : add byte ptr [rbp*4 - 0xa800000], bh ; cli ; jmp rbx
0x000000000041f069 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000048c69d : add byte ptr [rbx + 0x23717c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004683d5 : add byte ptr [rbx + 0x258e330d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043329e : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000464000 : add byte ptr [rbx + 0x25fee915], cl ; add bh, dh ; ret 0x804
0x0000000000409fd8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040f788 : add byte ptr [rbx + 0x2b303005], al ; add byte ptr [rcx], al ; ret
0x000000000040ec35 : add byte ptr [rbx + 0x2b3ac705], al ; add byte ptr [rcx], al ; ret
0x000000000040aeaf : add byte ptr [rbx + 0x38e9707f], cl ; ret 2
0x0000000000437578 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000043051f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043004f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00000000004084d2 : add byte ptr [rbx + 0x48], dl ; sub esp, 8 ; call 0x4147b8
0x0000000000432fa8 : add byte ptr [rbx + 0x49], bl ; lea eax, dword ptr [rcx + 1] ; pop rbp ; ret
0x000000000042a7ef : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000040f64a : add byte ptr [rbx + 0x5d5b080b], al ; pop r12 ; ret
0x0000000000464bb6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000408916 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000043aa65 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408b48 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400490 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004003cd : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406067 : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000049149f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x00000000004bf158 : add byte ptr [rbx + 0xe], bl ; adc byte ptr [rbx + 0xa4a0202], al ; ret
0x000000000044499a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b3f83 : add byte ptr [rbx + rbx], al ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rax]
0x00000000004590c2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000046d177 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047b957 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004bb7a3 : add byte ptr [rbx + rdx*4], ah ; add byte ptr [rax], al ; call 0xffffffffe44bb1be
0x00000000004510e9 : add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x00000000004518d5 : add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000478097 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x4780aa ; ret
0x0000000000444627 : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x0000000000409f57 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043330f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000433308 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000433301 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000004332fa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004332f3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000433316 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000044296d : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x442941 ; pop rbx ; ret
0x0000000000438a2c : add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x00000000004081e4 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc350
0x0000000000408784 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc8f0
0x0000000000455a07 : add byte ptr [rbx - 0x7af0fe40], al ; ret 0xffdc
0x0000000000432506 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004666cf : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret 0x4803
0x000000000040c35f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0xc601
0x0000000000496258 : add byte ptr [rbx], ah ; clc ; jmp rax
0x0000000000464b0a : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046b0af : add byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x000000000046b0fa : add byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x00000000004bc7cb : add byte ptr [rbx], cl ; add byte ptr [rax - 0x4c], dl ; cli ; call qword ptr [rbx]
0x000000000045d764 : add byte ptr [rcx + 0x29], cl ; ret
0x0000000000483548 : add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000041c6f6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000455f59 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000004b31ab : add byte ptr [rcx + 0x46300000], ch ; cmc ; call qword ptr [rdx]
0x00000000004b3193 : add byte ptr [rcx + 0x46380000], dl ; cmc ; call qword ptr [rax]
0x000000000040de76 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000412b54 : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x0000000000400e10 : add byte ptr [rcx + 0x5c], al ; ret
0x00000000004506b1 : add byte ptr [rcx + 0x5d], al ; ret
0x00000000004505e3 : add byte ptr [rcx + 0x5e], al ; ret
0x00000000004620de : add byte ptr [rcx + 0x5f], al ; ret
0x0000000000425b2e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048ce52 : add byte ptr [rcx + 0x63], cl ; or al, 0x8f ; add rcx, r15 ; jmp rcx
0x00000000004243ac : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000430398 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000040f969 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x0000000000432c0f : add byte ptr [rcx + 1], cl ; ret
0x000000000044e4b1 : add byte ptr [rcx + r9*4 - 1], cl ; call 0x45a717
0x00000000004be583 : add byte ptr [rcx + rax*8], al ; add byte ptr [rax], al ; test al, 0xa1 ; cld ; call qword ptr [rax]
0x00000000004be5b3 : add byte ptr [rcx + rax*8], dh ; add byte ptr [rax], al ; pop rax ; pop rbx ; cld ; call qword ptr [rax]
0x00000000004bce33 : add byte ptr [rcx + rbp*4 + 0x68a80000], dh ; std ; jmp qword ptr [rdi]
0x00000000004bcdcb : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], dh ; std ; call rcx
0x00000000004a0ebf : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x000000000040b9b9 : add byte ptr [rcx + rcx*2], al ; pop rbx ; ret
0x00000000004227d7 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000040b070 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000471bb5 : add byte ptr [rcx + rcx*4 + 2], ah ; jmp 0x46de2e
0x000000000049179a : add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x0000000000408b73 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x414e36
0x00000000004366c7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000479c5f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000435e71 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000048fa5f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbx ; call r15
0x0000000000409b90 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x000000000044e4b2 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x45a716
0x0000000000435ca6 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000435cb5 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000043a1bc : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000046b0b3 : add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x00000000004bde2b : add byte ptr [rcx + rdi*4 - 0x24600000], ch ; sti ; call qword ptr [rax]
0x00000000004bde13 : add byte ptr [rcx + rdi*4 - 0x24680000], dl ; sti ; call qword ptr [rdx]
0x000000000049660c : add byte ptr [rcx + rdi*8], dl ; jmp rax
0x00000000004b9633 : add byte ptr [rcx + rsi*2 - 0x4a480000], dh ; clc ; jmp rsi
0x000000000044fb9d : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000467b32 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x5097149
0x000000000048d879 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x50bce90
0x000000000048f0e7 : add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2723d35
0x0000000000450de0 : add byte ptr [rcx - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x00000000004828ad : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004051c5 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000496cd0 : add byte ptr [rcx - 0x66ef0007], bl ; stc ; jmp qword ptr [rax]
0x000000000046ab0d : add byte ptr [rcx - 0x73], al ; pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000047b6c7 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x8175
0x000000000047b623 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000040747f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000437207 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000462b17 : add byte ptr [rcx - 0x77], al ; ret 0x8b44
0x0000000000471b82 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000044ed4b : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000454e08 : add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x0000000000404d47 : add byte ptr [rcx - 0x77], cl ; ret 0x75e9
0x000000000047dafc : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000406141 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000453f89 : add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x000000000044dbbf : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc5e8
0x0000000000482fa1 : add byte ptr [rcx - 0x7d], al ; ret
0x000000000040c587 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x0000000000461607 : add byte ptr [rcx - 0x7d], cl ; call 0xffffffffc2c95e17
0x0000000000415f00 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000410c0f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000041882f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004173ff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000412f7a : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000047809a : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x0000000000496764 : add byte ptr [rcx - 7], cl ; call qword ptr [rax + 0x20fff948]
0x000000000041be92 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000041beb8 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004b6226 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf607
0x00000000004b5bae : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf60d
0x000000000040164b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000004683db : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000401019 : add byte ptr [rcx], al ; ret
0x000000000043873c : add byte ptr [rcx], bh ; ret
0x0000000000413617 : add byte ptr [rcx], bh ; ret 0xa7e
0x000000000045c525 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000459724 : add byte ptr [rcx], ch ; ret
0x0000000000490c89 : add byte ptr [rcx], cl ; ret 0x5389
0x000000000046b9fc : add byte ptr [rcx], cl ; ret 0xd089
0x000000000047cab5 : add byte ptr [rcx], dh ; imul al ; ret
0x000000000040772c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048f5f9 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x000000000045971d : add byte ptr [rcx], dh ; ret
0x000000000045ee1d : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0x45ee39 ; ret
0x000000000043c2fa : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000416091 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475c96 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000484052 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000043875b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000047b563 : add byte ptr [rcx], dh ; shr al, 0xf5 ; ret 0xfffe
0x0000000000435bcc : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x0000000000455683 : add byte ptr [rdi + 0x4a6c28], bh ; call 0x401938
0x0000000000455682 : add byte ptr [rdi + 0x4a6c28], dil ; call 0x401939
0x00000000004285f5 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000043a4fe : add byte ptr [rdi + 0x6c3220], bh ; call rax
0x0000000000402cfe : add byte ptr [rdi + 0x6c32a0], bh ; call rax
0x0000000000475fb0 : add byte ptr [rdi + 0x6c3640], bh ; call rax
0x000000000048f184 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048f1ac : add byte ptr [rdi + 1], bh ; call rax
0x00000000004b6c23 : add byte ptr [rdi + rax*2 - 0x19e80000], ah ; cmc ; call rdx
0x00000000004bec2b : add byte ptr [rdi + rax*8 + 0xb400000], ch ; std ; call rsp
0x00000000004b942b : add byte ptr [rdi + rbp*2 - 0x50000000], ch ; clc ; call qword ptr [rcx]
0x00000000004b842b : add byte ptr [rdi + rbx*2 + 0x5000000], ch ; clc ; call rcx
0x00000000004b8413 : add byte ptr [rdi + rbx*2 + 0x5080000], dl ; clc ; call qword ptr [rax]
0x00000000004a16bf : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000004bb3a3 : add byte ptr [rdi + rcx*4], ah ; add byte ptr [rax], al ; sub al, bh ; stc ; call rax
0x00000000004ba3ab : add byte ptr [rdi + rdi*2], ch ; add byte ptr [rax], al ; mov al, 0x65 ; stc ; call rdx
0x00000000004be39b : add byte ptr [rdi + rdi*4], bl ; add byte ptr [rax], al ; add byte ptr [rdi - 4], dl ; call rbx
0x00000000004be3a0 : add byte ptr [rdi - 4], dl ; call rbx
0x00000000004b8b8b : add byte ptr [rdi], cl ; add byte ptr [rax], al ; push rax ; clc ; call qword ptr [rax]
0x0000000000429f8a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000042afef : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000042b05f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043daa8 : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043daf2 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000404ad8 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000456c4f : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000041869f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004243bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041bf3f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422b7f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041bdcf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041bdbf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000041bdaf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004331f7 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000402e4b : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000048078b : add byte ptr [rdi], cl ; ret 0xc801
0x0000000000433082 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000410229 : add byte ptr [rdi], cl ; test dword ptr [rdx + 0x67], edi ; add byte ptr [rax], al ; ret
0x000000000040ec71 : add byte ptr [rdi], cl ; test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x000000000040ca56 : add byte ptr [rdi], cl ; test dword ptr [rsi + 0x22], ebx ; add byte ptr [rax], al ; ret
0x00000000004750a1 : add byte ptr [rdi], cl ; xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046e76e : add byte ptr [rdi], cl ; xchg dword ptr [rcx], ebx ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000412a99 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000041406b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x000000000045b800 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc031
0x000000000045bc59 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000040037d : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000463468 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x0000000000460121 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004503ac : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b8bf3 : add byte ptr [rdi], dh ; add byte ptr [rax + 0x32], cl ; clc ; jmp rax
0x000000000043000f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000042e85f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000040b6d6 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000004bb940 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa530202], al ; ret
0x00000000004bb970 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa5b0202], al ; ret
0x000000000046b0fe : add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x000000000048f3c7 : add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x00000000004b9f2b : add byte ptr [rdx + rdi*2 + 0x49300000], ch ; stc ; call qword ptr [rsi]
0x00000000004a1abf : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x00000000004bd70b : add byte ptr [rdx + rsi*4 + 0x35b00000], cl ; hlt ; jmp qword ptr [rsi]
0x000000000049699c : add byte ptr [rdx - 7], 0xff ; and byte ptr [rax], bh ; stc ; jmp rax
0x0000000000444a9e : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x00000000004b8120 : add byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x00000000004961f4 : add byte ptr [rdx], ch ; clc ; call rax
0x0000000000496690 : add byte ptr [rip + 0x16d0fff9], dl ; stc ; call rax
0x0000000000475e30 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004246b4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041bcc4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000435c7f : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000435e6c : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000435d38 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000435cb0 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000004360ea : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000435e5d : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000435d29 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000435ca1 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000004b6b13 : add byte ptr [rsi + rax*2 - 0x1f080000], dl ; cmc ; call qword ptr [rcx]
0x00000000004baadb : add byte ptr [rsi + rax*4], bl ; add byte ptr [rax], ah ; sar cl, 1 ; call rcx
0x00000000004b3ab3 : add byte ptr [rsi + rax], dl ; add al, bl ; push rsi ; cmc ; jmp rsp
0x00000000004b72bb : add byte ptr [rsi + rcx*2], bh ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xa], bh ; call qword ptr [rax]
0x0000000000496d28 : add byte ptr [rsi - 0x61ef0007], bl ; stc ; jmp qword ptr [rax]
0x000000000045c09d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004589ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004b4b1b : add byte ptr [rsi - 0x76c00000], bl ; cmc ; jmp qword ptr [rcx]
0x00000000004556da : add byte ptr [rsi - 0x77], ah ; or cl, ch ; push rbp ; ret
0x000000000049697c : add byte ptr [rsi - 7], al ; call qword ptr [rax + 0x20fff945]
0x00000000004b622b : add byte ptr [rsi], 0xd ; ret 0xf607
0x00000000004b5bb3 : add byte ptr [rsi], 0xd ; ret 0xf60d
0x00000000004961e0 : add byte ptr [rsi], ah ; clc ; call rax
0x000000000040048d : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b5103 : add byte ptr [rsp + rbp - 0x64880000], al ; cmc ; jmp qword ptr [rax]
0x00000000004b9133 : add byte ptr [rsp + rbp*2 - 0x68380000], dh ; clc ; call qword ptr [rdx]
0x00000000004bc103 : add byte ptr [rsp + rbx*4 + 0x59e80000], al ; cli ; jmp rdi
0x00000000004a12bf : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000004b080f : add byte ptr [rsp + rdi*8 + 0x4a], ch ; add byte ptr [rax], al ; ret 0x4afc
0x00000000004bd923 : add byte ptr [rsp + rsi*4 - 0x71280000], ah ; sti ; call qword ptr [rax]
0x00000000004b88f3 : add byte ptr [rsp], dh ; add al, ch ; sbb edi, eax ; call rdx
0x000000000045dd95 : add byte ptr es:[rax - 0x7d], cl ; ret
0x00000000004b4b1d : add byte ptr es:[rax], al ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000045d763 : add byte ptr es:[rcx + 0x29], cl ; ret
0x000000000045b7ff : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xc031
0x000000000045bc58 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000437087 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000004b88f5 : add byte ptr fs:[rax], al ; call 0xffffffffd34b811e
0x000000000040be60 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044c34f : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x00000000004af41c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004af41d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000044c322 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045c2b8 : add ch, byte ptr [rcx] ; ret
0x000000000045c362 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004594da : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004062ea : add ch, cl ; ret 0xfffd
0x0000000000473bda : add ch, cl ; xchg eax, esi ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000049673d : add cl, bh ; call rax
0x000000000042e887 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000476a51 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000047c48f : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000040a69d : add cl, byte ptr [rax + 0x39] ; ret
0x000000000045814a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000463920 : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000442557 : add cl, byte ptr [rax + 1] ; ret 0x3b48
0x000000000044d287 : add cl, byte ptr [rax + 1] ; ret 0x8348
0x0000000000412929 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x000000000042e888 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000042e7f5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000044ed81 : add cl, byte ptr [rax - 0x77] ; ret 0xf748
0x000000000040e892 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000045f2cd : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000043dd75 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000004194f0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000400a7e : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000004565ba : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000419553 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000042ae32 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000047c469 : add cl, byte ptr [rcx + 0x29] ; ret
0x000000000045d782 : add cl, byte ptr [rcx + 0x39] ; ret
0x0000000000407ce8 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x407d04
0x00000000004344b0 : add cl, byte ptr [rdi] ; ret 0xb5eb
0x00000000004343a0 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000456e34 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x00000000004bf15e : add cl, byte ptr [rdx + 0xa] ; ret
0x000000000046fb5a : add cl, ch ; jmp 0x4946fb67
0x0000000000416ecf : add cl, ch ; jmp rdi
0x00000000004068d2 : add cl, ch ; ret
0x0000000000472680 : add cl, ch ; ret 0xffb2
0x0000000000402fb5 : add cl, ch ; ret 0xffed
0x000000000040457b : add cl, ch ; ret 0xfff1
0x000000000048d6b2 : add cl, ch ; ret 0xfff7
0x00000000004010ad : add cl, cl ; ret
0x000000000046dba7 : add dh, al ; add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004a4527 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042afe3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434d4b : add dh, bl ; ret
0x0000000000411edc : add dh, dh ; ret
0x000000000041c5a8 : add dh, dh ; ret 0x7404
0x0000000000409087 : add dh, dh ; ret 0x7420
0x0000000000430f37 : add dh, dh ; ret 0x7501
0x0000000000430f44 : add dh, dh ; ret 0x7502
0x0000000000430f51 : add dh, dh ; ret 0x7504
0x0000000000430f09 : add dh, dh ; ret 0x7510
0x0000000000430f16 : add dh, dh ; ret 0x7520
0x0000000000430f23 : add dh, dh ; ret 0x7540
0x000000000046486b : add dh, dh ; ret 0xf08
0x00000000004bb946 : add dl, byte ptr [rbx + 0xa] ; ret
0x00000000004b9a10 : add dl, cl ; clc ; call qword ptr [rbx]
0x00000000004b9a40 : add dl, cl ; clc ; call qword ptr [rdx]
0x00000000004b7364 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x000000000048de40 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000043baf0 : add dword ptr [r8 - 0x7d], r9d ; ret 0x4d02
0x000000000043e63a : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000430011 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000041156b : add dword ptr [rax + 0x39], ecx ; ret
0x000000000045a12e : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000459f6d : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x000000000046c9ed : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000407b9f : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x000000000048fc56 : add dword ptr [rax + 0x63], ecx ; ret
0x000000000047303f : add dword ptr [rax + 1], ecx ; ret
0x0000000000474a2e : add dword ptr [rax + 1], ecx ; ret 0x148
0x00000000004069d6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004023d3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000042e861 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000004680dd : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000042e7f2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000040d713 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000040d8da : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000459651 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000004423f6 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x0000000000414ed2 : add dword ptr [rax - 0x7b], ecx ; ret 0x2875
0x000000000041469e : add dword ptr [rax - 0x7b], ecx ; ret 0x7075
0x000000000041213b : add dword ptr [rax - 0x7b], ecx ; ret 0x850f
0x0000000000404adc : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000467362 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046160b : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000445569 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000437b9d : add dword ptr [rax - 0x7d], ecx ; ret 0x4838
0x000000000045a47b : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000445a97 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000043baf1 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000443337 : add dword ptr [rax - 0x7d], ecx ; ret 0x8308
0x000000000044462d : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x00000000004564cc : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000456d4b : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000040c342 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000040c362 : add dword ptr [rax - 0x7d], ecx ; ret 0xc601
0x000000000046dbab : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d6f6 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rbx], 0xeb ; ret
0x0000000000472394 : add dword ptr [rax], 0x83480000 ; ret
0x0000000000401182 : add dword ptr [rax], eax ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004084b6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000004672ba : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004695c1 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000044c1b6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000463896 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048d202 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044459d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000048eff5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000459128 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000414c27 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000048cee4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000404abd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046154d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000438161 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004192cd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040f8ba : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041b320 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000421dcf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419221 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000441b1c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004a452a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a36da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a3502 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a34fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a3c92 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000048f186 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401818 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000435c81 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000048fa0d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000046d1f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000046a837 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000048f678 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000435e6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000435d3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000435cb2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004360f8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000456efb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000456700 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004506ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x00000000004505e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x00000000004620db : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r15 ; ret
0x000000000040dee3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043389c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004683e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004343cb : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000408914 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000048ef85 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400d09 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004387f3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000483546 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000044ed49 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000415efe : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000045c523 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000004068d0 : add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000048ede9 : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000430f35 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000430f42 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000430f4f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000430f07 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000430f14 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000430f21 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000408b72 : add dword ptr [rax], eax ; mov rdi, r13 ; call 0x414e37
0x0000000000414ef3 : add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x0000000000417006 : add dword ptr [rax], eax ; ret
0x00000000004672b9 : add dword ptr [rax], r8d ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041b865 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000432e93 : add dword ptr [rbp + 0x39], ecx ; ret
0x0000000000479c55 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000040f9e7 : add dword ptr [rbp - 0x77], ecx ; ret
0x000000000042aea2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000413611 : add dword ptr [rbx + 0x2ad21805], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000405542 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x00000000004683dc : add dword ptr [rbx - 0x3d], ebx ; mov eax, 1 ; pop rbx ; ret
0x0000000000452b30 : add dword ptr [rbx - 0x7bf0fe40], eax ; ret
0x000000000044462a : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000004bf43b : add dword ptr [rbx], eax ; ret
0x000000000047e363 : add dword ptr [rcx + 1], ecx ; ret
0x0000000000466b43 : add dword ptr [rcx + rax + 0x4a], ecx ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000043ee67 : add dword ptr [rcx + rcx*4 + 0x55], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000045c325 : add dword ptr [rcx - 0x73], eax ; push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000044072b : add dword ptr [rcx - 0x75], eax ; or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x000000000042e891 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000475465 : add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x0000000000440902 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000478aad : add dword ptr [rcx], edi ; ret
0x0000000000478b3c : add dword ptr [rcx], edi ; ret 0xdf75
0x0000000000422e6c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bcbe5 : add dword ptr [rdi], 0x48 ; or eax, 0x3520303 ; ret
0x000000000043d0fa : add dword ptr [rdi], 1 ; jmp 0x43d0c6
0x000000000048c672 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x000000000048c6db : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bb9dc : add dword ptr [rdx], 0x4a ; ret
0x00000000004b6ec4 : add dword ptr [rdx], 0x51 ; ret
0x00000000004b8125 : add dword ptr [rdx], 0x59 ; ret
0x00000000004b6ecd : add dword ptr [rdx], 0x65 ; ret
0x00000000004b8460 : add dword ptr [rdx], ecx ; ret
0x000000000040f789 : add dword ptr [rip + 0x2b3030], 1 ; ret
0x000000000040ec36 : add dword ptr [rip + 0x2b3ac7], 1 ; ret
0x00000000004342d7 : add dword ptr [rsi + rax*2], 0 ; ret
0x000000000042e872 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004b6918 : add dword ptr [rsi], 2 ; fimul word ptr [rdx] ; ret
0x00000000004b7365 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000004b6227 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf607
0x00000000004b5baf : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf60d
0x0000000000489f87 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ca16 : add eax, 0x11f55 ; ret
0x0000000000419496 : add eax, 0x13d25 ; ret
0x000000000041be68 : add eax, 0x15313 ; ret
0x0000000000417003 : add eax, 0x19e58 ; ret
0x000000000041be4c : add eax, 0x1f ; ret
0x000000000048c8e1 : add eax, 0x237672 ; ret
0x0000000000467acc : add eax, 0x25bfb7 ; mov qword ptr [rsi], rax ; ret
0x00000000004679fa : add eax, 0x25c091 ; add rsp, 8 ; ret
0x0000000000465032 : add eax, 0x25c201 ; add rsp, 8 ; jmp rax
0x000000000045c180 : add eax, 0x267f33 ; add rsp, 8 ; ret
0x0000000000444996 : add eax, 0x27d15d ; je 0x4449a8 ; ret
0x0000000000441fc2 : add eax, 0x2812a9 ; ret
0x00000000004399c2 : add eax, 0x28a641 ; ret
0x00000000004389d3 : add eax, 0x28b5e8 ; pop rbx ; ret
0x0000000000438721 : add eax, 0x28b882 ; test eax, eax ; je 0x438739 ; ret
0x00000000004343c6 : add eax, 0x28e4c1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000414799 : add eax, 0x2adfee ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ebb2 : add eax, 0x2b14e9 ; ret
0x000000000040f78a : add eax, 0x2b3030 ; add ebx, esi ; ret
0x000000000040ec96 : add eax, 0x2b3a69 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004016fb : add eax, 0x2be970 ; xor eax, eax ; ret
0x0000000000400e0c : add eax, 0x2c031f ; pop r12 ; ret
0x0000000000401015 : add eax, 0x2c0c25 ; add ebx, esi ; ret
0x00000000004b7363 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000475e31 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x00000000004300a8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000042e8d8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000004305a6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000430129 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042e919 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004a0ae9 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x00000000004a50bd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000004764d3 : add eax, 0x5c415d5b ; ret
0x000000000041cb42 : add eax, 0x79 ; ret
0x0000000000418ebd : add eax, 0x83480000 ; ret 0x4910
0x00000000004203c1 : add eax, 0x83480000 ; ret 0xe910
0x0000000000418e11 : add eax, 0x83480000 ; ret 0xeb10
0x00000000004300ab : add eax, 0x8428d48 ; ret
0x000000000041be60 : add eax, 0x852b ; ret
0x000000000045c247 : add eax, 0x89d02944 ; ret
0x00000000004253ea : add eax, 0xc0310000 ; ret
0x000000000043012d : add eax, 0xc428d48 ; ret
0x0000000000430c0d : add eax, 0xc478d48 ; ret
0x00000000004b6427 : add eax, 0xd1cfff6 ; std ; cmc ; jmp qword ptr [rdx]
0x000000000043611c : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000436141 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x000000000043628a : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000436323 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000042ae93 : add eax, 0xf7f0ff3 ; ret
0x000000000045c42e : add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x000000000046735d : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046b65a : add eax, 0xfffffff0 ; ret
0x000000000045a9a1 : add eax, 1 ; ret
0x000000000045a998 : add eax, 2 ; ret
0x000000000048d6f8 : add eax, 3 ; jmp 0x48d6c4
0x000000000045a9b1 : add eax, 3 ; ret
0x0000000000417266 : add eax, 5 ; ret
0x000000000041cba5 : add eax, 6 ; ret
0x000000000049187c : add eax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004449f9 : add eax, dword ptr [0] ; ret
0x000000000046501e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000472e2f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041905d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420561 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419081 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043a473 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043664d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004366a4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000436724 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000436824 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000045a9f3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046b0b1 : add eax, dword ptr [rax] ; add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x0000000000437205 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000463f23 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000433080 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x000000000046b0fc : add eax, dword ptr [rax] ; add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x00000000004684d9 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7510
0x0000000000464869 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000004168ff : add eax, dword ptr [rax] ; add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x00000000004010a7 : add eax, dword ptr [rax] ; mov eax, 0 ; leave ; ret
0x000000000043a1bb : add eax, dword ptr [rax] ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000043a8c9 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x0000000000439b37 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r15
0x0000000000433280 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004332a3 : add eax, dword ptr [rax] ; ret
0x00000000004bdd7b : add eax, dword ptr [rbp + 0xe] ; and byte ptr [rbx + 0x1ac0304], al ; ret
0x000000000045c33d : add eax, dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x000000000043ee7c : add eax, dword ptr [rbx + 0x394807e0] ; ret
0x00000000004bbe6b : add eax, dword ptr [rbx + 0xae40204] ; ret
0x00000000004054be : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x70e9
0x0000000000400ab0 : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x0000000000465f79 : add eax, dword ptr [rbx] ; call rax
0x0000000000465a36 : add eax, dword ptr [rbx] ; mov qword ptr [rbp - 0xe0], r11 ; call rax
0x00000000004785b6 : add eax, dword ptr [rcx + 0x5f] ; ret
0x000000000045c329 : add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000046541f : add eax, dword ptr [rdi] ; call rax
0x000000000046b402 : add eax, dword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x000000000046982c : add eax, dword ptr [rdx + 8] ; call rax
0x000000000045efca : add eax, dword ptr [rsi + rdx] ; ret
0x0000000000465e46 : add eax, dword ptr [rsi] ; call rax
0x000000000043332c : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000048fd57 : add eax, eax ; jmp r8
0x000000000044e710 : add eax, eax ; mov eax, r8d ; ret
0x000000000048dac7 : add eax, ebx ; jmp rax
0x000000000041bb7a : add eax, ecx ; ret
0x000000000041bb77 : add eax, edi ; add rax, rcx ; ret
0x000000000048eb24 : add eax, edi ; jmp rax
0x000000000041bdb4 : add eax, edi ; ret
0x0000000000400fcb : add eax, edx ; sar rax, 1 ; jne 0x400fdc ; pop rbp ; ret
0x000000000041977e : add eax, edx ; sub rax, rdi ; ret
0x000000000048e617 : add eax, esi ; jmp r8
0x000000000045b501 : add eax, esi ; ret
0x000000000044bf8f : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000400e0e : add ebp, dword ptr [rax + rax] ; pop r12 ; ret
0x0000000000477e07 : add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000476d8b : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000048d6fa : add ebp, ebx ; ret
0x000000000040d873 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000438810 : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x438877 ; ret
0x0000000000479b31 : add ebx, dword ptr [rdx] ; and eax, 0xf ; cmp al, 0xa ; jne 0x479aee ; call rbx
0x000000000046bae1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000043d0fc : add ebx, ebp ; ret
0x000000000046f0b7 : add ebx, ebp ; ret 0x9d8b
0x000000000042b053 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040101a : add ebx, esi ; ret
0x000000000041c538 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x41c529 ; ret
0x000000000042e8c5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000410b94 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000047aedf : add ecx, dword ptr [rax - 0x46] ; ret
0x000000000042e8c9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000004794f5 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000436b9b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000004577ba : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004455d5 : add ecx, dword ptr [rax - 0x7d] ; ret 0xf301
0x0000000000435e91 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000004b61e6 : add ecx, dword ptr [rax] ; idiv bh ; sbb al, 0xd ; or al, dh ; cmc ; jmp qword ptr [rdx]
0x0000000000491797 : add ecx, dword ptr [rbp - 0x75] ; add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x000000000042adc2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000430544 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000440916 : add ecx, dword ptr [rcx + 0x39] ; ret
0x000000000048eb1e : add ecx, dword ptr [rcx + 0x63] ; add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000479c22 : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000042e8c6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046e72b : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x000000000045f9a5 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xe74
0x00000000004054c1 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000040894a : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004b5b6e : add ecx, dword ptr [rsi] ; idiv bh ; sbb al, 0xd ; lahf ; fdivr st(5), st(0) ; jmp qword ptr [rdx]
0x000000000049176f : add ecx, eax ; jmp r9
0x000000000048dbc8 : add ecx, eax ; jmp rcx
0x000000000040e933 : add ecx, eax ; xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x0000000000407e78 : add ecx, ebp ; ret
0x000000000045f3e3 : add ecx, ebp ; ret 0xfffe
0x0000000000425a0e : add ecx, ebx ; jmp r9
0x00000000004243b2 : add ecx, ebx ; jmp rcx
0x0000000000496741 : add ecx, edi ; jmp qword ptr [rax]
0x000000000048ce58 : add ecx, edi ; jmp rcx
0x0000000000466451 : add ecx, esi ; call rcx
0x0000000000425a0b : add edi, edx ; add r9, r11 ; jmp r9
0x000000000043926a : add edi, esi ; dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x00000000004bcbea : add edx, dword ptr [rdx + 3] ; ret
0x000000000046c632 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000048e1d2 : add edx, ebp ; jmp rdx
0x0000000000449686 : add edx, ebx ; call qword ptr [r11 + rax*8]
0x000000000040055d : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400537
0x000000000048e3c7 : add edx, ecx ; jmp rdx
0x00000000004964cc : add edx, esi ; clc ; call qword ptr [rcx + 0x21fff8f2]
0x0000000000453381 : add edx, esp ; call qword ptr [r11 + rax*8]
0x000000000042af73 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000044499c : add esi, ebx ; ret
0x0000000000433342 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000425a08 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000041c380 : add esi, esi ; ret
0x0000000000467b39 : add esi, esi ; ret 0xf304
0x0000000000483b07 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004055c1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b25c : add esp, 0x10 ; pop rbx ; ret
0x0000000000466fe2 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x000000000046541b : add esp, 0x18 ; add rax, qword ptr [r15] ; call rax
0x0000000000434d8d : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000434130 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000040f348 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d7d3 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416251 : add esp, 0x18 ; ret
0x00000000004387f0 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000446a73 : add esp, 0x20 ; mov rax, r9 ; pop rbx ; ret
0x0000000000483efc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000409111 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004334b9 : add esp, 0x20 ; pop rbx ; ret
0x00000000004334a1 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000436cdf : add esp, 0x2018 ; pop rbx ; pop rbp ; ret
0x00000000004763e9 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x0000000000406969 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000409f5b : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045eedb : add esp, 0x28 ; ret
0x000000000046a553 : add esp, 0x30 ; jmp r11
0x0000000000433b21 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b2d6 : add esp, 0x30 ; pop rbx ; ret
0x000000000046a633 : add esp, 0x30 ; ret
0x00000000004764b6 : add esp, 0x38 ; ret
0x0000000000483fa6 : add esp, 0x40 ; mov rax, rbx ; pop rbx ; ret
0x000000000046b94c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046a1db : add esp, 0x48 ; jmp r11
0x000000000045ed42 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000046b376 : add esp, 0x48 ; ret
0x000000000046b8da : add esp, 0x50 ; jmp qword ptr [rax]
0x000000000046b406 : add esp, 0x58 ; ret
0x0000000000416844 : add esp, 0x70 ; pop rbx ; ret
0x0000000000416902 : add esp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x000000000046b4f2 : add esp, 0x78 ; ret
0x000000000045e7f9 : add esp, 0x90 ; pop rbx ; ret
0x00000000004003c8 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000444cfe : add esp, 0xd0 ; ret
0x0000000000407f38 : add esp, 0xd8 ; ret
0x000000000046f0b5 : add esp, 1 ; jmp 0x46f080
0x0000000000465038 : add esp, 8 ; jmp rax
0x000000000044bf12 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004156d5 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000434cea : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004104ab : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000416fd4 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000407696 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000483e87 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000458740 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040b11c : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401b83 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c6 : add esp, 8 ; ret
0x00000000004195b9 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000467961 : add esp, 8 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x0000000000466b42 : add qword ptr [r9 + r8 + 0x4a], rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000438160 : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a3ed : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d0f9 : add qword ptr [rdi], 1 ; jmp 0x43d0c7
0x000000000042b052 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000046541a : add r12, 0x18 ; add rax, qword ptr [r15] ; call rax
0x000000000046f0b4 : add r12, 1 ; jmp 0x46f081
0x000000000042afe2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000042af72 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004883b0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e616 : add r8, r14 ; jmp r8
0x000000000048fd56 : add r8, rax ; jmp r8
0x00000000004148f6 : add r8b, bpl ; ret
0x0000000000481367 : add r8b, bpl ; ret 0xf805
0x0000000000481067 : add r8b, bpl ; ret 0xf808
0x000000000047e2fe : add r8b, bpl ; sub esi, dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405685 : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044e70f : add r8d, eax ; mov eax, r8d ; ret
0x0000000000425a0d : add r9, r11 ; jmp r9
0x000000000049176e : add r9, rax ; jmp r9
0x000000000040457a : add r9b, bpl ; ret 0xfff1
0x0000000000407ce7 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x407d05
0x000000000046b659 : add rax, -0x10 ; ret
0x0000000000489b62 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000436289 : add rax, -0x9cf0000 ; mov rdi, r14 ; call rbx
0x000000000045a9a0 : add rax, 1 ; ret
0x000000000045a997 : add rax, 2 ; ret
0x000000000048d6f7 : add rax, 3 ; jmp 0x48d6c5
0x000000000045a9b0 : add rax, 3 ; ret
0x000000000049187b : add rax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004449f8 : add rax, qword ptr [0] ; ret
0x0000000000465e45 : add rax, qword ptr [r14] ; call rax
0x000000000046541e : add rax, qword ptr [r15] ; call rax
0x0000000000465f78 : add rax, qword ptr [rbx] ; call rax
0x000000000046b401 : add rax, qword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x000000000046982b : add rax, qword ptr [rdx + 8] ; call rax
0x00000000004449f7 : add rax, qword ptr fs:[0] ; ret
0x000000000048dac6 : add rax, r11 ; jmp rax
0x000000000048eb23 : add rax, r15 ; jmp rax
0x000000000041bb79 : add rax, rcx ; ret
0x000000000041bb76 : add rax, rdi ; add rax, rcx ; ret
0x000000000041bdb3 : add rax, rdi ; ret
0x0000000000400fca : add rax, rdx ; sar rax, 1 ; jne 0x400fdd ; pop rbp ; ret
0x000000000041977d : add rax, rdx ; sub rax, rdi ; ret
0x0000000000440915 : add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000004243b1 : add rcx, r11 ; jmp rcx
0x000000000048ce57 : add rcx, r15 ; jmp rcx
0x000000000048dbc7 : add rcx, rax ; jmp rcx
0x000000000048cfac : add rcx, rdi ; jmp rcx
0x0000000000466450 : add rcx, rsi ; call rcx
0x0000000000425a0a : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000453380 : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000046c631 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000048e1d1 : add rdx, rbp ; jmp rdx
0x0000000000449685 : add rdx, rbx ; call qword ptr [r11 + rax*8]
0x000000000048e3c6 : add rdx, rcx ; jmp rdx
0x0000000000483b06 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004055c0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b25b : add rsp, 0x10 ; pop rbx ; ret
0x0000000000434d8c : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000043412f : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000040d7d2 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416250 : add rsp, 0x18 ; ret
0x00000000004387ef : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000446a72 : add rsp, 0x20 ; mov rax, r9 ; pop rbx ; ret
0x0000000000483efb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000409110 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004334b8 : add rsp, 0x20 ; pop rbx ; ret
0x00000000004334a0 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000436cde : add rsp, 0x2018 ; pop rbx ; pop rbp ; ret
0x00000000004763e8 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x0000000000409f5a : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045eeda : add rsp, 0x28 ; ret
0x000000000046a552 : add rsp, 0x30 ; jmp r11
0x0000000000433b20 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b2d5 : add rsp, 0x30 ; pop rbx ; ret
0x000000000046a632 : add rsp, 0x30 ; ret
0x00000000004764b5 : add rsp, 0x38 ; ret
0x0000000000483fa5 : add rsp, 0x40 ; mov rax, rbx ; pop rbx ; ret
0x000000000046b94b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046a1da : add rsp, 0x48 ; jmp r11
0x000000000045ed41 : add rsp, 0x48 ; movzx eax, al ; ret
0x000000000046b375 : add rsp, 0x48 ; ret
0x000000000046b8d9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046b405 : add rsp, 0x58 ; ret
0x0000000000416843 : add rsp, 0x70 ; pop rbx ; ret
0x0000000000416901 : add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x000000000046b4f1 : add rsp, 0x78 ; ret
0x000000000045e7f8 : add rsp, 0x90 ; pop rbx ; ret
0x00000000004003c7 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000444cfd : add rsp, 0xd0 ; ret
0x0000000000407f37 : add rsp, 0xd8 ; ret
0x0000000000465037 : add rsp, 8 ; jmp rax
0x000000000044bf11 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004156d4 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000434ce9 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004104aa : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000416fd3 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000407695 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000483e86 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000045873f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401b82 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c5 : add rsp, 8 ; ret
0x00000000004195b8 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042203e : add sil, sil ; ret 0x7404
0x000000000048c6da : add word ptr [rdx + rax*2], 1 ; ret
0x000000000043984a : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000476259 : and al, 0 ; call rax
0x000000000047616f : and al, 0 ; jmp rax
0x00000000004344ae : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0xb5eb
0x0000000000465418 : and al, 0x10 ; add r12, 0x18 ; add rax, qword ptr [r15] ; call rax
0x0000000000465f76 : and al, 0x10 ; add rax, qword ptr [rbx] ; call rax
0x00000000004334b6 : and al, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048f4b8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000441d72 : and al, 0x10 ; call r12
0x0000000000441e4f : and al, 0x10 ; call r15
0x000000000043545c : and al, 0x10 ; call rax
0x00000000004134a3 : and al, 0x10 ; call rdx
0x0000000000438414 : and al, 0x10 ; je 0x438428 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483e4b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000048fbc9 : and al, 0x10 ; mov rsi, qword ptr [rbp] ; call r14
0x0000000000459722 : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x0000000000401288 : and al, 0x18 ; call rax
0x000000000046b69d : and al, 0x18 ; mov edi, 0x6c11e0 ; call rax
0x00000000004764b0 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x0000000000441d6d : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000441e4a : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r15
0x00000000004148dd : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000483f71 : and al, 0x20 ; je 0x483f85 ; mov edi, 0x6c11e0 ; call rax
0x000000000041349e : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000043fc2b : and al, 0x24 ; jmp 0x43fbf4
0x000000000043fc2a : and al, 0x24 ; jmp 0x43fbf5
0x00000000004ad564 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004132bc : and al, 0x28 ; call rax
0x000000000045ac95 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004154b1 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000044ed47 : and al, 0x2c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000440d63 : and al, 0x2c ; jmp 0x440d2c
0x0000000000440d62 : and al, 0x2c ; jmp 0x440d2d
0x000000000046b370 : and al, 0x30 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x48 ; ret
0x0000000000466faf : and al, 0x30 ; call r9
0x00000000004638f3 : and al, 0x30 ; call rax
0x000000000045ec92 : and al, 0x30 ; jmp 0x45ec48
0x000000000045ec91 : and al, 0x30 ; jmp 0x45ec49
0x00000000004132b7 : and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000043d142 : and al, 0x30 ; mov qword ptr [rax], rbx ; jmp 0x43d111
0x000000000043d141 : and al, 0x30 ; mov qword ptr [rax], rbx ; jmp 0x43d112
0x000000000045ae95 : and al, 0x30 ; mov rdi, r12 ; call rbx
0x0000000000411b97 : and al, 0x30 ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000408b93 : and al, 0x38 ; call 0x414e34
0x000000000043bd5d : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043c67c : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043bc64 : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000466faa : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000046a804 : and al, 0x38 ; ret 0x2875
0x000000000046b949 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b8d7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000045ac9a : and al, 0x40 ; call rbx
0x000000000045ad23 : and al, 0x40 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000004766b9 : and al, 0x40 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000434d8b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043412e : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000476011 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048fd85 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043a51a : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046a551 : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x000000000046a631 : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000046a1d9 : and al, 0x48 ; add esp, 0x48 ; jmp r11
0x000000000046b52d : and al, 0x48 ; add rsp, 0x78 ; ret
0x000000000045ab86 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000405ffa : and al, 0x48 ; mov dword ptr [rax + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ebbd : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000043c39c : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043f56e : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043c0b1 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043fecc : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043d8f6 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000048cee2 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000043df9c : and al, 0x58 ; call rax
0x000000000041683f : and al, 0x60 ; je 0x416859 ; add rsp, 0x70 ; pop rbx ; ret
0x000000000048162d : and al, 0x73 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000408b5e : and al, 0x74 ; ret 0x8b4c
0x0000000000406993 : and al, 0x74 ; ret 0x8d48
0x0000000000477f55 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x894c
0x0000000000492c26 : and al, 0x89 ; add byte ptr [rax + r10 - 0x18], sil ; jmp qword ptr [rcx]
0x00000000004bb3a4 : and al, 0x8f ; add byte ptr [rax], al ; sub al, bh ; stc ; call rax
0x0000000000482ba0 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x0000000000477545 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000482f9d : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004bb7a4 : and al, 0x93 ; add byte ptr [rax], al ; call 0xffffffffe44bb1bd
0x000000000043439e : and al, 0x98 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000043d54f : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043d706 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000048e01b : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b495c : and al, 0xa1 ; cmc ; jmp qword ptr [rdx]
0x000000000047dbc4 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048f0ab : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000046b39f : and al, 0xc ; add rsp, 0x48 ; ret
0x0000000000434540 : and al, 0xc ; jmp 0x434474
0x0000000000401283 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000477e34 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000477402 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048cd4c : and al, 0xe8 ; ret
0x000000000045ede2 : and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x000000000043fc2c : and al, 0xeb ; ret 0x8948
0x000000000048cd48 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049004b : and al, 0xf ; ret 0x8348
0x0000000000466535 : and al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000004b8a05 : and al, 0xf8 ; jmp qword ptr [rdx]
0x0000000000422146 : and al, 0xf8 ; jne 0x422022 ; ret
0x000000000048cd01 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048cd07 : and al, 0xf8 ; ret
0x000000000048ccbb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000048ccc1 : and al, 0xfc ; ret
0x0000000000444ac7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000444acb : and al, 0xfe ; ret
0x0000000000436b1d : and al, 0xff ; jmp 0x436ae7
0x0000000000436b1c : and al, 0xff ; jmp 0x436ae8
0x0000000000402f3e : and al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045eed8 : and al, 8 ; add rsp, 0x28 ; ret
0x0000000000414631 : and al, 8 ; call 0x410874
0x000000000043ebc1 : and al, 8 ; call r12
0x000000000043bd61 : and al, 8 ; call r14
0x000000000043c680 : and al, 8 ; call r15
0x0000000000435338 : and al, 8 ; call rbx
0x0000000000483ec9 : and al, 8 ; je 0x483edd ; mov edi, 0x6c11e0 ; call rax
0x0000000000435457 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000043df97 : and al, 8 ; mov rsi, qword ptr [rsp + 0x58] ; call rax
0x00000000004b856d : and al, bh ; jmp qword ptr [rdx]
0x000000000040ca5a : and al, byte ptr [rax] ; add bl, dh ; ret
0x000000000049387a : and al, byte ptr [rax] ; jne 0x4938a1 ; ret
0x000000000041956a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004baae0 : and al, dl ; stc ; call rcx
0x000000000044c320 : and bh, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000496a48 : and bh, byte ptr [rbx] ; stc ; jmp qword ptr [rdx + 0x22fff93a]
0x0000000000496a40 : and bh, byte ptr [rcx + rdi*8] ; jmp qword ptr [rdx + 0x22fff93b]
0x0000000000496a38 : and bh, byte ptr [rip + 0x3ca2fff9] ; stc ; jmp qword ptr [rdx]
0x0000000000496a30 : and bh, byte ptr [rsi] ; stc ; jmp qword ptr [rdx + 0x22fff93d]
0x000000000040a9b2 : and bl, ch ; ret 0x1f0f
0x0000000000411490 : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000040d3c4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000411491 : and byte ptr [rax + 0x39], cl ; ret
0x000000000040ffc3 : and byte ptr [rax + 1], cl ; ret
0x000000000041148d : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x000000000046a57c : and byte ptr [rax - 0x75], cl ; jg 0x46a5af ; call r11
0x000000000046a6ea : and byte ptr [rax - 0x75], cl ; jg 0x46a71d ; call r11
0x00000000004129d3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000490b2a : and byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4910
0x000000000041349f : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x0000000000481dfb : and byte ptr [rax - 0x77], cl ; ret
0x0000000000412a06 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004443d4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x4443e8 ; call rax
0x0000000000481bbc : and byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000000000043aa4e : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048f599 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040af12 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000048f56a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000433313 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000436ce2 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004969a0 : and byte ptr [rax], bh ; stc ; jmp rax
0x00000000004bdd7e : and byte ptr [rbx + 0x1ac0304], al ; ret
0x00000000004056f8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409113 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b397d : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000040100d : and byte ptr [rbx + rcx*2], 0 ; call rax
0x000000000040d3c5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000446a75 : and byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; ret
0x000000000048cd45 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000048e6bd : and byte ptr [rdi], cl ; lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x00000000004966a4 : and byte ptr [rdi], cl ; stc ; push rax ; adc cl, bh ; call rax
0x000000000046f50f : and byte ptr [rdi], cl ; test al, dl ; jmp 0x46f517
0x0000000000430f10 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000040f971 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x0000000000496608 : and byte ptr [rdx], dl ; stc ; inc dword ptr [rax] ; adc al, 0xf9 ; jmp rax
0x000000000042444a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ba025 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000496640 : and byte ptr [rsi], cl ; stc ; jmp rax
0x00000000004965d0 : and byte ptr [rsi], dl ; stc ; call qword ptr [rax]
0x000000000045a992 : and ch, 0xf ; je 0x45a9b9 ; add rax, 2 ; ret
0x000000000045a97d : and cl, 0xf ; je 0x45a9a5 ; ret
0x0000000000477e20 : and cl, al ; call 0x4909a74b
0x00000000004138ce : and cl, bpl ; ret 0xfff4
0x000000000046d5bf : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x000000000041bf4d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000444599 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004b5fa6 : and cl, byte ptr [rdx] ; idiv bh ; sbb al, 0xd ; xor ch, cl ; cmc ; jmp qword ptr [rdx]
0x000000000045aba4 : and cl, ch ; ret
0x00000000004138cf : and cl, ch ; ret 0xfff4
0x0000000000490c8e : and cl, ch ; ret 0xfffb
0x000000000041c54b : and dh, dh ; ret 0x7504
0x000000000047b621 : and dword ptr [rax + rax], 0x39138b41 ; ret 0x840f
0x0000000000439270 : and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x0000000000464615 : and dword ptr [rax - 0x7d], ecx ; ret 0x4c08
0x000000000044bdf9 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004af082 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000004728ba : and dword ptr [rbp - 0x1f0], 0xfffffff0 ; jmp 0x46eb19
0x000000000040e296 : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000043611b : and dword ptr [rip - 0x9cf0000], eax ; mov rdi, r12 ; call rbx
0x000000000044290b : and dword ptr [rip - 0xc6f0003], esp ; ret
0x00000000004ac139 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004af081 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004449fb : and eax, 0 ; ret
0x0000000000401016 : and eax, 0x1002c0c ; ret
0x000000000043713b : and eax, 0x17 ; add byte ptr [rax], al ; ret
0x00000000004928ea : and eax, 0x1f0ffff8 ; add bl, dh ; ret
0x00000000004780c5 : and eax, 0x2d0 ; ret
0x0000000000407512 : and eax, 0x30 ; call rax
0x000000000043327d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000004332a0 : and eax, 0x3fc00 ; ret
0x000000000043325c : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000482212 : and eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043a8c7 : and eax, 0x48000309 ; mov edi, ebx ; call r14
0x000000000048ff7a : and eax, 0x48028b48 ; add esp, 8 ; ret
0x0000000000464f70 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000045a5ae : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x0000000000467acf : and eax, 0x6894800 ; ret
0x00000000004332d0 : and eax, 0x7ff80000 ; ret
0x00000000004b498d : and eax, 0x80d00000 ; cmc ; jmp rbx
0x0000000000437287 : and eax, 0xc ; cmp eax, 4 ; je 0x437298 ; ret
0x00000000004373b6 : and eax, 0xc ; pop r12 ; ret
0x0000000000479b33 : and eax, 0xf ; cmp al, 0xa ; jne 0x479aec ; call rbx
0x000000000044290c : and eax, 0xf390fffd ; ret
0x0000000000438926 : and eax, 0xffffffc0 ; or rax, 0xffffffffffffffff ; ret
0x000000000046badc : and eax, 2 ; sub eax, 1 ; ret
0x000000000048ff8c : and eax, dword ptr [rax - 0x80] ; call qword ptr [rax]
0x00000000004932f8 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000048c6d8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000491e37 : and eax, dword ptr [rax] ; jne 0x491e09 ; add rsp, 8 ; ret
0x0000000000491276 : and eax, dword ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x000000000048c8e4 : and eax, dword ptr [rax] ; ret
0x000000000046b992 : and eax, ecx ; ret
0x0000000000496255 : and eax, edi ; inc dword ptr [rax] ; and edi, eax ; jmp rax
0x00000000004b868d : and eax, edi ; jmp qword ptr [rdx]
0x000000000046ba11 : and eax, edx ; ret
0x00000000004bf209 : and ebp, edi ; call qword ptr [rbx]
0x000000000040e297 : and ebp, edi ; pop rbx ; ret
0x0000000000437222 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x437235 ; ret
0x00000000004259c5 : and ecx, 0xff ; sub eax, ecx ; ret
0x00000000004250f8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000040ef3c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000463892 : and ecx, dword ptr [rdi] ; xchg byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b9bd5 : and ecx, edi ; jmp qword ptr [rdx]
0x0000000000496259 : and edi, eax ; jmp rax
0x00000000004b2b05 : and esi, ebp ; jmp qword ptr [rdx]
0x000000000043926f : and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000422a1a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000041bdb0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000041bdc0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041bdd0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041bda0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000041bcef : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000422c13 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000041960d : bsf eax, edx ; ret
0x000000000041977a : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000422d30 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000041965a : bsf rax, rdx ; ret
0x0000000000459a87 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000459d0b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000459c19 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000459b15 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000459a86 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000459d0a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000459c18 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000459b14 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000040efdf : call 0x1003292f
0x000000000046906c : call 0x1008c9bc
0x0000000000466b50 : call 0x1108eea0
0x00000000004408fe : call 0x2068c4e
0x00000000004408fe : call 0x2068c52
0x000000000044199e : call 0x2069cee
0x000000000044199e : call 0x2069cf2
0x0000000000422354 : call 0x24b6aead
0x0000000000455689 : call 0x401932
0x000000000040c63c : call 0x401936
0x0000000000480d78 : call 0x401939
0x0000000000471391 : call 0x40d612
0x0000000000414633 : call 0x410872
0x00000000004084d8 : call 0x4147b2
0x0000000000408b77 : call 0x414e32
0x000000000045296c : call 0x414e36
0x0000000000460329 : call 0x41c582
0x0000000000445dd3 : call 0x422012
0x000000000048f2da : call 0x422017
0x0000000000400e33 : call 0x4331e6
0x000000000043411c : call 0x434c97
0x000000000040aed7 : call 0x4370f2
0x0000000000484069 : call 0x438938
0x000000000043a90e : call 0x442907
0x0000000000406c93 : call 0x444b67
0x000000000047a68f : call 0x446922
0x000000000044e4b6 : call 0x45a712
0x000000000047b566 : call 0x467862
0x000000000045cfb2 : call 0x475f08
0x000000000046c699 : call 0x47b887
0x0000000000472819 : call 0x48472830
0x0000000000476edd : call 0x49099804
0x00000000004773f0 : call 0x49099d17
0x000000000047790f : call 0x4909a236
0x0000000000477e22 : call 0x4909a749
0x000000000042a5da : call 0x4fc1b5d8
0x000000000042a5d9 : call 0x4fc1b5d9
0x000000000047e0c8 : call 0xffffffff8994b1ff
0x0000000000476d99 : call 0xffffffff8a0996c0
0x00000000004777cf : call 0xffffffff8a09a0f6
0x0000000000402e33 : call 0xffffffff8b8cf0c3
0x000000000045b6d7 : call 0xffffffff8b8e7967
0x00000000004acba3 : call 0xffffffffaf0d6a19
0x0000000000476998 : call 0xffffffffc270b2e0
0x000000000048f0ea : call 0xffffffffc2723d32
0x000000000041213a : call 0xffffffffc2c66944
0x00000000004150ee : call 0xffffffffc2c698f8
0x000000000046160a : call 0xffffffffc2c95e14
0x0000000000413bd9 : call 0xffffffffc2ca83f2
0x000000000044ed80 : call 0xffffffffc2ce358b
0x000000000047e362 : call 0xffffffffc3492c6c
0x00000000004081e7 : call 0xffffffffc39cc34d
0x0000000000408787 : call 0xffffffffc39cc8ed
0x000000000045ad4b : call 0xffffffffc3a1eeb1
0x0000000000468281 : call 0xffffffffc3a2c3e7
0x0000000000444eec : call 0xffffffffc3f35e3d
0x000000000041caf7 : call 0xffffffffc4125448
0x0000000000419577 : call 0xffffffffc43a1ec8
0x0000000000434d05 : call 0xffffffffc5bc4d39
0x00000000004b88f8 : call 0xffffffffd34b811b
0x00000000004bb7a8 : call 0xffffffffe44bb1b9
0x00000000004bc108 : call 0xffffffffe84bbb69
0x0000000000401e2f : call 0xffffffffec02a77f
0x0000000000449688 : call qword ptr [r11 + rax*8]
0x0000000000496573 : call qword ptr [rax + 0x10fff8ee]
0x000000000049657b : call qword ptr [rax + 0x10fff8ef]
0x0000000000496583 : call qword ptr [rax + 0x20fff8f0]
0x00000000004966bb : call qword ptr [rax + 0x20fff91a]
0x000000000049663b : call qword ptr [rax + 0x20fff91b]
0x000000000049697f : call qword ptr [rax + 0x20fff945]
0x0000000000496767 : call qword ptr [rax + 0x20fff948]
0x000000000043987e : call qword ptr [rax + 0x48e9c289]
0x00000000004756ee : call qword ptr [rax + 0x8c28348]
0x000000000049672f : call qword ptr [rax - 0x1f000704]
0x000000000049631f : call qword ptr [rax - 0x1f000758]
0x000000000049671b : call qword ptr [rax - 0x2f0006f6]
0x000000000040eb4e : call qword ptr [rax - 0x3f38b8]
0x0000000000496d0f : call qword ptr [rax - 0x4f000666]
0x000000000049643f : call qword ptr [rax - 0x4f00072c]
0x000000000049657f : call qword ptr [rax]
0x0000000000401185 : call qword ptr [rbx + 0x10]
0x00000000004b1f3f : call qword ptr [rbx + rax*8 - 0x3c830003]
0x00000000004b216f : call qword ptr [rbx + rax*8 - 3]
0x0000000000449689 : call qword ptr [rbx + rax*8]
0x0000000000401758 : call qword ptr [rbx*8 + 0x6bfed0]
0x0000000000479c68 : call qword ptr [rbx]
0x00000000004964cf : call qword ptr [rcx + 0x21fff8f2]
0x0000000000465b4d : call qword ptr [rcx]
0x00000000004b4cdb : call qword ptr [rdi]
0x0000000000496853 : call qword ptr [rdx + 0x22fff943]
0x0000000000496833 : call qword ptr [rdx]
0x0000000000464f6c : call qword ptr [rip + 0x25c2c6]
0x00000000004967af : call qword ptr [rsi + 0x26fff947]
0x000000000045273d : call qword ptr [rsi]
0x000000000046a581 : call r11
0x0000000000436a6c : call r12
0x000000000043a8ce : call r14
0x0000000000439b3c : call r15
0x0000000000456f02 : call r8
0x0000000000466fb1 : call r9
0x0000000000496d17 : call rax
0x00000000004366cb : call rbx
0x00000000004051cb : call rcx
0x0000000000439b3d : call rdi
0x000000000041092a : call rdx
0x000000000043a8cf : call rsi
0x0000000000436a6d : call rsp
0x00000000004ae8e0 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000046bcf9 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000004b36bc : cdq ; push rax ; cmc ; jmp qword ptr [rdx]
0x0000000000496cd1 : cdq ; stc ; call qword ptr [rax]
0x0000000000496cf5 : cdq ; stc ; call rax
0x0000000000496cd5 : cdq ; stc ; jmp qword ptr [rax]
0x0000000000496cf9 : cdq ; stc ; push rax ; cdq ; stc ; call qword ptr [rax]
0x000000000040b6d8 : cdqe ; ret
0x0000000000412ba0 : clc ; add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x000000000045b409 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xc8e9
0x000000000045b265 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000044cb98 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040a69c : clc ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000458149 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000404abc : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422e6b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045c246 : clc ; add eax, 0x89d02944 ; ret
0x000000000045c42d : clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x00000000004785b5 : clc ; add eax, dword ptr [rcx + 0x5f] ; ret
0x00000000004054c0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000041bb78 : clc ; add rax, rcx ; ret
0x000000000040f970 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x00000000004b2b4c : clc ; and esi, ebp ; jmp qword ptr [rdx]
0x0000000000496572 : clc ; call qword ptr [rax + 0x10fff8ee]
0x000000000049657a : clc ; call qword ptr [rax + 0x10fff8ef]
0x0000000000496582 : clc ; call qword ptr [rax + 0x20fff8f0]
0x000000000049672e : clc ; call qword ptr [rax - 0x1f000704]
0x000000000049631e : clc ; call qword ptr [rax - 0x1f000758]
0x000000000049643e : clc ; call qword ptr [rax - 0x4f00072c]
0x000000000049657e : clc ; call qword ptr [rax]
0x00000000004b9a12 : clc ; call qword ptr [rbx]
0x00000000004964ce : clc ; call qword ptr [rcx + 0x21fff8f2]
0x00000000004b9432 : clc ; call qword ptr [rcx]
0x00000000004b94c2 : clc ; call qword ptr [rdi]
0x00000000004b913a : clc ; call qword ptr [rdx]
0x00000000004961e2 : clc ; call rax
0x00000000004b8432 : clc ; call rcx
0x00000000004b88fa : clc ; call rdx
0x000000000041554e : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000004b2ec6 : clc ; cmp eax, 0xd1cfff5 ; push rdx ; cmp al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000425969 : clc ; cmp rcx, rax ; jne 0x42599b ; xor eax, eax ; ret
0x0000000000425968 : clc ; cmp rcx, rax ; jne 0x42599c ; xor eax, eax ; ret
0x00000000004018d4 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000041353c : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000004572cf : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000004491b4 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000448ee5 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000475c9b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000496202 : clc ; inc dword ptr [rax + 0x2d] ; clc ; call qword ptr [rax]
0x0000000000496562 : clc ; inc dword ptr [rax - 0x15] ; clc ; call qword ptr [rax]
0x000000000049673a : clc ; inc dword ptr [rax - 0x2f000700] ; add ecx, edi ; jmp qword ptr [rax]
0x00000000004966e6 : clc ; inc dword ptr [rax - 0x2f000707] ; cli ; clc ; jmp qword ptr [rax]
0x000000000049632a : clc ; inc dword ptr [rax - 0x2f000754] ; lodsd eax, dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x0000000000496302 : clc ; inc dword ptr [rax - 0x64] ; clc ; jmp rax
0x00000000004962e2 : clc ; inc dword ptr [rax - 0x71] ; clc ; jmp rax
0x000000000049658e : clc ; inc dword ptr [rax - 0xe] ; clc ; call rax
0x000000000049672a : clc ; inc dword ptr [rax - 5] ; clc ; call qword ptr [rax - 0x1f000704]
0x0000000000496256 : clc ; inc dword ptr [rax] ; and edi, eax ; jmp rax
0x0000000000496362 : clc ; inc dword ptr [rax] ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rax]
0x00000000004961f2 : clc ; inc dword ptr [rax] ; sub bh, al ; call rax
0x00000000004628e3 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x5b74
0x0000000000462619 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000462a39 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000046272c : clc ; inc dword ptr [rcx - 0x77] ; ret 0x940f
0x00000000004964ca : clc ; inc dword ptr [rcx] ; clc ; call qword ptr [rcx + 0x21fff8f2]
0x0000000000496252 : clc ; inc eax ; and eax, edi ; inc dword ptr [rax] ; and edi, eax ; jmp rax
0x000000000049633a : clc ; inc eax ; mov cl, 0xf8 ; call qword ptr [rax]
0x0000000000496392 : clc ; inc eax ; test edi, eax ; call rax
0x00000000004962ee : clc ; jmp qword ptr [rax]
0x000000000049646e : clc ; jmp qword ptr [rcx]
0x00000000004b856e : clc ; jmp qword ptr [rdx]
0x00000000004928a8 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004b956a : clc ; jmp qword ptr [rsi]
0x000000000048eb25 : clc ; jmp rax
0x00000000004964b2 : clc ; jmp rcx
0x000000000049650a : clc ; jmp rsi
0x0000000000400fcf : clc ; jne 0x400fd8 ; pop rbp ; ret
0x0000000000422147 : clc ; jne 0x422021 ; ret
0x000000000048f6c0 : clc ; leave ; ret
0x00000000004b6b18 : clc ; loopne 0x4b6b13 ; call qword ptr [rcx]
0x00000000004ad542 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000427447 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427db7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a367 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427fb7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a2d7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004281b7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a247 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427463 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000048f75b : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048cd02 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000045efd1 : clc ; nop word ptr [rax + rax] ; ret
0x00000000004961fe : clc ; push qword ptr [rax + 0x2c] ; clc ; inc dword ptr [rax + 0x2d] ; clc ; call qword ptr [rax]
0x000000000049658a : clc ; push qword ptr [rax + 0x40fff8f1] ; clc ; call rax
0x000000000040142f : clc ; push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x000000000049638e : clc ; push qword ptr [rax - 0x3f00077d] ; test edi, eax ; call rax
0x0000000000496336 : clc ; push qword ptr [rax - 0x50] ; clc ; inc eax ; mov cl, 0xf8 ; call qword ptr [rax]
0x0000000000496596 : clc ; push qword ptr [rax - 0xd] ; clc ; call qword ptr [rax]
0x000000000049631a : clc ; push qword ptr [rax] ; mov eax, dr1 ; call qword ptr [rax - 0x1f000758]
0x00000000004961ee : clc ; push qword ptr [rax] ; sub eax, edi ; inc dword ptr [rax] ; sub bh, al ; call rax
0x0000000000409fda : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000040e2e0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004375cb : clc ; push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040e292 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000045e7dc : clc ; push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x000000000049648a : clc ; push qword ptr [rdx - 0x13] ; clc ; call qword ptr [rax]
0x0000000000496486 : clc ; push qword ptr [rdx - 0x14] ; clc ; push qword ptr [rdx - 0x13] ; clc ; call qword ptr [rax]
0x000000000049646a : clc ; push rax ; in eax, dx ; clc ; jmp qword ptr [rcx]
0x000000000049635e : clc ; push rax ; push 0xf8 ; inc dword ptr [rax] ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rax]
0x000000000049644a : clc ; push rax ; xlatb ; clc ; call qword ptr [rax]
0x00000000004932b8 : clc ; push rbx ; ret
0x000000000040ebe2 : clc ; ret
0x000000000046c06a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004bb3a9 : clc ; stc ; call rax
0x000000000046b1ad : clc ; std ; jbe 0x46b1bc ; ret
0x000000000043327f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004332a2 : cld ; add eax, dword ptr [rax] ; ret
0x00000000004be55a : cld ; call qword ptr [rax]
0x00000000004be3a2 : cld ; call rbx
0x0000000000496731 : cld ; clc ; jmp rax
0x0000000000465107 : cld ; cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x00000000004b6355 : cld ; cmc ; jmp qword ptr [rdx]
0x0000000000465108 : cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x0000000000433340 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043325e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004be462 : cld ; jmp qword ptr [rax]
0x00000000004be2f6 : cld ; jmp qword ptr [rdx]
0x0000000000427bd2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427dd5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427fd5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004281d5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427806 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a4f6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004279e6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a476 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427bc6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a3f6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427626 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a576 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000048ccbc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041c56c : cld ; ret
0x00000000004ba824 : cld ; retf ; stc ; jmp qword ptr [rdx]
0x00000000004b407c : cld ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x75], ah ; cmc ; jmp rax
0x00000000004bb471 : cld ; stc ; jmp qword ptr [rdx]
0x000000000043515d : cld ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004351f0 : cld ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4351fe ; call rbx
0x00000000004ac9f6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bd45c : cld ; xchg ebx, edi ; jmp qword ptr [rdx]
0x000000000048e001 : cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x0000000000478099 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000045c361 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000047c48e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000043e639 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000477e06 : cli ; add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000476d8a : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004bceb2 : cli ; call qword ptr [rax]
0x00000000004bc7d2 : cli ; call qword ptr [rbx]
0x00000000004bc4a2 : cli ; call rdx
0x00000000004bc8ba : cli ; call rsi
0x00000000004966ed : cli ; clc ; jmp qword ptr [rax]
0x00000000004b62c5 : cli ; cmc ; jmp qword ptr [rdx]
0x0000000000462075 : cli ; cmp cl, byte ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x000000000045f223 : cli ; cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x000000000046804d : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000040b049 : cli ; dec dword ptr [rax + 0xf] ; ret 0xba
0x00000000004750e4 : cli ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x0000000000403b19 : cli ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004bb51e : cli ; jmp qword ptr [rdx]
0x00000000004bb7aa : cli ; jmp rbx
0x00000000004bc10a : cli ; jmp rdi
0x00000000004bbe9a : cli ; jmp rsp
0x0000000000427fd8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041bf68 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000405544 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000043f685 : cli ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x000000000047688d : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x00000000004aee61 : cli ; push 0x6e ; ja 0x4aedee ; ret 0x48f
0x0000000000475e12 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000004ad905 : cli ; ret 0xac65
0x00000000004371ab : cli ; setae al ; ret
0x000000000043536e : cli ; std ; dec dword ptr [rax - 0x75] ; jge 0x43537c ; call rbx
0x0000000000435353 : cli ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043537c : cli ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000435360 : cli ; std ; dec dword ptr [rcx - 0x75] ; jge 0x43536e ; call rbx
0x00000000004196b0 : cli ; test rdx, rdx ; je 0x4196c9 ; bsf rax, rdx ; ret
0x000000000045991f : cli ; test rdx, rdx ; je 0x459949 ; bsf rax, rdx ; ret
0x00000000004ac54a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004503af : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000488608 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b2b6a : cmc ; call qword ptr [rax]
0x00000000004b3062 : cmc ; call qword ptr [rbx]
0x00000000004b2c7a : cmc ; call qword ptr [rcx]
0x00000000004b4cda : cmc ; call qword ptr [rdi]
0x00000000004b31b2 : cmc ; call qword ptr [rdx]
0x00000000004b526a : cmc ; call qword ptr [rsi]
0x00000000004b6c2a : cmc ; call rdx
0x00000000004bd1c1 : cmc ; cli ; jmp rbx
0x00000000004b6235 : cmc ; cmc ; jmp qword ptr [rdx]
0x00000000004b510a : cmc ; jmp qword ptr [rax]
0x00000000004b4b22 : cmc ; jmp qword ptr [rcx]
0x00000000004b2a06 : cmc ; jmp qword ptr [rdx]
0x00000000004b4082 : cmc ; jmp rax
0x00000000004b4992 : cmc ; jmp rbx
0x00000000004b3aba : cmc ; jmp rsp
0x00000000004af289 : cmc ; mov ch, 0xab ; ret
0x000000000042a47a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042785e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000048fd51 : cmc ; movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x00000000004323f3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004572a6 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475f41 : cmc ; pop rbp ; pop r12 ; ret
0x00000000004ac137 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047b567 : cmc ; ret 0xfffe
0x0000000000476257 : cmc ; shl dword ptr [rax + rax], cl ; call rax
0x00000000004323f7 : cmc ; sub eax, edx ; ret
0x00000000004ae8c5 : cmc ; xlatb ; ret 0x4e27
0x000000000045b4fb : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x000000000045b4fa : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000040f679 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040f678 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000048fb27 : cmovbe eax, ecx ; ret
0x000000000045f271 : cmove eax, ecx ; ret
0x000000000041bac0 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000004344b1 : cmove eax, edx ; jmp 0x43446d
0x00000000004343a1 : cmove eax, edx ; ret
0x0000000000444bb6 : cmove eax, esi ; mov ecx, eax ; jmp 0x444b90
0x000000000040c0a5 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c0a4 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045f270 : cmove rax, r9 ; ret
0x000000000041babf : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000484057 : cmove rax, rdx ; ret
0x000000000040d31b : cmovg eax, ecx ; test rdx, rdx ; jne 0x40d319 ; ret
0x000000000045834b : cmovg eax, ecx ; test rdx, rdx ; jne 0x458349 ; ret
0x0000000000400561 : cmovge eax, edx ; jmp 0x400533
0x0000000000415550 : cmovne eax, ecx ; add rsp, 8 ; ret
0x00000000004579e1 : cmovne eax, ecx ; ret
0x0000000000417063 : cmovne eax, edx ; ret
0x00000000004579e0 : cmovne r8, rcx ; ret
0x000000000041554f : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000417062 : cmovne rax, rdx ; ret
0x000000000047a688 : cmovnp eax, dword ptr [rax] ; lea rbx, qword ptr [rbp - 0x60] ; call 0x446929
0x000000000043b9ec : cmovns eax, edx ; ret
0x000000000048fa08 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000040e318 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x40e319 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000413b3e : cmp al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000435381 : cmp al, 0x24 ; call rbx
0x000000000045ab85 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004ad540 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b72bc : cmp al, 0x4e ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xa], bh ; call qword ptr [rax]
0x0000000000412ba3 : cmp al, 0x89 ; ret 0xb48b
0x0000000000479b36 : cmp al, 0xa ; jne 0x479ae9 ; call rbx
0x00000000004bd1bc : cmp al, 0xad ; add byte ptr [rax], al ; xor ch, 0xfa ; jmp rbx
0x0000000000446904 : cmp al, 0xb2 ; jle 0x4468c6 ; jmp 0x4468d3
0x000000000048fb75 : cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x0000000000458567 : cmp al, 0xdd ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4147b8
0x00000000004b2ecd : cmp al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004969c1 : cmp al, 0xf9 ; call rax
0x0000000000496a41 : cmp al, 0xf9 ; jmp qword ptr [rdx + 0x22fff93b]
0x0000000000496a3d : cmp al, 0xf9 ; jmp qword ptr [rdx]
0x0000000000496bbd : cmp al, 0xf9 ; jmp rax
0x00000000004b62be : cmp al, 7 ; idiv bh ; sbb al, 0xd ; loopne 0x4b62c9 ; cmc ; jmp qword ptr [rdx]
0x00000000004328b6 : cmp al, byte ptr [rsi - 1] ; jne 0x4328dc ; xor eax, eax ; ret
0x0000000000465b4b : cmp al, ch ; call qword ptr [rcx]
0x0000000000408b94 : cmp al, ch ; xchg eax, esi ; ret 0
0x000000000041bda6 : cmp al, dh ; ret
0x000000000041bda5 : cmp al, r14b ; ret
0x0000000000496a4d : cmp bh, cl ; jmp qword ptr [rdx]
0x0000000000496bcd : cmp bh, cl ; jmp rax
0x0000000000496b11 : cmp bh, cl ; push qword ptr [rcx + rdi - 7] ; jmp rsp
0x00000000004227db : cmp bl, dh ; ret
0x0000000000409633 : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000041c92f : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000041bde7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000435334 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000467026 : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000409634 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000004561b3 : cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x00000000004572cc : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000048d9d4 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000041bdd6 : cmp byte ptr [rax], ah ; ret
0x0000000000417060 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000041bdc6 : cmp byte ptr [rax], dl ; ret
0x000000000041bdc5 : cmp byte ptr [rax], r10b ; ret
0x000000000041bdd5 : cmp byte ptr [rax], r12b ; ret
0x000000000041705f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000044e4af : cmp byte ptr [rbp + 0x4a], dh ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x45a719
0x0000000000466fab : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000040aed1 : cmp byte ptr [rbx - 0x2dce8f81], cl ; call 0x4370f8
0x00000000004be0bc : cmp byte ptr [rbx - 0x5ff1b8f9], al ; or dword ptr [rbx], eax ; ret 0xa03
0x0000000000477933 : cmp byte ptr [rcx + 0x29], cl ; ret
0x000000000043c67d : cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x000000000043bd5e : cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x00000000004590f0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000046a55c : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000424e3d : cmp byte ptr [rdi], dl ; ret
0x0000000000425950 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000425939 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000425922 : cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004243de : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b3198 : cmp byte ptr [rsi - 0xb], al ; call qword ptr [rax]
0x000000000045f26c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x00000000004350ac : cmp ch, 0xfd ; dec dword ptr [rcx - 0x75] ; jge 0x4350bc ; call rbx
0x000000000040ec39 : cmp ch, byte ptr [rbx] ; add byte ptr [rcx], al ; ret
0x00000000004966e8 : cmp cl, 0xf8 ; call rax
0x00000000004969dd : cmp cl, bh ; call qword ptr [rsi]
0x0000000000496b9d : cmp cl, bh ; call rax
0x0000000000496b99 : cmp cl, bh ; inc dword ptr [rax + 0x38] ; stc ; call rax
0x00000000004969a1 : cmp cl, bh ; jmp rax
0x0000000000496b1d : cmp cl, bh ; jmp rsp
0x0000000000415e51 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000435ffa : cmp cl, byte ptr [rcx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000462076 : cmp cl, byte ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x0000000000496b9c : cmp cl, dil ; call rax
0x000000000045f224 : cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x000000000046cc29 : cmp dh, dh ; ret 0x7401
0x000000000045f222 : cmp dl, 0x3a ; je 0x45f1e6 ; ret
0x0000000000448d33 : cmp dl, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000429f8c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004b868c : cmp dword ptr [rcx], esp ; clc ; jmp qword ptr [rdx]
0x0000000000446902 : cmp dword ptr [rdx + r14*4], 0x40 ; jle 0x4468c8 ; jmp 0x4468d5
0x00000000004375c0 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000446903 : cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x4468c7 ; jmp 0x4468d4
0x000000000048fb24 : cmp dword ptr [rsi + 8], edi ; cmovbe eax, ecx ; ret
0x00000000004344ac : cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0x434472
0x000000000043439c : cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x000000000040f9a9 : cmp eax, 0x1000 ; je 0x40f9c1 ; xor eax, eax ; ret
0x0000000000476256 : cmp eax, 0x24d3f5 ; call rax
0x000000000047616c : cmp eax, 0x24d4df ; jmp rax
0x0000000000438dac : cmp eax, 0x28b20f ; pop rbx ; ret
0x0000000000496a39 : cmp eax, 0x3ca2fff9 ; stc ; jmp qword ptr [rdx]
0x00000000004969b5 : cmp eax, 0x3d50fff9 ; stc ; call rax
0x0000000000496bb1 : cmp eax, 0x3d60fff9 ; stc ; jmp rax
0x00000000004351ef : cmp eax, 0x49fffdfc ; mov edi, dword ptr [rbp] ; call rbx
0x00000000004b2ec7 : cmp eax, 0xd1cfff5 ; push rdx ; cmp al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000400f8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400fa0 ; pop rbp ; ret
0x000000000046b1ac : cmp eax, 0xfd ; jbe 0x46b1bd ; ret
0x000000000040142e : cmp eax, 0xff ; je 0x40145c ; add rsp, 8 ; ret
0x000000000040e291 : cmp eax, 0xff ; je 0x40e2a2 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000045930a : cmp eax, 0xff ; je 0x45931b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000045934e : cmp eax, 0xff ; je 0x45935f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000409fd9 : cmp eax, 0xff ; jne 0x409fe6 ; pop rbx ; ret
0x000000000040e2df : cmp eax, 0xff ; jne 0x40e2d0 ; pop rbx ; ret
0x00000000004375ca : cmp eax, 0xff ; jne 0x4375d1 ; nop ; xor eax, eax ; leave ; ret
0x0000000000434176 : cmp eax, 0xfffff000 ; ja 0x43419c ; ret
0x00000000004341c5 : cmp eax, 0xfffff000 ; ja 0x4341ec ; ret
0x000000000043435a : cmp eax, 0xfffff000 ; ja 0x4343d8 ; ret
0x0000000000444b98 : cmp eax, 0xfffff000 ; ja 0x444bc5 ; ret
0x0000000000444e11 : cmp eax, 0xfffff000 ; ja 0x444e22 ; ret
0x000000000045eb76 : cmp eax, 0xfffff000 ; ja 0x45eb9c ; ret
0x000000000045ebcb : cmp eax, 0xfffff000 ; ja 0x45ebf4 ; ret
0x000000000045ec11 : cmp eax, 0xfffff000 ; ja 0x45ec22 ; ret
0x000000000045ee78 : cmp eax, 0xfffff000 ; ja 0x45ee87 ; ret
0x0000000000422e6a : cmp eax, 1 ; ja 0x422e51 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043728a : cmp eax, 4 ; je 0x437295 ; ret
0x00000000004579de : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000040ef39 : cmp eax, ecx ; jae 0x40ef67 ; movzx eax, byte ptr [rax] ; ret
0x00000000004328d3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000046b7f4 : cmp eax, esi ; je 0x46b804 ; ret
0x0000000000437226 : cmp ebx, 0xa ; je 0x437231 ; ret
0x000000000043875e : cmp ebx, eax ; setne dl ; jmp 0x43874a
0x0000000000468084 : cmp ecx, dword ptr [rsi + rdi] ; jae 0x468048 ; xor eax, eax ; ret
0x000000000042596b : cmp ecx, eax ; jne 0x425999 ; xor eax, eax ; ret
0x0000000000496b95 : cmp ecx, edi ; call rax
0x000000000040fa82 : cmp ecx, edi ; je 0x40f8c6 ; ret
0x00000000004969d9 : cmp ecx, edi ; jmp qword ptr [rax + 0x16fff938]
0x0000000000496b15 : cmp ecx, edi ; jmp rsp
0x000000000040e31a : cmp ecx, esi ; jne 0x40e317 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004969c9 : cmp edi, ecx ; call rax
0x000000000044e6f5 : cmp edi, ecx ; ja 0x44e6df ; mov eax, r8d ; ret
0x0000000000496a49 : cmp edi, ecx ; jmp qword ptr [rdx + 0x22fff93a]
0x0000000000496a45 : cmp edi, ecx ; jmp qword ptr [rdx]
0x0000000000496bc5 : cmp edi, ecx ; jmp rax
0x0000000000478098 : cmp edx, 0 ; mov eax, edx ; jle 0x4780a9 ; ret
0x000000000046804c : cmp edx, 0xff ; cmovne rax, rdx ; ret
0x0000000000475e11 : cmp edx, 0xff ; je 0x475e29 ; mov rax, rdx ; pop rbx ; ret
0x0000000000437432 : cmp edx, eax ; jne 0x437415 ; ret
0x000000000041c53c : cmp edx, ecx ; jne 0x41c525 ; ret
0x00000000004679d7 : cmp edx, ecx ; jne 0x46798f ; mov eax, dword ptr [rdx] ; ret
0x00000000004371aa : cmp edx, edi ; setae al ; ret
0x00000000004b2e85 : cmp esi, ebp ; jmp qword ptr [rdx]
0x00000000004ae8c4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000040055f : cmp esi, ecx ; cmovge eax, edx ; jmp 0x400535
0x00000000004593aa : cmp esi, ecx ; jb 0x4593a7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004b7559 : cmp esi, edi ; call qword ptr [rax]
0x000000000045ee21 : cmp esi, edx ; ja 0x45ee35 ; ret
0x000000000048fb23 : cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x000000000045f221 : cmp r10b, 0x3a ; je 0x45f1e7 ; ret
0x00000000004227da : cmp r11b, r14b ; ret
0x0000000000437225 : cmp r11d, 0xa ; je 0x437232 ; ret
0x0000000000434175 : cmp rax, -0x1000 ; ja 0x43419d ; ret
0x00000000004341c4 : cmp rax, -0x1000 ; ja 0x4341ed ; ret
0x0000000000434359 : cmp rax, -0x1000 ; ja 0x4343d9 ; ret
0x0000000000444b97 : cmp rax, -0x1000 ; ja 0x444bc6 ; ret
0x0000000000444e10 : cmp rax, -0x1000 ; ja 0x444e23 ; ret
0x000000000045eb75 : cmp rax, -0x1000 ; ja 0x45eb9d ; ret
0x000000000045ebca : cmp rax, -0x1000 ; ja 0x45ebf5 ; ret
0x000000000045ec10 : cmp rax, -0x1000 ; ja 0x45ec23 ; ret
0x000000000045ee77 : cmp rax, -0x1000 ; ja 0x45ee88 ; ret
0x000000000046b1ab : cmp rax, 0xfd ; jbe 0x46b1be ; ret
0x00000000004579dd : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000040ef38 : cmp rax, rcx ; jae 0x40ef68 ; movzx eax, byte ptr [rax] ; ret
0x000000000046b7f3 : cmp rax, rsi ; je 0x46b805 ; ret
0x0000000000468083 : cmp rcx, qword ptr [rsi + rdi] ; jae 0x468049 ; xor eax, eax ; ret
0x000000000042596a : cmp rcx, rax ; jne 0x42599a ; xor eax, eax ; ret
0x000000000040e319 : cmp rcx, rsi ; jne 0x40e318 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000046804b : cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x0000000000437431 : cmp rdx, rax ; jne 0x437416 ; ret
0x000000000041c53b : cmp rdx, rcx ; jne 0x41c526 ; ret
0x000000000041c53a : cmp rdx, rcx ; jne 0x41c527 ; ret
0x00000000004679d6 : cmp rdx, rcx ; jne 0x467990 ; mov eax, dword ptr [rdx] ; ret
0x00000000004371a9 : cmp rdx, rdi ; setae al ; ret
0x00000000004593a9 : cmp rsi, rcx ; jb 0x4593a8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000045ee20 : cmp rsi, rdx ; ja 0x45ee36 ; ret
0x0000000000488c07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000488f07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489e07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041583e : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044fb9a : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000489b07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x00000000004253e9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000400cda : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce1 ; ret
0x000000000041fe76 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489807 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489507 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004399c4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub byte ptr [rax], al ; ret
0x0000000000438a29 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ch, 0x28 ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x000000000046bcf8 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000004003ca : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043439f : cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000043920b : cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000048ede8 : cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000043962b : cwde ; call rcx
0x0000000000436ec4 : cwde ; mov rdx, rax ; jmp 0x436ef5
0x0000000000436ec3 : cwde ; mov rdx, rax ; jmp 0x436ef6
0x0000000000436f62 : cwde ; mov rdx, rax ; jmp 0x436f97
0x0000000000436f61 : cwde ; mov rdx, rax ; jmp 0x436f98
0x000000000040d52c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004b47f4 : cwde ; pushfq ; cmc ; jmp qword ptr [rdx]
0x000000000040b6d9 : cwde ; ret
0x0000000000496cc1 : cwde ; stc ; call rax
0x0000000000496ccd : cwde ; stc ; inc dword ptr [rax] ; cdq ; stc ; call qword ptr [rax]
0x0000000000496cbd : cwde ; stc ; inc eax ; cwde ; stc ; call rax
0x0000000000496cc5 : cwde ; stc ; jmp rax
0x00000000004b630c : cwde ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000004474aa : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000042e5d1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000042e5d2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000047719e : dec byte ptr [rax + 0xf] ; ret 0x3949
0x0000000000456a5a : dec byte ptr [rax + 0xf] ; ret 0x894c
0x000000000041272d : dec byte ptr [rax - 0x73] ; ret
0x0000000000463838 : dec byte ptr [rax - 0x77] ; ret
0x000000000046cf0f : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000004474ab : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004b08f9 : dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4afe
0x000000000046b1a9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x46b1c0 ; ret
0x000000000042e712 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004675e4 : dec dword ptr [rax + 0x29] ; ret 0x35e9
0x000000000048e6c3 : dec dword ptr [rax + 0x29] ; ret 0x8941
0x000000000046be51 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482f8e : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000043e0db : dec dword ptr [rax + 0x39] ; ret
0x000000000040aa85 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000467596 : dec dword ptr [rax + 0x63] ; ret
0x00000000004802c9 : dec dword ptr [rax + 0x63] ; ret 0x11e9
0x000000000047d60a : dec dword ptr [rax + 0x63] ; ret 0x50e9
0x0000000000468896 : dec dword ptr [rax + 0x69] ; ret
0x0000000000459d09 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000476fa8 : dec dword ptr [rax + 0xf] ; ret 0x3949
0x000000000046804e : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000004079c4 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000040b04a : dec dword ptr [rax + 0xf] ; ret 0xba
0x000000000046644f : dec dword ptr [rax + 1] ; int1 ; call rcx
0x0000000000472c8c : dec dword ptr [rax + 1] ; ret
0x000000000045a13f : dec dword ptr [rax - 0x39] ; ret
0x0000000000434546 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000483ce6 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000043926c : dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000402127 : dec dword ptr [rax - 0x73] ; mov ebx, 0x80 ; call rax
0x00000000004556d7 : dec dword ptr [rax - 0x75] ; add byte ptr [rsi - 0x77], ah ; or cl, ch ; push rbp ; ret
0x0000000000409630 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004154ad : dec dword ptr [rax - 0x75] ; je 0x4154df ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004350bd : dec dword ptr [rax - 0x75] ; jge 0x4350c7 ; call rbx
0x0000000000435370 : dec dword ptr [rax - 0x75] ; jge 0x43537a ; call rbx
0x0000000000436a67 : dec dword ptr [rax - 0x75] ; jge 0x436a72 ; call r12
0x0000000000439623 : dec dword ptr [rax - 0x75] ; js 0x439649 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x000000000041c6a8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000004018d5 : dec dword ptr [rax - 0x77] ; ret
0x000000000045ee11 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x000000000044e243 : dec dword ptr [rax - 0x77] ; ret 0x3ae9
0x00000000004148ad : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000045ed6e : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041353d : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000044d982 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x0000000000444cef : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000475f2d : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000449bd7 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000045deff : dec dword ptr [rax - 0x77] ; ret 0xa8e9
0x0000000000416811 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000045f41d : dec dword ptr [rax - 0x77] ; ret 0xe75
0x00000000004572d0 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000044d79d : dec dword ptr [rax - 0x77] ; ret 0xf4a
0x00000000004167f1 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x416808 ; pop rbx ; ret
0x000000000046b1aa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x46b1bf ; ret
0x0000000000403c3a : dec dword ptr [rax - 0x7d] ; ret
0x000000000043cc69 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000449d8e : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000464858 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000047a079 : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000000000045646d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x0000000000400ab3 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x00000000004709c6 : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000046724f : dec dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000444a9a : dec dword ptr [rax - 0x7f] ; ret 0x200
0x0000000000429f90 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000045ced8 : dec dword ptr [rbp - 0x77] ; ret 0xc149
0x000000000046b39c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x48 ; ret
0x000000000045e6ce : dec dword ptr [rbx + 4] ; jne 0x45e6f4 ; pop rbx ; ret
0x00000000004b1f33 : dec dword ptr [rbx + rax*8 - 3] ; inc esp ; ret
0x000000000045aba0 : dec dword ptr [rbx - 0x16dfdbbc] ; ret
0x000000000046f950 : dec dword ptr [rbx - 0x1d77b] ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004b1ddb : dec dword ptr [rbx - 0x4e] ; std ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x000000000044a1cc : dec dword ptr [rbx - 0x54773] ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000045d78b : dec dword ptr [rcx + 0x29] ; ret
0x00000000004471ec : dec dword ptr [rcx + 0x39] ; ret 0x6275
0x0000000000448d36 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000465f9f : dec dword ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x63e8
0x000000000041462d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 8 ; call 0x410878
0x000000000040fa51 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x000000000047138d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x40d616
0x000000000044d636 : dec dword ptr [rcx - 0x39] ; ret
0x000000000046a82d : dec dword ptr [rcx - 0x3dd63c30] ; mov eax, edx ; ret
0x0000000000465f72 : dec dword ptr [rcx - 0x75] ; and al, 0x10 ; add rax, qword ptr [rbx] ; call rax
0x0000000000434ef5 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043537e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000434f88 : dec dword ptr [rcx - 0x75] ; jge 0x434f92 ; call rbx
0x00000000004350af : dec dword ptr [rcx - 0x75] ; jge 0x4350b9 ; call rbx
0x00000000004351f2 : dec dword ptr [rcx - 0x75] ; jge 0x4351fc ; call rbx
0x0000000000435362 : dec dword ptr [rcx - 0x75] ; jge 0x43536c ; call rbx
0x000000000048eac1 : dec dword ptr [rcx - 0x77] ; ret
0x000000000046ff22 : dec dword ptr [rcx - 0x77] ; ret 0x6e9
0x00000000004491b5 : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000448c59 : dec dword ptr [rcx - 0x77] ; ret 0x85c7
0x000000000046f217 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000448ee6 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000004750e5 : dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x000000000043daac : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000434309 : dec dword ptr [rdi] ; adc dword ptr [rax], 0x46 ; add byte ptr [rax], al ; ret
0x0000000000434249 : dec dword ptr [rdi] ; adc eax, 0x46 ; add byte ptr [rax], al ; ret
0x00000000004342d5 : dec dword ptr [rdi] ; add dword ptr [rsi + rax*2], 0 ; ret
0x0000000000437139 : dec dword ptr [rdi] ; and eax, 0x17 ; add byte ptr [rax], al ; ret
0x0000000000456692 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000043b9eb : dec dword ptr [rdi] ; ret 0x41c3
0x000000000040f5f8 : dec dword ptr [rdi] ; ret 0x4855
0x000000000044c1b2 : dec dword ptr [rdi] ; test ah, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000474a78 : dec dword ptr [rdi] ; test byte ptr [rsi], bl ; ret 0xffff
0x00000000004755af : dec dword ptr [rdi] ; test dword ptr [rcx], ebp ; ret
0x000000000047364c : dec dword ptr [rdi] ; test dword ptr [rdx], ebp ; mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000432760 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000473d9c : dec dword ptr [rdi] ; xchg dword ptr [rbx - 0x77000000], esp ; ret 0x348
0x0000000000473bbf : dec dword ptr [rdi] ; xchg dword ptr [rdi - 0x77000000], esp ; ret 0x348
0x0000000000403e94 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x81e9
0x0000000000403b1a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004646ce : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000045b879 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf748
0x0000000000411df7 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xa0e9
0x00000000004013ab : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc031
0x0000000000475c9c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004345a5 : dec dword ptr [rdi] ; xor dword ptr [rbx + rax*2], 0 ; ret
0x0000000000450935 : dec dword ptr [rdx] ; jne 0x450940 ; ret
0x0000000000493876 : dec dword ptr [rip + 0x22efe4] ; jne 0x4938a5 ; ret
0x00000000004b1ddf : dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x000000000046cfad : dec ecx ; ret
0x000000000042e711 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000043daf5 : dec qword ptr [rax - 0x7d] ; ret 0x4101
0x000000000043daab : dec qword ptr [rcx - 0x7d] ; ret
0x00000000004b26dd : div ah ; jmp qword ptr [rdx]
0x000000000048dffd : div byte ptr [rax + rbx - 0x80] ; cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x0000000000459812 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000442971 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x00000000004572a5 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475f40 : div ebp ; pop rbp ; pop r12 ; ret
0x000000000044e70d : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x000000000043332e : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004572a4 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475f3f : div rbp ; pop rbp ; pop r12 ; ret
0x0000000000400567 : enter -0x1401, -0x3a ; ret
0x00000000004328d4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000042e5ce : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000042e70e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000469e05 : enter -0x74b2, 4 ; ret 0xf641
0x0000000000460325 : enter -2, -1 ; call 0x41c586
0x0000000000434fd4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004b237d : enter -3, -0x20 ; fscale ; jmp qword ptr [rax]
0x0000000000475461 : enter -3, -1 ; add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x000000000040ef3a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000045b0fa : enter 0x31c3, -0x40 ; nop ; ret
0x000000000041868d : enter 0x31c3, -0x40 ; ret
0x0000000000400ab2 : enter 0x48ff, -0x7d ; ret 0xeb04
0x0000000000478a69 : enter 0x4c20, 0x39 ; ret 0x8188
0x00000000004019ea : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004af07c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000425496 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004170b1 : enter 0xf66, -0x15 ; ret
0x000000000040d477 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000040da23 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000407f3a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004375c6 : fadd dword ptr [rax] ; leave ; ret
0x000000000040bf5b : fadd dword ptr [rcx + 0x5d] ; ret
0x00000000004387f2 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000475dda : fadd qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000434467 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x00000000004b6b5c : fadd qword ptr [rsi] ; add al, dl ; loop 0x4b6b5f ; jmp rbx
0x0000000000476d97 : fadd st(1) ; call 0xffffffff8a0996c2
0x00000000004777cd : fadd st(1) ; call 0xffffffff8a09a0f8
0x00000000004b1f30 : fadd st(3), st(0) ; std ; dec dword ptr [rbx + rax*8 - 3] ; inc esp ; ret
0x0000000000424fe1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ae6b8 : fcmovb st(0), st(3) ; ret
0x00000000004ba664 : fcmovne st(0), st(2) ; stc ; jmp qword ptr [rdx]
0x00000000004b3ab8 : fcom dword ptr [rsi - 0xb] ; jmp rsp
0x00000000004bb684 : fcom qword ptr [rdx] ; cli ; jmp qword ptr [rdx]
0x000000000040d9f5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408575 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040864a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000434cef : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000414c04 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004af439 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004ad6a0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000433400 : fcompi st(3) ; ret
0x00000000004b5bbd : fcompi st(5) ; jmp qword ptr [rdx]
0x000000000047214d : fcos ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000471451 : fcos ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004b8c48 : fdiv dword ptr [rdi] ; clc ; jmp qword ptr [rdx]
0x00000000004be45c : fdivr qword ptr [rdi + 0x5a100000] ; cld ; jmp qword ptr [rax]
0x00000000004ac9f5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2844 : fdivr st(5) ; hlt ; jmp qword ptr [rdx]
0x00000000004b5b2d : fdivr st(5), st(0) ; jmp qword ptr [rdx]
0x00000000004328d8 : fdivr st(7) ; ret
0x00000000004079c2 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x00000000004344ab : fiadd dword ptr [rbx + 0x210247c] ; cmove eax, edx ; jmp 0x434473
0x000000000043439b : fiadd dword ptr [rbx + 0x298247c] ; cmove eax, edx ; ret
0x000000000048342a : fiadd dword ptr [rcx - 0x77] ; ret
0x00000000004356e9 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000004af286 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000438705 : fidivr dword ptr [rax + 1] ; ret
0x000000000044e6f8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000004af9a1 : fild word ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043c2ed : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000047dac5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041c6d2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000046ba3f : fimul dword ptr [rcx] ; ret 0xb70f
0x0000000000481e86 : fimul word ptr [rax - 0x77] ; ret
0x0000000000440c27 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000044e167 : fimul word ptr [rax - 0x7d] ; ret
0x000000000046d0de : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x46d138
0x000000000047b8be : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47b918
0x00000000004b691b : fimul word ptr [rdx] ; ret
0x000000000040d4e5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040d665 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000045ce68 : fisttp dword ptr [rax + 0x39] ; ret 0x5c89
0x0000000000407ce4 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x407d08
0x0000000000491451 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000046c591 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000401832 : fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x000000000043dae2 : fisttp dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000483427 : fisttp dword ptr [rcx - 0x77] ; fiadd dword ptr [rcx - 0x77] ; ret
0x000000000046c5ab : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000004736bf : fisttp dword ptr [rdi] ; test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x000000000047c7e6 : fisttp qword ptr [rax - 0x77] ; ret
0x000000000047cab1 : fisttp qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret
0x00000000004b3374 : fisttp qword ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x0000000000472a0e : fisttp qword ptr [rcx - 0x7c09ce35] ; ret
0x0000000000435c37 : fisttp qword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000434999 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000469127 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000046c62f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000435df5 : fisttp word ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000465a6a : fisttp word ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x98e8
0x00000000004211ad : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004343f2 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000045edf1 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x000000000047551a : fisub dword ptr [rdi - 0x38b70001] ; ret 0xffc0
0x00000000004253b1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004250b1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041328a : fisubr word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x58b
0x0000000000467157 : fld qword ptr [rax + rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000445eb4 : fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; ret 0xfd66
0x0000000000458568 : fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; ret 0xfffb
0x0000000000478bb5 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004ad6e1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000048cd4a : fld xword ptr [rsp - 0x18] ; ret
0x0000000000444ac9 : fldcw word ptr [rsp - 2] ; ret
0x000000000041bcd9 : fldenv dword ptr [rsi + 0xf] ; je 0x41bd36 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000422b57 : fldenv dword ptr [rsi + 0xf] ; je 0x422bb4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000425431 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041bbd1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000046d184 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000407d65 : fmul dword ptr [rax + 0x39] ; ret
0x000000000040a57c : fmul dword ptr [rax + 0xf] ; ret
0x0000000000410290 : fmul dword ptr [rax + 3] ; add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x000000000044c351 : fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x0000000000466858 : fmul dword ptr [rax - 0x7d] ; ret
0x000000000045d754 : fmul dword ptr [rcx + 0x39] ; ret
0x0000000000471b85 : fmul dword ptr [rcx - 0x77] ; ret
0x000000000046bbca : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x000000000046a62d : fmul qword ptr [rax - 0x75] ; sbb al, 0x24 ; add rsp, 0x30 ; ret
0x00000000004b305c : fmul qword ptr [rbx] ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xb], al ; call qword ptr [rbx]
0x0000000000417449 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041cf7f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000481448 : fmulp st(1) ; ret
0x00000000004069f5 : fpatan ; ret
0x00000000004780c1 : frstor dword ptr [rcx + rcx*4 + 0x34] ; and eax, 0x2d0 ; ret
0x00000000004251b1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ba244 : frstor dword ptr [rsi - 7] ; jmp qword ptr [rdx]
0x00000000004b2381 : fscale ; jmp qword ptr [rax]
0x00000000004b5856 : fst qword ptr [rax] ; idiv bh ; sbb al, 0xd ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004ad3c7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000422e6e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004ad740 : fstp st(0) ; ret 0xde5d
0x000000000047616d : fstp st(4), st(0) ; and al, 0 ; jmp rax
0x000000000043419c : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x00000000004254b1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d444 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000432ceb : fsub qword ptr [rsi + 0xf] ; jmp 0x432cb7
0x00000000004252b1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004171cc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000471252 : fsub st(1), st(0) ; int1 ; ret 0xffff
0x0000000000434fd2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004af418 : fucom st(5) ; loop 0x4af471 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000475dd7 : fucompi st(0) ; ret
0x0000000000468888 : fucompi st(0) ; ret 0xffe4
0x00000000004829d9 : fucompi st(0) ; shl esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000496561 : hlt ; clc ; inc dword ptr [rax - 0x15] ; clc ; call qword ptr [rax]
0x00000000004ad7c8 : hlt ; jmp 0x4ad79d
0x00000000004b26de : hlt ; jmp qword ptr [rdx]
0x00000000004bd712 : hlt ; jmp qword ptr [rsi]
0x000000000042a3fa : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427a4e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004323e3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400fa0 : hlt ; pop rbp ; mov edi, 0x6c1c30 ; jmp rax
0x00000000004be874 : hlt ; ret
0x00000000004be774 : hlt ; ret 0
0x00000000004ad903 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004323e7 : hlt ; sub eax, edx ; ret
0x000000000045d789 : idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x000000000048eabf : idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000046cfb2 : idiv bh ; dec ecx ; ret
0x00000000004b5a98 : idiv bh ; sbb al, 0xd ; add ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b6308 : idiv bh ; sbb al, 0xd ; cwde ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000004b5f18 : idiv bh ; sbb al, 0xd ; imul al ; cmc ; jmp qword ptr [rdx]
0x00000000004b5588 : idiv bh ; sbb al, 0xd ; in al, -0x55 ; cmc ; jmp qword ptr [rdx]
0x00000000004b56f0 : idiv bh ; sbb al, 0xd ; in eax, -0x52 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5bb8 : idiv bh ; sbb al, 0xd ; insb byte ptr [rdi], dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000004b54f8 : idiv bh ; sbb al, 0xd ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x00000000004b58e8 : idiv bh ; sbb al, 0xd ; je 0x4b58b1 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5810 : idiv bh ; sbb al, 0xd ; jl 0x4b57cb ; cmc ; jmp qword ptr [rdx]
0x00000000004b6158 : idiv bh ; sbb al, 0xd ; jns 0x4b6153 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5b70 : idiv bh ; sbb al, 0xd ; lahf ; fdivr st(5), st(0) ; jmp qword ptr [rdx]
0x00000000004b62c0 : idiv bh ; sbb al, 0xd ; loopne 0x4b62c7 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5738 : idiv bh ; sbb al, 0xd ; mov cl, 0xae ; cmc ; jmp qword ptr [rdx]
0x00000000004b6110 : idiv bh ; sbb al, 0xd ; mov ebp, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b5ae0 : idiv bh ; sbb al, 0xd ; movsxd rax, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b5cd8 : idiv bh ; sbb al, 0xd ; or ah, ah ; cmc ; jmp qword ptr [rdx]
0x00000000004b61e8 : idiv bh ; sbb al, 0xd ; or al, dh ; cmc ; jmp qword ptr [rdx]
0x00000000004b5d68 : idiv bh ; sbb al, 0xd ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004b5978 : idiv bh ; sbb al, 0xd ; out 0xc1, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b5a08 : idiv bh ; sbb al, 0xd ; pop rcx ; ret 0xfff5
0x00000000004b5c00 : idiv bh ; sbb al, 0xd ; push rax ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000004b5e40 : idiv bh ; sbb al, 0xd ; push rbx ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004b5858 : idiv bh ; sbb al, 0xd ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b6230 : idiv bh ; sbb al, 0xd ; scasd eax, dword ptr [rdi] ; cmc ; cmc ; jmp qword ptr [rdx]
0x00000000004b57c8 : idiv bh ; sbb al, 0xd ; scasd eax, dword ptr [rdi] ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b63e0 : idiv bh ; sbb al, 0xd ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004b5c90 : idiv bh ; sbb al, 0xd ; std ; jrcxz 0x4b5c93 ; jmp qword ptr [rdx]
0x00000000004b5a50 : idiv bh ; sbb al, 0xd ; sub ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b5d20 : idiv bh ; sbb al, 0xd ; sub al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5c48 : idiv bh ; sbb al, 0xd ; sub esp, esp ; cmc ; jmp qword ptr [rdx]
0x00000000004b5fa8 : idiv bh ; sbb al, 0xd ; xor ch, cl ; cmc ; jmp qword ptr [rdx]
0x000000000043b9e6 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x0000000000401816 : idiv byte ptr [rdi + 1] ; call rax
0x000000000046bcfd : idiv ecx ; pop r15 ; ret
0x000000000046cfab : idiv edi ; dec ecx ; ret
0x000000000046bcfc : idiv r9 ; pop r15 ; ret
0x00000000004b5f1c : imul al ; cmc ; jmp qword ptr [rdx]
0x000000000047cab7 : imul al ; ret
0x000000000045296b : imul eax ; mov edi, 0xe9fffc24 ; ret 0xfff0
0x00000000004512b6 : imul eax ; push rsp ; test dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x0000000000435167 : imul eax ; ret
0x000000000047fde0 : imul eax ; stosb byte ptr [rdi], al ; ret
0x0000000000430f41 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000040fbc5 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b8122 : imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x000000000040ec97 : imul edi, dword ptr [rdx], 0x2b ; add byte ptr [rax], al ; ret
0x000000000045b4fe : imul esi, edx ; add eax, esi ; ret
0x00000000004303bc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000493878 : in al, -0x11 ; and al, byte ptr [rax] ; jne 0x4938a3 ; ret
0x00000000004bd474 : in al, -0x53 ; add byte ptr [rax], al ; ret 0xfb88
0x00000000004b558c : in al, -0x55 ; cmc ; jmp qword ptr [rdx]
0x000000000048e47b : in al, -0x7d ; call qword ptr [rcx]
0x00000000004b5c4d : in al, -0xb ; jmp qword ptr [rdx]
0x000000000042a3da : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000480ea2 : in al, -1 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000436a65 : in al, -1 ; dec dword ptr [rax - 0x75] ; jge 0x436a74 ; call r12
0x000000000041956c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004bbe6f : in al, 0xa ; ret
0x0000000000435cd0 : in al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004b2b64 : in al, 6 ; add byte ptr [rax], al ; sub byte ptr [rsi], bl ; cmc ; call qword ptr [rax]
0x0000000000402fe3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004ba56c : in al, dx ; add byte ptr [rax], 0 ; ror cl, 1 ; stc ; call qword ptr [rdx]
0x0000000000418e10 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000496569 : in al, dx ; clc ; call qword ptr [rax]
0x0000000000496479 : in al, dx ; clc ; call rax
0x0000000000496489 : in al, dx ; clc ; push qword ptr [rdx - 0x13] ; clc ; call qword ptr [rax]
0x0000000000496469 : in al, dx ; clc ; push rax ; in eax, dx ; clc ; jmp qword ptr [rcx]
0x000000000046cc28 : in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000048ede7 : in al, dx ; cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000048cd49 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000045ec36 : in al, dx ; jo 0x45ec32 ; ret 0x4840
0x0000000000427a4a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a7da : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000459647 : in al, dx ; or al, ch ; ret 1
0x000000000041525a : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000413d6a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045ad46 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a1eeb6
0x000000000045aa6f : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004aee5e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4aedf1 ; ret 0x48f
0x00000000004aee5d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4aedf2 ; ret 0x48f
0x0000000000408c55 : in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x00000000004af419 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b56f4 : in eax, -0x52 ; cmc ; jmp qword ptr [rdx]
0x000000000042a45a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042208a : in eax, -0xd ; ret
0x000000000046f3e9 : in eax, -1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004709c4 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004ae8e1 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bccd9 : in eax, -6 ; jmp qword ptr [rdx]
0x000000000040c552 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b5736 : in eax, 0x11 ; idiv bh ; sbb al, 0xd ; mov cl, 0xae ; cmc ; jmp qword ptr [rdx]
0x00000000004ad563 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041c5fa : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000446962 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004ac7f9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045a993 : in eax, 0xf ; je 0x45a9b8 ; add rax, 2 ; ret
0x000000000049648d : in eax, dx ; clc ; call qword ptr [rax]
0x000000000049646d : in eax, dx ; clc ; jmp qword ptr [rcx]
0x00000000004b60cd : in eax, dx ; cmc ; jmp qword ptr [rdx]
0x0000000000491cef : in eax, dx ; jne 0x491cd1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000432c02 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000042785a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a85a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000487e10 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479c72 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000491ed2 : in eax, dx ; pop rbx ; ret
0x000000000040d322 : in eax, dx ; ret
0x0000000000432d52 : in eax, dx ; sub rax, 1 ; ret
0x000000000041c565 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000496603 : inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x0000000000496687 : inc dword ptr [rax + 0x11] ; stc ; jmp qword ptr [rax]
0x00000000004965e7 : inc dword ptr [rax + 0x12] ; stc ; jmp qword ptr [rax]
0x00000000004965cb : inc dword ptr [rax + 0x14] ; stc ; jmp qword ptr [rax]
0x000000000049666f : inc dword ptr [rax + 0x15] ; stc ; call qword ptr [rax]
0x000000000049699b : inc dword ptr [rax + 0x20fff942] ; cmp cl, bh ; jmp rax
0x0000000000496203 : inc dword ptr [rax + 0x2d] ; clc ; call qword ptr [rax]
0x0000000000496b9b : inc dword ptr [rax + 0x38] ; stc ; call rax
0x00000000004965ff : inc dword ptr [rax + 0x40fff90e] ; adc cl, bh ; jmp qword ptr [rax]
0x000000000049698b : inc dword ptr [rax + 0x44] ; stc ; call rax
0x0000000000496773 : inc dword ptr [rax + 0x47] ; stc ; call rax
0x0000000000496717 : inc dword ptr [rax + 9] ; stc ; call qword ptr [rax - 0x2f0006f6]
0x00000000004968e7 : inc dword ptr [rax + rcx*2 - 7] ; call rsp
0x0000000000451866 : inc dword ptr [rax - 0x10b143] ; jmp qword ptr [rax]
0x0000000000496563 : inc dword ptr [rax - 0x15] ; clc ; call qword ptr [rax]
0x000000000049673b : inc dword ptr [rax - 0x2f000700] ; add ecx, edi ; jmp qword ptr [rax]
0x00000000004966e7 : inc dword ptr [rax - 0x2f000707] ; cli ; clc ; jmp qword ptr [rax]
0x000000000049632b : inc dword ptr [rax - 0x2f000754] ; lodsd eax, dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004474c8 : inc dword ptr [rax - 0x4f143] ; jmp qword ptr [rax]
0x0000000000447f31 : inc dword ptr [rax - 0x57543] ; jmp qword ptr [rax]
0x0000000000496303 : inc dword ptr [rax - 0x64] ; clc ; jmp rax
0x00000000004962e3 : inc dword ptr [rax - 0x71] ; clc ; jmp rax
0x000000000049658f : inc dword ptr [rax - 0xe] ; clc ; call rax
0x000000000049672b : inc dword ptr [rax - 5] ; clc ; call qword ptr [rax - 0x1f000704]
0x000000000049660b : inc dword ptr [rax] ; adc al, 0xf9 ; jmp rax
0x000000000049668f : inc dword ptr [rax] ; adc eax, 0x16d0fff9 ; stc ; call rax
0x0000000000454e04 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x0000000000453f85 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x00000000004259c7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000496257 : inc dword ptr [rax] ; and edi, eax ; jmp rax
0x0000000000496ccf : inc dword ptr [rax] ; cdq ; stc ; call qword ptr [rax]
0x0000000000496363 : inc dword ptr [rax] ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rax]
0x0000000000471668 : inc dword ptr [rax] ; jmp 0x46d94c
0x0000000000496d53 : inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000496d27 : inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x000000000049697b : inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff945]
0x0000000000496763 : inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff948]
0x00000000004961f3 : inc dword ptr [rax] ; sub bh, al ; call rax
0x0000000000465109 : inc dword ptr [rbp + 0x5b0278c0] ; ret
0x0000000000403e90 : inc dword ptr [rbx + 0xfff0878] ; xchg eax, ebp ; ret 0x81e9
0x0000000000451075 : inc dword ptr [rbx - 0x110b43] ; jmp qword ptr [rax]
0x0000000000412cfe : inc dword ptr [rbx - 0x73] ; sub eax, 0x448d48fe ; ret
0x00000000004628e1 : inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x0000000000462617 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000462a37 : inc dword ptr [rbx - 0x76be0008] ; ret 0x850f
0x000000000046272a : inc dword ptr [rbx - 0x76be0008] ; ret 0x940f
0x00000000004567c7 : inc dword ptr [rbx - 0x7bf09608] ; ret 0xfffe
0x0000000000443334 : inc dword ptr [rbx - 0x7cb7fe40] ; ret 0x8308
0x0000000000433341 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043325f : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000045294f : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x00000000004513bd : inc dword ptr [rcx + 0x39] ; ret
0x00000000004094c9 : inc dword ptr [rcx + 0x5f] ; ret
0x000000000040c0a3 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000046a7f0 : inc dword ptr [rcx + rcx*4 - 0x3e] ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000469e02 : inc dword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x00000000004629a2 : inc dword ptr [rcx - 0x77] ; ret 0x3e9
0x00000000004628e4 : inc dword ptr [rcx - 0x77] ; ret 0x5b74
0x000000000046261a : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000462a3a : inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000046272d : inc dword ptr [rcx - 0x77] ; ret 0x940f
0x000000000044cd7f : inc dword ptr [rcx - 0x77] ; sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000440912 : inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000004964cb : inc dword ptr [rcx] ; clc ; call qword ptr [rcx + 0x21fff8f2]
0x00000000004bf437 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000046279a : inc dword ptr [rdi + rcx - 0x4a] ; je 0x4627cd ; sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x000000000047b77c : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000496b0f : inc dword ptr [rdx + rdi] ; stc ; push qword ptr [rcx + rdi - 7] ; jmp rsp
0x000000000049684f : inc dword ptr [rdx] ; stc ; call qword ptr [rdx + 0x22fff943]
0x000000000042198d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004967bb : inc dword ptr [rsi + 0x46] ; stc ; call rsi
0x00000000004967ab : inc dword ptr [rsi] ; stc ; call qword ptr [rsi + 0x26fff947]
0x0000000000496253 : inc eax ; and eax, edi ; inc dword ptr [rax] ; and edi, eax ; jmp rax
0x0000000000496cbf : inc eax ; cwde ; stc ; call rax
0x00000000004b237b : inc eax ; enter -3, -0x20 ; fscale ; jmp qword ptr [rax]
0x0000000000496d6f : inc eax ; lahf ; stc ; jmp rax
0x000000000049633b : inc eax ; mov cl, 0xf8 ; call qword ptr [rax]
0x0000000000496d4b : inc eax ; sahf ; stc ; jmp rax
0x0000000000496393 : inc eax ; test edi, eax ; call rax
0x00000000004579ec : inc ebx ; nop ; xor eax, eax ; ret
0x00000000004328d9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004b1f37 : inc esp ; ret
0x0000000000469e01 : inc qword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x0000000000440911 : inc qword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x000000000040ec74 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000046a13e : insb byte ptr [rdi], dx ; add bh, bh ; loopne 0x46a1a3 ; ret
0x0000000000402777 : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6c20c0], cl ; call rbx
0x0000000000464bb5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000412a98 : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000041406a : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x000000000048cd4b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000444aca : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004b3de5 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x00000000004b5bbc : insb byte ptr [rdi], dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000004af41e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b94ec : insb byte ptr [rdi], dx ; jo 0x4b94f6 ; add byte ptr [rax], ah ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004bd5f4 : insb byte ptr [rdi], dx ; mov bl, bh ; jmp qword ptr [rdx]
0x00000000004b1f48 : insb byte ptr [rdi], dx ; ret
0x00000000004b54fc : insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x00000000004bba1c : insb byte ptr [rdi], dx ; sub edi, edx ; jmp qword ptr [rdx]
0x0000000000487690 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000488590 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a3d5 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000496365 : insd dword ptr [rdi], dx ; clc ; call qword ptr [rax]
0x00000000004af41f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004ad7cd : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004ae6df : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004ae8a7 : int 0x80
0x000000000046baad : int 0xff
0x000000000044e70e : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000041c3ce : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000466452 : int1 ; call rcx
0x000000000049658d : int1 ; clc ; inc dword ptr [rax - 0xe] ; clc ; call rax
0x0000000000496509 : int1 ; clc ; jmp rsi
0x000000000040e31b : int1 ; jne 0x40e316 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000045afbb : int1 ; lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x00000000004167d6 : int1 ; mov eax, 0x16 ; je 0x4167e8 ; ret
0x000000000042a24b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042801f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004323b3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043332f : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004371d2 : int1 ; pop rdx ; pop r10 ; ret
0x00000000004aedf6 : int1 ; ret 0x5803
0x0000000000471254 : int1 ; ret 0xffff
0x00000000004323b7 : int1 ; sub eax, edx ; ret
0x00000000004baa71 : iretd ; stc ; jmp rbx
0x0000000000400f93 : ja 0x400f9a ; pop rbp ; ret
0x000000000040aed0 : ja 0x40af13 ; mov edi, dword ptr [rdi + 0x70] ; xor edx, edx ; call 0x4370f9
0x000000000041c4b8 : ja 0x41c4c3 ; ret
0x0000000000422018 : ja 0x422012 ; ret 0x7401
0x0000000000422e6d : ja 0x422e4e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430507 : ja 0x43050d ; ret
0x0000000000430523 : ja 0x43052d ; mov dword ptr [rdi], ecx ; ret
0x0000000000430564 : ja 0x430573 ; mov qword ptr [rdi], rcx ; ret
0x00000000004305e9 : ja 0x4305fd ; ret
0x000000000043063f : ja 0x430657 ; ret
0x00000000004306c1 : ja 0x4306dd ; ret
0x0000000000430b27 : ja 0x430b31 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430b43 : ja 0x430b51 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430b94 : ja 0x430ba7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430c79 : ja 0x430c91 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430cef : ja 0x430d0b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000430d71 : ja 0x430d91 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043417b : ja 0x434197 ; ret
0x00000000004341ca : ja 0x4341e7 ; ret
0x000000000043435f : ja 0x4343d3 ; ret
0x0000000000444b9d : ja 0x444bc0 ; ret
0x0000000000444e16 : ja 0x444e1d ; ret
0x0000000000444e16 : ja 0x444e20 ; ret
0x000000000044e6f7 : ja 0x44e6dd ; mov eax, r8d ; ret
0x0000000000457132 : ja 0x457196 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000045eb7b : ja 0x45eb97 ; ret
0x000000000045ebd0 : ja 0x45ebef ; ret
0x000000000045ec16 : ja 0x45ec1d ; ret
0x000000000045ec16 : ja 0x45ec20 ; ret
0x000000000045ec5f : ja 0x45ec9d ; add rsp, 0x70 ; pop rbx ; ret
0x000000000045ee23 : ja 0x45ee33 ; ret
0x000000000045ee7d : ja 0x45ee82 ; ret
0x000000000045ee7d : ja 0x45ee85 ; ret
0x000000000046a57b : ja 0x46a5a4 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000046a6e9 : ja 0x46a712 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000046c0ce : ja 0x46c120 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004aee64 : ja 0x4aedeb ; ret 0x48f
0x00000000004b5586 : ja 0x4b55a4 ; idiv bh ; sbb al, 0xd ; in al, -0x55 ; cmc ; jmp qword ptr [rdx]
0x000000000040ef3b : jae 0x40ef65 ; movzx eax, byte ptr [rax] ; ret
0x0000000000438704 : jae 0x4386e7 ; mov eax, 1 ; ret
0x00000000004340fd : jae 0x438926 ; ret
0x0000000000458a31 : jae 0x45898b ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000468087 : jae 0x468045 ; xor eax, eax ; ret
0x0000000000468086 : jae 0x468046 ; xor eax, eax ; ret
0x00000000004ad422 : jae 0x4ad404 ; jo 0x4ad4a0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ae2be : jae 0x4ae299 ; push rsi ; pop rdx ; je 0x4ae28e ; ret 0xacfc
0x00000000004b871c : jae 0x4b8742 ; clc ; jmp qword ptr [rdx]
0x00000000004b9ff4 : jae 0x4ba05d ; stc ; jmp qword ptr [rdx]
0x000000000042602a : jb 0x42603a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042617a : jb 0x42618a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004262ca : jb 0x4262da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042641a : jb 0x42642a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042656a : jb 0x42657a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004266ba : jb 0x4266ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042680a : jb 0x42681a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042695a : jb 0x42696a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426aaa : jb 0x426aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426bfa : jb 0x426c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426d4a : jb 0x426d5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426e9a : jb 0x426eaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426fea : jb 0x426ffa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042713a : jb 0x42714a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042728a : jb 0x42729a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004350ba : jb 0x4350c1 ; std ; dec dword ptr [rax - 0x75] ; jge 0x4350ca ; call rbx
0x00000000004593ac : jb 0x4593a5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000048c8e2 : jb 0x48c95e ; and eax, dword ptr [rax] ; ret
0x0000000000496488 : jb 0x49647d ; clc ; push qword ptr [rdx - 0x13] ; clc ; call qword ptr [rax]
0x000000000049648c : jb 0x49647e ; clc ; call qword ptr [rax]
0x00000000004b2b04 : jb 0x4b2b2c ; cmc ; jmp qword ptr [rdx]
0x00000000004bd3ac : jb 0x4bd3b9 ; sti ; jmp qword ptr [rdx]
0x000000000040d52b : jbe 0x40d4cb ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000419659 : jbe 0x4196a8 ; bsf eax, edx ; ret
0x000000000041bde6 : jbe 0x41be25 ; add rax, rdi ; ret
0x000000000041bdf6 : jbe 0x41be27 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041be06 : jbe 0x41be27 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041be16 : jbe 0x41be27 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000422083 : jbe 0x42209e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x422079 ; ret
0x000000000046b1af : jbe 0x46b1ba ; ret
0x000000000048c6d6 : jbe 0x48c752 ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004932b6 : jbe 0x4932d8 ; clc ; push rbx ; ret
0x00000000004967a0 : jbe 0x4967e7 ; stc ; jmp rsi
0x0000000000400f9f : je 0x400f9d ; pop rbp ; mov edi, 0x6c1c30 ; jmp rax
0x000000000040100a : je 0x40101a ; mov edi, 0x4b2480 ; call rax
0x000000000040104f : je 0x40105f ; mov edi, 0x6bfef0 ; call rax
0x0000000000401431 : je 0x401459 ; add rsp, 8 ; ret
0x0000000000401813 : je 0x401827 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000401e07 : je 0x401e1b ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000401e6b : je 0x401e7f ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x000000000040209b : je 0x4020af ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x00000000004026ae : je 0x4026c2 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402772 : je 0x402789 ; mov edi, 0x6c32a0 ; call rbx
0x0000000000402829 : je 0x402839 ; mov edi, 0x6c2140 ; call rax
0x0000000000402f53 : je 0x402f6a ; mov edi, 0x6c2140 ; call rax
0x000000000040308c : je 0x40309c ; mov edi, 0x6c21a0 ; call rax
0x0000000000403203 : je 0x403213 ; mov edi, 0x6c21a0 ; call rax
0x000000000040c97b : je 0x40c921 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d4f3 : je 0x40d4b0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d673 : je 0x40d630 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d81c : je 0x40d82e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e294 : je 0x40e29f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040fa84 : je 0x40f8c4 ; ret
0x000000000040f9ae : je 0x40f9bc ; xor eax, eax ; ret
0x0000000000410928 : je 0x41092e ; call rdx
0x0000000000411152 : je 0x411163 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004148dc : je 0x414908 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x00000000004154b0 : je 0x4154dc ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000415866 : je 0x41586c ; call rax
0x00000000004167dc : je 0x4167e2 ; ret
0x00000000004167f5 : je 0x416804 ; pop rbx ; ret
0x0000000000416841 : je 0x416857 ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000416fff : je 0x417011 ; lea rax, qword ptr [rip + 0x19e58] ; ret
0x0000000000418743 : je 0x41870d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000419415 : je 0x41941d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000419492 : je 0x4194a4 ; lea rax, qword ptr [rip + 0x13d25] ; ret
0x000000000041960b : je 0x419615 ; bsf eax, edx ; ret
0x000000000041960b : je 0x419616 ; bsf eax, edx ; ret
0x00000000004196b4 : je 0x4196c5 ; bsf rax, rdx ; ret
0x00000000004196b4 : je 0x4196c6 ; bsf rax, rdx ; ret
0x0000000000419658 : je 0x4196d6 ; bsf rax, rdx ; ret
0x000000000041bcdc : je 0x41bd33 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041be5c : je 0x41be6f ; lea rax, qword ptr [rip + 0x852b] ; ret
0x000000000041ca12 : je 0x41ca24 ; lea rax, qword ptr [rip + 0x11f55] ; ret
0x000000000041ef03 : je 0x41eecd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000420a93 : je 0x420a5d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000422b5a : je 0x422bb1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000422c11 : je 0x422c29 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000425727 : je 0x425731 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043326d : je 0x433236 ; movzx eax, dl ; pop rbx ; ret
0x0000000000433245 : je 0x433238 ; movzx eax, cl ; pop rbx ; ret
0x000000000043326d : je 0x433238 ; movzx eax, dl ; pop rbx ; ret
0x0000000000433386 : je 0x4333b0 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000004333ff : je 0x4333e3 ; ret
0x00000000004334e8 : je 0x4334f8 ; mov edi, 0x6c32a0 ; call rax
0x0000000000433614 : je 0x433624 ; mov edi, 0x6c32a0 ; call rax
0x0000000000433880 : je 0x433861 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004345a8 : je 0x4345f1 ; add byte ptr [rax], al ; ret
0x0000000000434d4a : je 0x434d51 ; ret
0x0000000000436140 : je 0x436150 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000436b18 : je 0x436b29 ; lea rax, qword ptr [r12 - 1] ; jmp 0x436aec
0x0000000000437229 : je 0x43722e ; ret
0x000000000043728d : je 0x437292 ; ret
0x0000000000438416 : je 0x438426 ; mov edi, 0x6c11e0 ; call rax
0x0000000000438593 : je 0x4385a3 ; mov edi, 0x6c11e0 ; call rax
0x0000000000438728 : je 0x438732 ; ret
0x0000000000438744 : je 0x438759 ; mov dword ptr [rip + 0x28784c], edx ; pop rbx ; ret
0x0000000000438c18 : je 0x438c27 ; mov eax, 0x6c3fc0 ; ret
0x000000000043df96 : je 0x43dfc4 ; or byte ptr [rax - 0x75], cl ; je 0x43dfc9 ; pop rax ; call rax
0x000000000043df9b : je 0x43dfc4 ; pop rax ; call rax
0x0000000000442972 : je 0x44293c ; pop rbx ; ret
0x0000000000442eb1 : je 0x442ec1 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442ed6 : je 0x442ee6 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442fe2 : je 0x442fe8 ; call rax
0x0000000000443041 : je 0x443051 ; mov edi, 0x6c32a0 ; call rax
0x0000000000443148 : je 0x443158 ; mov edi, 0x6c32a0 ; call rax
0x00000000004432c2 : je 0x4432c8 ; call rax
0x000000000044334e : je 0x44335e ; mov edi, 0x6c32a0 ; call rax
0x000000000044342d : je 0x443444 ; mov edi, 0x6c32a0 ; call rax
0x00000000004443db : je 0x4443e1 ; call rax
0x000000000044499b : je 0x4449a3 ; ret
0x0000000000458420 : je 0x458471 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045841f : je 0x458472 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004590c3 : je 0x4590d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004590f3 : je 0x459155 ; pop rbp ; pop r12 ; ret
0x000000000045930d : je 0x459318 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000459351 : je 0x45935c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000459923 : je 0x459945 ; bsf rax, rdx ; ret
0x0000000000459923 : je 0x459946 ; bsf rax, rdx ; ret
0x00000000004598b3 : je 0x459959 ; bsf rax, rdx ; ret
0x000000000045a979 : je 0x45a999 ; mov cl, dl ; and cl, 0xf ; je 0x45a9a9 ; ret
0x000000000045a980 : je 0x45a9a2 ; ret
0x000000000045a995 : je 0x45a9b6 ; add rax, 2 ; ret
0x000000000045ac99 : je 0x45acc2 ; call rbx
0x000000000045ad22 : je 0x45ad4f ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000045ae94 : je 0x45aec0 ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000045afbe : je 0x45afea ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000045e89e : je 0x45e8a4 ; call rax
0x000000000045ea1b : je 0x45ea25 ; call rdx
0x000000000045ea9b : je 0x45eaa5 ; call rax
0x000000000045f225 : je 0x45f1e3 ; ret
0x000000000045f21f : je 0x45f1f1 ; cmp r10b, 0x3a ; je 0x45f1e9 ; ret
0x000000000046279e : je 0x4627c9 ; sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000463a52 : je 0x4637b1 ; call rax
0x000000000046380d : je 0x463813 ; call rax
0x0000000000463e46 : je 0x463e56 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000464b44 : je 0x464b54 ; mov edi, 0x6c11a0 ; call rax
0x000000000046878e : je 0x46879e ; mov edi, 0x6c11e0 ; call rax
0x0000000000468812 : je 0x468822 ; mov edi, 0x6c11e0 ; call rax
0x00000000004688d7 : je 0x4688e7 ; mov edi, 0x6c11e0 ; call rax
0x0000000000469c1c : je 0x469c2c ; mov edi, 0x6c11a0 ; call rax
0x000000000046a11f : je 0x46a12f ; mov edi, 0x6c11e0 ; call rax
0x000000000046a138 : je 0x46a14a ; pop rbx ; mov edi, 0x6c11e0 ; jmp rax
0x000000000046ab78 : je 0x46aba3 ; sub byte ptr [rax + 0x63], cl ; ret
0x000000000046b6bb : je 0x46b68c ; mov edi, 0x6c11e0 ; call rax
0x000000000046b69c : je 0x46b6ca ; sbb byte ptr [rdi + 0x6c11e0], bh ; call rax
0x000000000046b7f6 : je 0x46b802 ; ret
0x000000000046b80c : je 0x46b81c ; mov edi, 0x6c11e0 ; call rax
0x0000000000475e14 : je 0x475e26 ; mov rax, rdx ; pop rbx ; ret
0x00000000004764d2 : je 0x4764df ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004766b8 : je 0x4766e6 ; mov rdi, qword ptr [r13] ; call r12
0x000000000047a0df : je 0x47a0ef ; mov edi, 0x6c11e0 ; call rax
0x000000000047a2f5 : je 0x47a305 ; mov edi, 0x6c11e0 ; call rax
0x000000000047a39d : je 0x47a3b1 ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000483ecb : je 0x483edb ; mov edi, 0x6c11e0 ; call rax
0x0000000000483ef2 : je 0x483f02 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483f73 : je 0x483f83 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483f9c : je 0x483fac ; mov edi, 0x6c11e0 ; call rax
0x0000000000486893 : je 0x48685d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000488843 : je 0x48880d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048c677 : je 0x48c653 ; ret
0x000000000048d9d2 : je 0x48d9fd ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000048f3c8 : je 0x48f3ba ; add rsp, 8 ; ret
0x000000000049142d : je 0x491487 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491b1a : je 0x491b2a ; mov edi, 0x6c11a0 ; call rax
0x0000000000491bdb : je 0x491beb ; mov edi, 0x6c11a0 ; call rax
0x000000000049316f : je 0x49317a ; call rdx
0x0000000000496b14 : je 0x496b52 ; stc ; jmp rsp
0x00000000004ad588 : je 0x4ad553 ; xor al, 0xd8 ; ret
0x00000000004ad7c7 : je 0x4ad7c4 ; jmp 0x4ad79e
0x00000000004ae2c2 : je 0x4ae28a ; ret 0xacfc
0x00000000004b58ec : je 0x4b58ad ; cmc ; jmp qword ptr [rdx]
0x00000000004b88f4 : je 0x4b8961 ; add byte ptr [rax], al ; call 0xffffffffd34b811f
0x00000000004b8bf4 : je 0x4b8c64 ; add byte ptr [rax], al ; xor dil, al ; jmp rax
0x0000000000400a7c : jg 0x400a0e ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000040aeb1 : jg 0x40af27 ; jmp 0x4370f4
0x000000000040aed3 : jg 0x40af4b ; xor edx, edx ; call 0x4370f6
0x000000000041c5f7 : jg 0x41c610 ; jne 0x41c5e7 ; mov rax, rdi ; ret
0x0000000000422087 : jg 0x42209e ; jne 0x422075 ; ret
0x0000000000427c09 : jg 0x427c5c ; ret
0x0000000000427c8f : jg 0x427cda ; ret
0x0000000000427e09 : jg 0x427e5c ; ret 0x894c
0x0000000000427e8f : jg 0x427eda ; ret 0x894c
0x000000000042a228 : jg 0x42a279 ; loope 0x42a227 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a29f : jg 0x42a2ea ; ret 0xff2
0x000000000042a2b8 : jg 0x42a309 ; loop 0x42a2b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a32f : jg 0x42a37a ; ret
0x000000000042a348 : jg 0x42a399 ; jrcxz 0x42a347 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a3d8 : jg 0x42a429 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a458 : jg 0x42a4a9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a4d8 : jg 0x42a529 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a558 : jg 0x42a5a9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a5d8 : jg 0x42a629 ; call 0x4fc1b5da
0x000000000042a658 : jg 0x42a6a9 ; jmp 0x4fc1b65a
0x000000000042a7d8 : jg 0x42a829 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a858 : jg 0x42a8a9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a8e8 : jg 0x42a939 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a968 : jg 0x42a9b9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a9dc : jg 0x42a9e7 ; ret
0x000000000042aa36 : jg 0x42aa49 ; ret
0x000000000042aa31 : jg 0x42aa81 ; psllq mm1, qword ptr [rdi] ; jg 0x42aa4e ; ret
0x000000000042aaa6 : jg 0x42aab9 ; ret
0x000000000042ab16 : jg 0x42ab29 ; ret
0x000000000042ab11 : jg 0x42ab61 ; or eax, 0xf7f0ff3 ; ret
0x000000000042ab86 : jg 0x42ab99 ; ret
0x000000000042ab81 : jg 0x42abd1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042abf6 : jg 0x42ac09 ; ret
0x000000000042abf1 : jg 0x42ac41 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ac66 : jg 0x42ac79 ; ret
0x000000000042ac61 : jg 0x42acb1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042acd6 : jg 0x42ace9 ; ret
0x000000000042acd1 : jg 0x42ad21 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ad46 : jg 0x42ad59 ; ret
0x000000000042ad41 : jg 0x42ad91 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000042adb6 : jg 0x42adc9 ; ret
0x000000000042ae26 : jg 0x42ae39 ; ret
0x000000000042ae96 : jg 0x42aea9 ; ret
0x000000000042ae91 : jg 0x42aee1 ; add eax, 0xf7f0ff3 ; ret
0x000000000042af06 : jg 0x42af19 ; ret
0x000000000042af01 : jg 0x42af51 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042af76 : jg 0x42af89 ; ret
0x000000000042af71 : jg 0x42afc1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042afe6 : jg 0x42aff9 ; ret
0x000000000042afe1 : jg 0x42b031 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b056 : jg 0x42b069 ; ret
0x000000000042b051 : jg 0x42b0a1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004305d6 : jg 0x4305e1 ; ret
0x00000000004305e6 : jg 0x4305f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004305fa : jg 0x430609 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430619 : jg 0x430627 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430629 : jg 0x430637 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430639 : jg 0x43064a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043065a : jg 0x430669 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043067a : jg 0x430689 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043069a : jg 0x4306a9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004306ba : jg 0x4306cc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004306fd : jg 0x43070f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043071d : jg 0x43072f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043073b : jg 0x43074b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043075b : jg 0x43076b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043077b : jg 0x43078b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043079b : jg 0x4307ab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000430c66 : jg 0x430c75 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430c76 : jg 0x430c88 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430ca9 : jg 0x430cbb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000430cc9 : jg 0x430cdb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000430def : jg 0x430e4f ; or eax, 0x1c478d48 ; ret
0x0000000000433200 : jg 0x43323d ; ret 0x2b77
0x0000000000437afc : jg 0x437b4c ; add byte ptr [rax + 9], cl ; ret 0x8948
0x0000000000437fca : jg 0x43801b ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000437fea : jg 0x43803b ; add byte ptr [rax + 0xf], cl ; ret
0x000000000043800a : jg 0x43805b ; add byte ptr [rax + 0xf], cl ; ret
0x000000000046a57f : jg 0x46a5ac ; call r11
0x000000000046a6ed : jg 0x46a71a ; call r11
0x000000000046b9fa : jg 0x46ba00 ; add byte ptr [rcx], cl ; ret 0xd089
0x000000000046b9bb : jg 0x46ba0d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000481c5c : jg 0x481c65 ; jmp 0x481c6a
0x00000000004b85b4 : jg 0x4b85d9 ; clc ; jmp qword ptr [rdx]
0x0000000000434c9f : jge 0x434ce1 ; add byte ptr [rax], al ; ret
0x0000000000434f8b : jge 0x434f8f ; call rbx
0x00000000004350b2 : jge 0x4350b6 ; call rbx
0x00000000004350c0 : jge 0x4350c4 ; call rbx
0x00000000004351f5 : jge 0x4351f9 ; call rbx
0x0000000000435365 : jge 0x435369 ; call rbx
0x0000000000435373 : jge 0x435377 ; call rbx
0x000000000043577f : jge 0x43574a ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000436a6a : jge 0x436a6f ; call r12
0x0000000000439144 : jge 0x43910d ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000045be86 : jge 0x45be2f ; movzx esi, word ptr [rbp - 0x70] ; jmp 0x45be58
0x0000000000463466 : jge 0x463473 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x00000000004766bd : jge 0x4766c2 ; call r12
0x000000000048f6bf : jge 0x48f6bc ; leave ; ret
0x000000000048f75a : jge 0x48f75d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048f7eb : jge 0x48f7e8 ; leave ; ret
0x000000000048f83a : jge 0x48f83d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048f907 : jge 0x48f90a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048f99f : jge 0x48f99c ; leave ; ret
0x000000000048f9f3 : jge 0x48f9f6 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004b5d1e : jge 0x4b5d35 ; idiv bh ; sbb al, 0xd ; sub al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x0000000000401282 : jl 0x4012b0 ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000408b92 : jl 0x408bbd ; cmp al, ch ; xchg eax, esi ; ret 0
0x000000000041b047 : jl 0x41b072 ; or byte ptr [rax + 0x39], cl ; ret
0x000000000043439d : jl 0x4343c9 ; cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000004344ad : jl 0x4344d9 ; adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0x434471
0x0000000000435456 : jl 0x435484 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000043bd5c : jl 0x43bd8a ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x000000000043c0b0 : jl 0x43c0dd ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043c39b : jl 0x43c3c9 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043c67b : jl 0x43c6a9 ; cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x000000000043c76d : jl 0x43c79b ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x000000000043cad0 : jl 0x43cafd ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043cd19 : jl 0x43cd47 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043d020 : jl 0x43d04e ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043d22b : jl 0x43d259 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043d8f5 : jl 0x43d922 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043e582 : jl 0x43e5af ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043ebbc : jl 0x43ebea ; mov qword ptr [rsp + 8], rax ; call r12
0x000000000043f56d : jl 0x43f59b ; mov qword ptr [rsp + 8], rax ; call r15
0x000000000043fecb : jl 0x43fef9 ; push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000440391 : jl 0x4403be ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000440689 : jl 0x4406b6 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000440f8c : jl 0x440fba ; push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000441439 : jl 0x441466 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000441729 : jl 0x441756 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000004456d6 : jl 0x445704 ; sbb byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret
0x000000000044cb96 : jl 0x44cb60 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045b7fe : jl 0x45b82b ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc031
0x0000000000466fa9 : jl 0x466fd8 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000477921 : jl 0x47794c ; sbb byte ptr [rcx + 0x29], cl ; ret 0x6348
0x0000000000479daa : jl 0x479d81 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000481cca : jl 0x481cf5 ; xor byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000004b5814 : jl 0x4b57c7 ; cmc ; jmp qword ptr [rdx]
0x0000000000442982 : jle 0x442995 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446907 : jle 0x4468c3 ; jmp 0x4468d0
0x0000000000446906 : jle 0x4468c4 ; jmp 0x4468d1
0x000000000047809d : jle 0x4780a4 ; ret
0x000000000048fb25 : jle 0x48fb34 ; cmovbe eax, ecx ; ret
0x00000000004b39d4 : jle 0x4b3a31 ; cmc ; jmp qword ptr [rdx]
0x0000000000400ed3 : jmp 0x400e98
0x0000000000404abb : jmp 0x404cbf
0x0000000000407a7d : jmp 0x4079aa
0x000000000040a9b3 : jmp 0x40a978
0x000000000040c539 : jmp 0x40c540
0x000000000040cf35 : jmp 0x40cf49
0x000000000041448a : jmp 0x41449d
0x0000000000416e92 : jmp 0x41548d
0x00000000004170b4 : jmp 0x41707a
0x0000000000417208 : jmp 0x4171cd
0x0000000000422c6c : jmp 0x422c32
0x0000000000422db8 : jmp 0x422d7d
0x0000000000432bae : jmp 0x432b74
0x0000000000432c7f : jmp 0x432c45
0x0000000000432cee : jmp 0x432cb4
0x0000000000434542 : jmp 0x434472
0x0000000000436b1f : jmp 0x436ae5
0x000000000040aeb3 : jmp 0x4370f2
0x0000000000439542 : jmp 0x439537
0x000000000043aa9d : jmp 0x43aa63
0x000000000043c706 : jmp 0x43c6cb
0x000000000043d0fd : jmp 0x43d0c3
0x000000000043d147 : jmp 0x43d10c
0x000000000043fc2d : jmp 0x43fbf2
0x0000000000440d65 : jmp 0x440d2a
0x0000000000444bbb : jmp 0x444b8b
0x0000000000445e05 : jmp 0x445e17
0x0000000000446726 : jmp 0x44660a
0x0000000000446909 : jmp 0x4468ce
0x0000000000454c70 : jmp 0x450eff
0x0000000000455756 : jmp 0x451a43
0x000000000045963b : jmp 0x459601
0x000000000045963a : jmp 0x459602
0x000000000045a13b : jmp 0x459f99
0x000000000045be8c : jmp 0x45be52
0x000000000045e5f0 : jmp 0x45e5b6
0x000000000045ec94 : jmp 0x45ec46
0x00000000004603cb : jmp 0x46035f
0x000000000046abb3 : jmp 0x46abc4
0x000000000046ac81 : jmp 0x46ac92
0x000000000046adfa : jmp 0x46ae0f
0x000000000046aea4 : jmp 0x46aeb9
0x000000000046d0e2 : jmp 0x46d134
0x0000000000471253 : jmp 0x46d54b
0x000000000047166a : jmp 0x46d94a
0x000000000046f3e7 : jmp 0x46d94f
0x0000000000471bb9 : jmp 0x46de2a
0x0000000000471b9e : jmp 0x46e6f4
0x00000000004728c1 : jmp 0x46eb12
0x000000000046f0b8 : jmp 0x46f07d
0x000000000046fb5b : jmp 0x46fa50
0x0000000000474a8f : jmp 0x470c9f
0x00000000004734f9 : jmp 0x472977
0x0000000000474b67 : jmp 0x4744eb
0x0000000000474ad5 : jmp 0x47481c
0x0000000000474f7e : jmp 0x474d97
0x0000000000478aa9 : jmp 0x478ab9
0x000000000047b8c2 : jmp 0x47b914
0x000000000047e213 : jmp 0x47e1b6
0x0000000000481c5e : jmp 0x481c68
0x000000000045dd93 : jmp 0x484603f5
0x000000000048d6fb : jmp 0x48d6c1
0x000000000048d776 : jmp 0x48d6c7
0x000000000048e105 : jmp 0x48dbac
0x000000000046fb5c : jmp 0x4946fb65
0x00000000004aca8a : jmp 0x4acac9
0x00000000004ad7c9 : jmp 0x4ad79c
0x00000000004ae7c0 : jmp 0x4ae754
0x00000000004ae7bf : jmp 0x4ae755
0x000000000042a65a : jmp 0x4fc1b658
0x000000000042a659 : jmp 0x4fc1b659
0x0000000000467b38 : jmp 0x5097143
0x0000000000467ed8 : jmp 0x50974e3
0x000000000048d87f : jmp 0x50bce8a
0x000000000040ebb3 : jmp 0xffffffffc34116d0
0x000000000046c0d1 : jmp 0xffffffffc3564a26
0x000000000040f9e6 : jmp 0xffffffffc3ca46f0
0x0000000000491265 : jmp 8
0x0000000000484083 : jmp qword ptr [r11]
0x00000000004969db : jmp qword ptr [rax + 0x16fff938]
0x0000000000496d8b : jmp qword ptr [rax - 0x3f000660]
0x0000000000446f15 : jmp qword ptr [rax]
0x000000000041044d : jmp qword ptr [rbx]
0x0000000000492c2d : jmp qword ptr [rcx]
0x000000000049126d : jmp qword ptr [rdi]
0x0000000000496a4b : jmp qword ptr [rdx + 0x22fff93a]
0x0000000000496a43 : jmp qword ptr [rdx + 0x22fff93b]
0x0000000000496a3b : jmp qword ptr [rdx + 0x22fff93c]
0x0000000000496a33 : jmp qword ptr [rdx + 0x22fff93d]
0x0000000000496a2b : jmp qword ptr [rdx + 0x22fff93e]
0x0000000000483e7d : jmp qword ptr [rdx]
0x0000000000442dc9 : jmp qword ptr [rsi + 0xf]
0x00000000004967b3 : jmp qword ptr [rsi]
0x00000000004172f9 : jmp r10
0x000000000046a1de : jmp r11
0x000000000048e619 : jmp r8
0x0000000000425a10 : jmp r9
0x0000000000496d93 : jmp rax
0x000000000046a1df : jmp rbx
0x00000000004243b4 : jmp rcx
0x0000000000416ed1 : jmp rdi
0x0000000000400fe7 : jmp rdx
0x000000000049650b : jmp rsi
0x0000000000483496 : jmp rsp
0x0000000000400cdb : jne 0x400ce0 ; ret
0x0000000000400fd0 : jne 0x400fd7 ; pop rbp ; ret
0x0000000000404ab9 : jne 0x404ad8 ; jmp 0x404cc1
0x00000000004069f4 : jne 0x4069d2 ; ret
0x0000000000407ce3 : jne 0x407cc8 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x407d09
0x00000000004083da : jne 0x408455 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000409fdc : jne 0x409fe3 ; pop rbx ; ret
0x000000000040d321 : jne 0x40d313 ; ret
0x000000000040e2e2 : jne 0x40e2cd ; pop rbx ; ret
0x000000000040e31c : jne 0x40e315 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000040e896 : jne 0x40e88b ; ret
0x000000000040ca57 : jne 0x40ecc2 ; ret
0x000000000040ec72 : jne 0x40eeeb ; ret
0x000000000041022a : jne 0x4169b1 ; ret
0x0000000000417262 : jne 0x417274 ; lea rax, qword ptr [rip + 5] ; ret
0x000000000041bd99 : jne 0x41bdf5 ; xor rax, rax ; ret
0x000000000041bd59 : jne 0x41be19 ; xor rax, rax ; ret
0x000000000041be48 : jne 0x41be5b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000041c53e : jne 0x41c523 ; ret
0x000000000041c6a3 : jne 0x41c58f ; mov rax, rdi ; ret
0x000000000041c5f9 : jne 0x41c5e5 ; mov rax, rdi ; ret
0x000000000041cb3e : jne 0x41cb50 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041cba1 : jne 0x41cbb3 ; lea rax, qword ptr [rip + 6] ; ret
0x0000000000422148 : jne 0x422020 ; ret
0x0000000000422089 : jne 0x422073 ; ret
0x0000000000422e16 : jne 0x422e01 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000042437c : jne 0x424366 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042596d : jne 0x425997 ; xor eax, eax ; ret
0x0000000000424f61 : jne 0x42599b ; xor eax, eax ; ret
0x0000000000424f89 : jne 0x4259a7 ; xor eax, eax ; ret
0x0000000000430f55 : jne 0x430ee6 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000430f27 : jne 0x430ee6 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000430f26 : jne 0x430ee7 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004326b4 : jne 0x4328c8 ; xor eax, eax ; ret
0x00000000004328b9 : jne 0x4328d9 ; xor eax, eax ; ret
0x0000000000432761 : jne 0x4328dd ; xor eax, eax ; ret
0x00000000004328d1 : jne 0x4328de ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004329e1 : jne 0x4329d2 ; ret
0x0000000000432a91 : jne 0x432a82 ; ret
0x0000000000432c01 : jne 0x432bf6 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000432d51 : jne 0x432d46 ; sub rax, 1 ; ret
0x00000000004356e8 : jne 0x4356d0 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000436ebf : jne 0x436e79 ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436efa
0x0000000000436f5d : jne 0x436f17 ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436f9c
0x00000000004371d1 : jne 0x4371c9 ; pop rdx ; pop r10 ; ret
0x0000000000437434 : jne 0x437413 ; ret
0x00000000004375cd : jne 0x4375ce ; nop ; xor eax, eax ; leave ; ret
0x000000000043aa9b : jne 0x43aa73 ; jmp 0x43aa65
0x0000000000446961 : jne 0x44694d ; mov rax, rsi ; ret
0x00000000004469e5 : jne 0x4469c5 ; mov rax, rsi ; ret
0x000000000044e4b0 : jne 0x44e504 ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x45a718
0x0000000000450776 : jne 0x4507d9 ; mov eax, edx ; pop rbx ; ret
0x0000000000450937 : jne 0x45093e ; ret
0x0000000000454c6a : jne 0x4524b6 ; jmp 0x450f05
0x0000000000457131 : jne 0x4571b2 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000458351 : jne 0x458343 ; ret
0x0000000000459813 : jne 0x45981e ; xor rax, rax ; ret
0x000000000045a784 : jne 0x45a78f ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045b0eb : jne 0x45b0a6 ; nop dword ptr [rax] ; ret
0x000000000045b12c : jne 0x45b123 ; ret
0x000000000045be8a : jne 0x45be1f ; jmp 0x45be54
0x000000000045e6d1 : jne 0x45e6f1 ; pop rbx ; ret
0x000000000045f1e3 : jne 0x45f24a ; mov rax, r9 ; ret
0x00000000004603c6 : jne 0x460353 ; mov byte ptr [rax], 0 ; jmp 0x460364
0x0000000000466595 : jne 0x4658cc ; add rcx, rsi ; call rcx
0x000000000046644a : jne 0x465e4a ; add rcx, rsi ; call rcx
0x00000000004679d9 : jne 0x46798d ; mov eax, dword ptr [rdx] ; ret
0x00000000004694a9 : jne 0x46a0b6 ; ret
0x00000000004694a8 : jne 0x46a0b7 ; ret
0x000000000046b373 : jne 0x46b386 ; add rsp, 0x48 ; ret
0x000000000046b414 : jne 0x46b428 ; xor eax, eax ; add rsp, 0x58 ; ret
0x000000000046b4ed : jne 0x46b508 ; xor eax, eax ; add rsp, 0x78 ; ret
0x000000000046b5a4 : jne 0x46b5b8 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000475f16 : jne 0x475f26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000479b38 : jne 0x479ae7 ; call rbx
0x000000000048409e : jne 0x4840b0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000484101 : jne 0x484113 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000048f6bb : jne 0x48f6b4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048f7e7 : jne 0x48f7e0 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048f99b : jne 0x48f994 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048fbcd : jne 0x48fbd2 ; call r14
0x000000000048ff79 : jne 0x48ffa9 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000490cf9 : jne 0x490d29 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000491298 : jne 0x4912a3 ; pop rbx ; ret
0x00000000004914a4 : jne 0x4914b3 ; ret
0x0000000000491ca5 : jne 0x491c93 ; pop rbx ; ret
0x0000000000491cf0 : jne 0x491cd0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000491e39 : jne 0x491e07 ; add rsp, 8 ; ret
0x0000000000491ed1 : jne 0x491ec4 ; pop rbx ; ret
0x000000000049387c : jne 0x49389f ; ret
0x00000000004b4081 : jne 0x4b407a ; jmp rax
0x000000000042521e : jno 0x42522d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045a782 : jno 0x45a790 ; jne 0x45a791 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045a787 : jno 0x45a794 ; ret
0x000000000046bfc4 : jno 0x46c016 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048c6a1 : jno 0x48c6cb ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004b3f89 : jno 0x4b3f82 ; call qword ptr [rax]
0x00000000004ba334 : jno 0x4ba2f4 ; stc ; jmp qword ptr [rdx]
0x0000000000411e41 : jnp 0x411e7a ; add al, byte ptr [rax] ; nop dword ptr [rax] ; ret
0x000000000043995b : jnp 0x439977 ; call rax
0x0000000000450dde : jnp 0x450e33 ; add byte ptr [rcx - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x00000000004ad2a5 : jnp 0x4ad262 ; ret
0x00000000004b34ec : jnp 0x4b353f ; cmc ; jmp qword ptr [rdx]
0x00000000004b72c1 : jnp 0x4b72bb ; call qword ptr [rax]
0x0000000000400ecd : jns 0x400db0 ; jmp 0x400e9e
0x000000000041cb43 : jns 0x41cb49 ; add byte ptr [rax], al ; ret
0x0000000000444cfb : jns 0x444d11 ; add rsp, 0xd0 ; ret
0x000000000046b0b5 : jns 0x46b03c ; ret
0x00000000004840a3 : jns 0x4840a9 ; add byte ptr [rax], al ; ret
0x0000000000491796 : jns 0x4917a4 ; mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004ac3ae : jns 0x4ac344 ; ret 0xf869
0x00000000004ac3ad : jns 0x4ac345 ; ret 0xf869
0x00000000004ae7be : jns 0x4ae815 ; jmp 0x4ae756
0x00000000004b30ec : jns 0x4b3136 ; cmc ; jmp qword ptr [rdx]
0x00000000004b615c : jns 0x4b614f ; cmc ; jmp qword ptr [rdx]
0x00000000004016fc : jo 0x4016ed ; sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x000000000040b6d1 : jo 0x40b6c4 ; xchg eax, edx ; mov eax, dword ptr [rdx] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x000000000040bd54 : jo 0x40bda5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416846 : jo 0x4168a5 ; ret
0x00000000004342ac : jo 0x4342f8 ; add byte ptr [rax], al ; ret
0x000000000043446e : jo 0x4344cd ; ret
0x000000000045276c : jo 0x452773 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004583ca : jo 0x4583e2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045ec37 : jo 0x45ec31 ; ret 0x4840
0x000000000045ec64 : jo 0x45ecc3 ; ret
0x0000000000475bfa : jo 0x475b87 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000475bf9 : jo 0x475b88 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000048d6f5 : jo 0x48d6ff ; add rax, 3 ; jmp 0x48d6c7
0x0000000000496200 : jo 0x496235 ; clc ; inc dword ptr [rax + 0x2d] ; clc ; call qword ptr [rax]
0x0000000000496338 : jo 0x4962f1 ; clc ; inc eax ; mov cl, 0xf8 ; call qword ptr [rax]
0x0000000000496598 : jo 0x496590 ; clc ; call qword ptr [rax]
0x00000000004ad424 : jo 0x4ad49e ; mov ebp, 0xfb67d10d ; ret
0x00000000004b23ac : jo 0x4b238b ; std ; jmp rax
0x00000000004b94bd : jo 0x4b94c5 ; add byte ptr [rax], dl ; mov ch, 0xf8 ; call qword ptr [rdi]
0x00000000004b94d5 : jo 0x4b94dd ; add byte ptr [rax], bl ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b94ed : jo 0x4b94f5 ; add byte ptr [rax], ah ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b9505 : jo 0x4b950d ; add byte ptr [rax], ch ; mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b9565 : jo 0x4b956d ; add al, cl ; mov ch, 0xf8 ; jmp qword ptr [rsi]
0x000000000041022c : jp 0x41029a ; add byte ptr [rax], al ; ret
0x00000000004167f0 : jp 0x4167fa ; test rdx, rdi ; je 0x416809 ; pop rbx ; ret
0x000000000041c585 : jp 0x41c57f ; ret 0x7401
0x0000000000441f72 : jp 0x441f0e ; add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x0000000000475f2b : jp 0x475f2b ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000475f2a : jp 0x475f2c ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000004b9f2d : jp 0x4b9f35 ; add byte ptr [rax], dh ; stc ; call qword ptr [rsi]
0x000000000041680f : jrcxz 0x416815 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000042a34a : jrcxz 0x42a345 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a349 : jrcxz 0x42a346 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437223 : jrcxz 0x4371e8 ; cmp r11d, 0xa ; je 0x437234 ; ret
0x000000000045ba11 : jrcxz 0x45b9a3 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004ac205 : jrcxz 0x4ac25f ; ret
0x00000000004b471c : jrcxz 0x4b46bc ; cmc ; jmp qword ptr [rdx]
0x00000000004b5425 : jrcxz 0x4b5426 ; jmp qword ptr [rdx]
0x00000000004b546d : jrcxz 0x4b546e ; jmp qword ptr [rdx]
0x00000000004b5c95 : jrcxz 0x4b5c8e ; jmp qword ptr [rdx]
0x00000000004b6426 : jrcxz 0x4b6436 ; idiv bh ; sbb al, 0xd ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004bd4ec : jrcxz 0x4bd478 ; sti ; jmp qword ptr [rdx]
0x0000000000403e92 : js 0x403ea1 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x81e9
0x0000000000435d7c : js 0x435d93 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000439626 : js 0x439646 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000446901 : js 0x44694e ; cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x4468c9 ; jmp 0x4468d6
0x00000000004590c0 : js 0x4590fb ; add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000459639 : js 0x45967e ; jmp 0x459603
0x000000000045bc57 : js 0x45bc84 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046510c : js 0x465113 ; pop rbx ; ret
0x0000000000475bfd : js 0x475c0b ; ret
0x000000000047b560 : js 0x47b57b ; add byte ptr [r9], sil ; shr al, 0xf5 ; ret 0xfffe
0x000000000048d774 : js 0x48d762 ; jmp 0x48d6c9
0x000000000048f5e9 : js 0x48f5f6 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000048f5f6 : js 0x48f602 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004b3534 : js 0x4b3587 ; cmc ; jmp qword ptr [rdx]
0x00000000004b4cd8 : js 0x4b4c6d ; cmc ; call qword ptr [rdi]
0x00000000004b5108 : js 0x4b50a8 ; cmc ; jmp qword ptr [rax]
0x000000000041ba3d : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000049630d : lahf ; clc ; jmp qword ptr [rax]
0x00000000004b5b74 : lahf ; fdivr st(5), st(0) ; jmp qword ptr [rdx]
0x00000000004ae8e3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004216ed : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004354c2 : lahf ; ret
0x00000000004354c9 : lahf ; ret 0x3845
0x00000000004ac13d : lahf ; ret 0x871e
0x00000000004702e8 : lahf ; ret 0x9529
0x0000000000496d6d : lahf ; stc ; inc eax ; lahf ; stc ; jmp rax
0x0000000000496d55 : lahf ; stc ; jmp qword ptr [rax]
0x0000000000496d71 : lahf ; stc ; jmp rax
0x0000000000421d7d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046827d : lcall ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000414e01 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000045f170 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000446276 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000044210b : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040a248 : lcall ptr [rbx + 0x5d] ; ret
0x00000000004683ec : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000042a9d6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000040e32b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000041bdc4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000041bdd4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000041bda4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000401e2c : lea eax, dword ptr [rax + rdx*8 - 0x18] ; mov rdx, rax ; jmp 0x401e4b
0x000000000040e32c : lea eax, dword ptr [rax - 1] ; ret
0x0000000000407ce6 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x407d06
0x0000000000432fab : lea eax, dword ptr [rcx + 1] ; pop rbp ; ret
0x0000000000459c1d : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000432c04 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000045d15b : lea eax, dword ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000430c7c : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000430c91 : lea eax, dword ptr [rdi + 0x11] ; ret
0x0000000000430caf : lea eax, dword ptr [rdi + 0x12] ; ret
0x0000000000430ccf : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000430cf2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000430d11 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000430d31 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000430d51 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000430d74 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000430d99 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000430db7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000430dd7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000430df3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000430e13 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000430e33 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000430e53 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x0000000000430bcd : lea eax, dword ptr [rdi + 0xa] ; ret
0x0000000000430bed : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000430c0f : lea eax, dword ptr [rdi + 0xc] ; ret
0x0000000000430c2f : lea eax, dword ptr [rdi + 0xd] ; ret
0x0000000000430c4f : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000430c69 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000430b17 : lea eax, dword ptr [rdi + 1] ; ret
0x0000000000430b2a : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000430b35 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000430b48 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000430b5d : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000430b7b : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000430b87 : lea eax, dword ptr [rdi + 7] ; ret
0x0000000000430b9a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000430baf : lea eax, dword ptr [rdi + 9] ; ret
0x000000000041bdf9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000041be09 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000041bcf3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000041717a : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000422c17 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000459b19 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000046b1a8 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x46b1c1 ; ret
0x0000000000430b03 : lea eax, dword ptr [rdi] ; ret
0x00000000004300ed : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043010d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043012f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043014f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043016f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000042ffff : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000430027 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043003d : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000430055 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043006b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043007d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043009b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000042ffa7 : lea eax, dword ptr [rdx + 7] ; ret
0x00000000004300ad : lea eax, dword ptr [rdx + 8] ; ret
0x00000000004300cd : lea eax, dword ptr [rdx + 9] ; ret
0x000000000040e31e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004332cc : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000415561 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x0000000000402cfb : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov edi, 0x6c32a0 ; call rax
0x0000000000436507 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000430015 : lea eax, dword ptr [rdx] ; ret
0x000000000041ca15 : lea eax, dword ptr [rip + 0x11f55] ; ret
0x0000000000419495 : lea eax, dword ptr [rip + 0x13d25] ; ret
0x000000000041be67 : lea eax, dword ptr [rip + 0x15313] ; ret
0x0000000000417002 : lea eax, dword ptr [rip + 0x19e58] ; ret
0x000000000041be4b : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000041cb41 : lea eax, dword ptr [rip + 0x79] ; ret
0x000000000041be5f : lea eax, dword ptr [rip + 0x852b] ; ret
0x0000000000417265 : lea eax, dword ptr [rip + 5] ; ret
0x000000000041cba4 : lea eax, dword ptr [rip + 6] ; ret
0x0000000000436b1b : lea eax, dword ptr [rsp - 1] ; jmp 0x436ae9
0x000000000048e6bf : lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x000000000047a68c : lea ebx, dword ptr [rbp - 0x60] ; call 0x446925
0x000000000044e23f : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x3ae9
0x000000000044d97e : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000004ac9f1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000045ab88 : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000045ad26 : lea ecx, dword ptr [rax + 4] ; call rbx
0x0000000000425a67 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043039e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000458911 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000046d0e0 : lea ecx, dword ptr [rdx] ; jmp 0x46d136
0x000000000047b8c0 : lea ecx, dword ptr [rdx] ; jmp 0x47b916
0x000000000045337d : lea ecx, dword ptr [rsi + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000449682 : lea ecx, dword ptr [rsi + rdx] ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x000000000045ac93 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000403563 : lea edi, dword ptr [rbp + 0x80] ; xor esi, esi ; call rax
0x0000000000439143 : lea edi, dword ptr [rbp - 0x40] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000401e0a : lea edi, dword ptr [rbx + 0x80] ; call rax
0x0000000000458566 : lea edi, dword ptr [rbx*8] ; call 0x4147b9
0x000000000041c5f6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x41c5e8 ; mov rax, rdi ; ret
0x0000000000422086 : lea edi, dword ptr [rdi + 0x10] ; jne 0x422076 ; ret
0x0000000000477264 : lea edi, dword ptr [rsp + 0x90] ; call r12
0x000000000048fb74 : lea edi, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x0000000000425b34 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000045efc7 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000045953d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004172f6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000425f28 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000045886c : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000436ebe : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436efb
0x0000000000436f5c : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436f9d
0x000000000045dcc5 : lea esi, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045ae93 : lea esi, dword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x000000000045ac98 : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000045ad21 : lea esi, dword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000004766b7 : lea esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [r13] ; call r12
0x000000000045f380 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000408040 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004172f5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048fb73 : lea r15, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x0000000000425a66 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000046d0df : lea r9, qword ptr [rdx] ; jmp 0x46d137
0x000000000047b8bf : lea r9, qword ptr [rdx] ; jmp 0x47b917
0x0000000000436b1a : lea rax, qword ptr [r12 - 1] ; jmp 0x436aea
0x0000000000432faa : lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x000000000041bdc3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041bdd3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041bda3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000401e2b : lea rax, qword ptr [rax + rdx*8 - 0x18] ; mov rdx, rax ; jmp 0x401e4c
0x0000000000407ce5 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x407d07
0x0000000000459c1c : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000432c03 : lea rax, qword ptr [rcx - 1] ; ret
0x0000000000430c7b : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430c90 : lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000430cae : lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000430cce : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000430cf1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000430d10 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000430d30 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000430d50 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000430d73 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000430d98 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000430db6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000430dd6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000430df2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000430e12 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000430e32 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000430e52 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000430bcc : lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430bec : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430c0e : lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000430c2e : lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000430c4e : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000430c68 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430b16 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000430b29 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430b34 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000430b47 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430b5c : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000430b7a : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000430b86 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000430b99 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430bae : lea rax, qword ptr [rdi + 9] ; ret
0x000000000041bdf8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041be08 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041bcf2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000422c16 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000459b18 : lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000430b02 : lea rax, qword ptr [rdi] ; ret
0x00000000004300ec : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043010c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043012e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043014e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043016e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042fffe : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000430026 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043003c : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000430054 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043006a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043007c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043009a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000042ffa6 : lea rax, qword ptr [rdx + 7] ; ret
0x00000000004300ac : lea rax, qword ptr [rdx + 8] ; ret
0x00000000004300cc : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000415560 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x0000000000430014 : lea rax, qword ptr [rdx] ; ret
0x000000000041ca14 : lea rax, qword ptr [rip + 0x11f55] ; ret
0x0000000000419494 : lea rax, qword ptr [rip + 0x13d25] ; ret
0x000000000041be66 : lea rax, qword ptr [rip + 0x15313] ; ret
0x0000000000417001 : lea rax, qword ptr [rip + 0x19e58] ; ret
0x000000000041be4a : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000041cb40 : lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041be5e : lea rax, qword ptr [rip + 0x852b] ; ret
0x0000000000417264 : lea rax, qword ptr [rip + 5] ; ret
0x000000000041cba3 : lea rax, qword ptr [rip + 6] ; ret
0x000000000047a68b : lea rbx, qword ptr [rbp - 0x60] ; call 0x446926
0x000000000043039d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000045ab87 : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000045ad25 : lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000403562 : lea rdi, qword ptr [r13 + 0x80] ; xor esi, esi ; call rax
0x0000000000439142 : lea rdi, qword ptr [rbp - 0x40] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000401e09 : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x000000000041c5f5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x41c5e9 ; mov rax, rdi ; ret
0x0000000000422085 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x422077 ; ret
0x0000000000477263 : lea rdi, qword ptr [rsp + 0x90] ; call r12
0x0000000000425b33 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000045efc6 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000425f27 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000045ae92 : lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x000000000045ac97 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045ad20 : lea rsi, qword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000045f37f : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041156a : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004b982d : leave ; clc ; jmp qword ptr [rdx]
0x0000000000484056 : leave ; cmove rax, rdx ; ret
0x000000000048fb22 : leave ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x000000000045e5ef : leave ; jmp 0x45e5b7
0x00000000004329e0 : leave ; jne 0x4329d3 ; ret
0x0000000000432a90 : leave ; jne 0x432a83 ; ret
0x0000000000432d50 : leave ; jne 0x432d47 ; sub rax, 1 ; ret
0x000000000048cfa7 : leave ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000004010ae : leave ; ret
0x00000000004ba571 : leave ; stc ; call qword ptr [rdx]
0x00000000004b9e84 : leave ; stc ; jmp qword ptr [rdx]
0x000000000040c0a6 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040055a : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x40053a
0x00000000004084f0 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004579c5 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042476e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047b77b : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419150 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000432360 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000049632d : lodsb al, byte ptr [rsi] ; clc ; call rax
0x00000000004b5545 : lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x0000000000438009 : lodsb al, byte ptr [rsi] ; jg 0x43805c ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004b9f2c : lodsb al, byte ptr [rsi] ; jp 0x4b9f36 ; add byte ptr [rax], dh ; stc ; call qword ptr [rsi]
0x00000000004bec2c : lodsb al, byte ptr [rsi] ; mov dword ptr [rax], 0xfd0b4000 ; call rsp
0x00000000004bde2c : lodsb al, byte ptr [rsi] ; mov ecx, 0xdba00000 ; sti ; call qword ptr [rax]
0x0000000000408b8f : lodsb al, byte ptr [rsi] ; mov rdi, qword ptr [rsp + 0x38] ; call 0x414e38
0x00000000004af07d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b1f3c : lodsb al, byte ptr [rsi] ; ret
0x00000000004be72c : lodsb al, byte ptr [rsi] ; ret 0
0x00000000004ba19c : lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rdx]
0x000000000047ba64 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bd475 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret 0xfb88
0x00000000004bd1bd : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; xor ch, 0xfa ; jmp rbx
0x0000000000496331 : lodsd eax, dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004b55d5 : lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b08f8 : lodsd eax, dword ptr [rsi] ; dec byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4afe
0x0000000000487a50 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046c132 : lodsd eax, dword ptr [rsi] ; ret
0x000000000042437d : loop 0x4243b5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000042a2ba : loop 0x42a2b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a2b9 : loop 0x42a2b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000445dcf : loop 0x445e23 ; mov edi, esi ; call 0x422016
0x0000000000453382 : loop 0x4533c9 ; call qword ptr [rbx + rax*8]
0x000000000048cdaf : loop 0x48ce01 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x000000000048faff : loop 0x48fb51 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000004af41a : loop 0x4af46f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b6b61 : loop 0x4b6b5a ; jmp rbx
0x00000000004144ee : loope 0x41447b ; ret 0xda29
0x000000000042a22a : loope 0x42a225 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a229 : loope 0x42a226 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043108b : loope 0x431095 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043307e : loope 0x433086 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x000000000043880f : loope 0x43881a ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000045a97e : loope 0x45a993 ; je 0x45a9a4 ; ret
0x000000000045e7ec : loope 0x45e779 ; ret 0xf631
0x000000000046bfc7 : loope 0x46c019 ; mov dword ptr [rdi], ecx ; ret
0x000000000046bff8 : loope 0x46c04b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000046c06d : loope 0x46c0c0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000047d807 : loope 0x47d80d ; dec dword ptr [rax - 0x77] ; ret
0x00000000004931fe : loope 0x493264 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b5424 : loope 0x4b540c ; std ; jmp qword ptr [rdx]
0x000000000040b4ea : loopne 0x40b534 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040b598 : loopne 0x40b5e2 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040cddd : loopne 0x40ce41 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412b6e : loopne 0x412afb ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004165df : loopne 0x416641 ; pop rbp ; pop r12 ; ret
0x000000000041babb : loopne 0x41ba78 ; add byte ptr [r8 + 0xf], cl ; ret 0x8348
0x000000000041c429 : loopne 0x41c48b ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000041c53f : loopne 0x41c536 ; ret
0x0000000000422e1c : loopne 0x422e62 ; pop rsp ; ret
0x0000000000422e17 : loopne 0x422e7c ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000425f81 : loopne 0x425f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000425f80 : loopne 0x425f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004260d1 : loopne 0x4260e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004260d0 : loopne 0x4260e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426221 : loopne 0x426238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426220 : loopne 0x426239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426371 : loopne 0x426388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426370 : loopne 0x426389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004264c1 : loopne 0x4264d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004264c0 : loopne 0x4264d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426611 : loopne 0x426628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426610 : loopne 0x426629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426761 : loopne 0x426778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426760 : loopne 0x426779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004268af : loopne 0x4268c6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004268ae : loopne 0x4268c7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426a01 : loopne 0x426a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426a00 : loopne 0x426a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426b51 : loopne 0x426b68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426b50 : loopne 0x426b69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426ca1 : loopne 0x426cb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426ca0 : loopne 0x426cb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426df1 : loopne 0x426e08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426df0 : loopne 0x426e09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426f41 : loopne 0x426f58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426f40 : loopne 0x426f59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427091 : loopne 0x4270a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427090 : loopne 0x4270a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004271e1 : loopne 0x4271f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004271e0 : loopne 0x4271f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043713c : loopne 0x437159 ; add byte ptr [rax], al ; ret
0x0000000000437288 : loopne 0x43729d ; cmp eax, 4 ; je 0x437297 ; ret
0x00000000004373b7 : loopne 0x4373c9 ; pop r12 ; ret
0x0000000000438813 : loopne 0x438874 ; ret
0x000000000044bdda : loopne 0x44be3e ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000456295 : loopne 0x4562f7 ; pop rbp ; pop r12 ; ret
0x0000000000456661 : loopne 0x4566a7 ; pop rsp ; ret
0x0000000000456cf9 : loopne 0x456d5b ; pop rbp ; pop r12 ; ret
0x0000000000456d19 : loopne 0x456d5f ; pop rsp ; ret
0x000000000045b5ac : loopne 0x45b5f6 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045b598 : loopne 0x45b5fe ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c906 : loopne 0x45c911 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000468553 : loopne 0x468560 ; mov rdi, rax ; call 0x4147b7
0x000000000046a13c : loopne 0x46a156 ; insb byte ptr [rdi], dx ; add bh, bh ; loopne 0x46a1a5 ; ret
0x000000000046a141 : loopne 0x46a1a0 ; ret
0x000000000046b829 : loopne 0x46b885 ; ret
0x000000000046badd : loopne 0x46bae6 ; sub eax, 1 ; ret
0x000000000046be06 : loopne 0x46be52 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000476172 : loopne 0x4761d1 ; ret
0x0000000000479b34 : loopne 0x479b4b ; cmp al, 0xa ; jne 0x479aeb ; call rbx
0x000000000047bbee : loopne 0x47bc11 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x000000000047e94e : loopne 0x47e971 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x000000000048128e : loopne 0x4812b1 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x0000000000496478 : loopne 0x496469 ; clc ; call rax
0x000000000049679c : loopne 0x4967e7 ; stc ; push qword ptr [rsi + 0x42] ; stc ; jmp rsi
0x0000000000496d50 : loopne 0x496cf7 ; stc ; inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x00000000004ac9f4 : loopne 0x4ac9d4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2380 : loopne 0x4b235e ; std ; jmp qword ptr [rax]
0x00000000004b62c4 : loopne 0x4b62c3 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6b19 : loopne 0x4b6b12 ; call qword ptr [rcx]
0x00000000004bd925 : mov ah, 0 ; add al, bl ; mov dr1, ebx ; call qword ptr [rax]
0x00000000004ac40a : mov ah, 0x13 ; ret
0x000000000048cee1 : mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000041babc : mov ah, 0x41 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004968e4 : mov ah, 0x48 ; stc ; inc dword ptr [rax + rcx*2 - 7] ; call rsp
0x00000000004b7334 : mov ah, 0x4e ; add byte ptr [rax], al ; mov byte ptr [rax - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004ac8b0 : mov ah, 0xa5 ; ret
0x00000000004bce34 : mov ah, 0xa9 ; add byte ptr [rax], al ; test al, 0x68 ; std ; jmp qword ptr [rdi]
0x00000000004bc7d1 : mov ah, 0xfa ; call qword ptr [rbx]
0x0000000000434f78 : mov ah, 0xfe ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000473650 : mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004365a0 : mov ah, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004ac204 : mov ah, bl ; push rsi ; ret
0x000000000048f4d3 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004bd710 : mov al, 0x35 ; hlt ; jmp qword ptr [rsi]
0x0000000000496988 : mov al, 0x44 ; stc ; inc dword ptr [rax + 0x44] ; stc ; call rax
0x0000000000496770 : mov al, 0x47 ; stc ; inc dword ptr [rax + 0x47] ; stc ; call rax
0x0000000000436ec0 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436ef9
0x0000000000436f5e : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436f9b
0x0000000000496298 : mov al, 0x4b ; clc ; jmp rax
0x00000000004ba3b0 : mov al, 0x65 ; stc ; call rdx
0x0000000000496390 : mov al, 0x83 ; clc ; inc eax ; test edi, eax ; call rax
0x000000000045cc1d : mov al, 0x94 ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000496cbc : mov al, 0x98 ; stc ; inc eax ; cwde ; stc ; call rax
0x0000000000496cf4 : mov al, 0x99 ; stc ; call rax
0x0000000000496d14 : mov al, 0x9a ; stc ; call rax
0x0000000000496424 : mov al, 0xcc ; clc ; call rax
0x00000000004babe0 : mov al, 0xd1 ; stc ; call rsp
0x0000000000496444 : mov al, 0xd5 ; clc ; call rax
0x00000000004ae6b6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000049658c : mov al, 0xf1 ; clc ; inc dword ptr [rax - 0xe] ; clc ; call rax
0x0000000000496560 : mov al, 0xf4 ; clc ; inc dword ptr [rax - 0x15] ; clc ; call qword ptr [rax]
0x00000000004b9431 : mov al, 0xf8 ; call qword ptr [rcx]
0x0000000000496339 : mov al, 0xf8 ; inc eax ; mov cl, 0xf8 ; call qword ptr [rax]
0x00000000004756ec : mov al, 0xff ; call qword ptr [rax + 0x8c28348]
0x0000000000473988 : mov al, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000436184 : mov al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004084b4 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x000000000045efc9 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x000000000042e886 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000042e8a4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000430010 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042e860 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004084ef : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e870 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000439b35 : mov bh, 0x16 ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r15
0x000000000042aff1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000045e767 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000430f28 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000045be89 : mov bh, 0x75 ; nop ; jmp 0x45be55
0x00000000004ad6e4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000467acd : mov bh, 0xbf ; and eax, 0x6894800 ; ret
0x0000000000446908 : mov bh, 0xeb ; ret 0x1f0f
0x000000000047a757 : mov bh, 0xf ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004bc8b9 : mov bh, 0xfa ; call rsi
0x00000000004b1e1d : mov bh, 0xfd ; call rax
0x00000000004aedf3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043281e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004ae7c3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000435bc9 : mov bl, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x00000000004b1df1 : mov bl, 0xfd ; jmp qword ptr [rax]
0x00000000004bd565 : mov bl, bh ; jmp qword ptr [rdx]
0x000000000045ede4 : mov byte ptr [r8 + 0x23], cl ; ret
0x000000000045ede5 : mov byte ptr [rax + 0x23], cl ; ret
0x00000000004448d5 : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000414a14 : mov byte ptr [rax + rbx], dh ; pop rbx ; ret
0x0000000000414a13 : mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000471665 : mov byte ptr [rax + rdi - 1], 0 ; jmp 0x46d94f
0x0000000000444cc6 : mov byte ptr [rax - 0x77], cl ; ret 0xba41
0x00000000004b7338 : mov byte ptr [rax - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004603c8 : mov byte ptr [rax], 0 ; jmp 0x460362
0x00000000004b2c78 : mov byte ptr [rax], ch ; cmc ; call qword ptr [rcx]
0x00000000004b7238 : mov byte ptr [rcx], al ; ret
0x0000000000430c78 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004305e8 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000430cee : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043063e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000430d70 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000004306c0 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000430b26 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430506 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000430b42 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430522 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000430563 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004275ab : mov byte ptr [rdi - 1], dl ; ret
0x000000000040051e : mov byte ptr [rdi], 0 ; ret
0x0000000000430b00 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004304e0 : mov byte ptr [rdi], dh ; ret
0x000000000042b063 : mov byte ptr [rdi], dl ; ret
0x0000000000430039 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000042e889 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000430067 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000042e8a7 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000430012 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042e862 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048d830 : mov byte ptr [rip + 0x236049], 8 ; ret
0x0000000000401014 : mov byte ptr [rip + 0x2c0c25], 1 ; ret
0x0000000000475a89 : mov byte ptr [rsi + 0x1f0fffff], dl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000413b3d : mov byte ptr [rsi + rbx], bh ; mov rax, rsi ; pop rbx ; ret
0x0000000000413b3c : mov byte ptr [rsi + rbx], dil ; mov rax, rsi ; pop rbx ; ret
0x000000000041687d : mov byte ptr [rsi - 0x41000000], cl ; ret 0x494b
0x000000000044dbbc : mov byte ptr [rsi - 0x76b6ffb6], bh ; ror byte ptr [rax - 0x77], 1 ; ret 0xc5e8
0x00000000004469e3 : mov byte ptr [rsi], al ; jne 0x4469c7 ; mov rax, rsi ; ret
0x000000000044695f : mov byte ptr [rsi], dl ; jne 0x44694f ; mov rax, rsi ; ret
0x00000000004b9c1c : mov ch, 0x21 ; stc ; jmp qword ptr [rdx]
0x0000000000438a2a : mov ch, 0x28 ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x00000000004ac202 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004ad543 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000045b3ea : mov ch, 0x89 ; ret 0xe283
0x00000000004ae8df : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004af28a : mov ch, 0xab ; ret
0x00000000004ba37c : mov ch, 0xbb ; stc ; jmp qword ptr [rdx]
0x00000000004b94d9 : mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b94c1 : mov ch, 0xf8 ; call qword ptr [rdi]
0x00000000004b9569 : mov ch, 0xf8 ; jmp qword ptr [rsi]
0x00000000004b9639 : mov ch, 0xf8 ; jmp rsi
0x00000000004252e6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bba64 : mov ch, byte ptr [rbx] ; cli ; jmp qword ptr [rdx]
0x000000000041bd5b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000040cf38 : mov cl, 0x35 ; ret 0x2b57
0x00000000004b573c : mov cl, 0xae ; cmc ; jmp qword ptr [rdx]
0x000000000049633d : mov cl, 0xf8 ; call qword ptr [rax]
0x000000000043537b : mov cl, 0xfa ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000041edc5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004172f4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ae6b2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046424a : mov cl, ch ; ret
0x000000000045a97b : mov cl, dl ; and cl, 0xf ; je 0x45a9a7 ; ret
0x000000000043ee84 : mov cs, ebx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004ae96c : mov cs, edi ; ret 0x8b36
0x00000000004603cc : mov cs, word ptr [rax - 0x7d] ; ret
0x00000000004211fe : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043d49d : mov cs, word ptr [rsp + rax + 0x29480000] ; ret 0x8b49
0x0000000000430500 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048ff21 : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a956 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d8e0 : mov dh, 0 ; pop rbx ; ret
0x000000000040ef3e : mov dh, 0 ; ret
0x00000000004bb5f4 : mov dh, 0x12 ; cli ; jmp qword ptr [rdx]
0x000000000042b061 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000041bf44 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000004069f0 : mov dh, 0x17 ; test dl, dl ; jne 0x4069d6 ; ret
0x000000000046f0b2 : mov dh, 0x30 ; add r12, 1 ; jmp 0x46f083
0x000000000048de3f : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000472c1f : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000447a1b : mov dh, 0x46 ; or al, 0x89 ; ret 0xeac0
0x00000000004967b8 : mov dh, 0x46 ; stc ; inc dword ptr [rsi + 0x46] ; stc ; call rsi
0x00000000004323f1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004323e1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004323b1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004323d1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000004323c1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043daaa : mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043daf4 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000440910 : mov dh, 0x4a ; inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x000000000045ede0 : mov dh, 0x4c ; and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x00000000004ad6a2 : mov dh, 0x4e ; ret 0x474c
0x0000000000404ada : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000456694 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x0000000000456c51 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000004323f5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000004323e5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x00000000004323b5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00000000004323c5 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000435581 : mov dh, 0x57 ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000004b1e14 : mov dh, 0xb6 ; std ; jmp rsp
0x0000000000444b4d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000048dac0 : mov dh, 0xc0 ; movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000048dbc1 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000004763ed : mov dh, 0xc0 ; neg eax ; ret
0x00000000004761f3 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045ed46 : mov dh, 0xc0 ; ret
0x0000000000477e04 : mov dh, 0xc1 ; cli ; add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000433248 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000433270 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000040c736 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ae8e4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048cfa6 : mov dh, 0xc9 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000041bf6a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000004186a1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004243c4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000045912f : mov dh, 0xf6 ; ret 0x7508
0x00000000004b1e15 : mov dh, 0xfd ; jmp rsp
0x000000000047273f : mov dh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000040a961 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d52e : mov dh, 2 ; pop rbx ; ret
0x00000000004243c1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041bf41 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004186a4 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004333fe : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x00000000004b444d : mov dh, ch ; jmp qword ptr [rdx]
0x00000000004bd755 : mov dl, 0 ; add byte ptr [rax - 0x75], ch ; sti ; jmp qword ptr [rdx]
0x0000000000446905 : mov dl, 0x40 ; jle 0x4468c5 ; jmp 0x4468d2
0x000000000043a4fc : mov dl, 0x43 ; add byte ptr [rdi + 0x6c3220], bh ; call rax
0x00000000004b46d4 : mov dl, 0x9b ; cmc ; jmp qword ptr [rdx]
0x00000000004b546c : mov dl, 0xe3 ; std ; jmp qword ptr [rdx]
0x00000000004b73a9 : mov dl, 0xf6 ; jmp qword ptr [rsi]
0x00000000004b1de1 : mov dl, 0xfd ; call qword ptr [rax]
0x00000000004b1ddd : mov dl, 0xfd ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x0000000000401181 : mov dl, 1 ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x0000000000436402 : mov dl, 4 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000436322 : mov dl, 5 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000427630 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004bd929 : mov dr1, ebx ; call qword ptr [rax]
0x00000000004780c3 : mov dword ptr [0x2d0], esi ; ret
0x0000000000458389 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004583c9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000459229 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045e305 : mov dword ptr [rax + 0x28], 0 ; pop rbx ; ret
0x000000000045838d : mov dword ptr [rax + 0x40], ecx ; ret
0x00000000004592c7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040e07a : mov dword ptr [rax + 8], 0 ; ret
0x0000000000405ffc : mov dword ptr [rax + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004670b6 : mov dword ptr [rax + 8], edx ; ret
0x000000000041c562 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000467035 : mov dword ptr [rax], 0 ; call r12
0x0000000000444df5 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x0000000000413b60 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000413d10 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000004bec2d : mov dword ptr [rax], 0xfd0b4000 ; call rsp
0x000000000045e348 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x000000000043d145 : mov dword ptr [rax], ebx ; jmp 0x43d10e
0x000000000043fc27 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x43fbf8
0x0000000000440d5f : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x2c] ; jmp 0x440d30
0x000000000043c6ff : mov dword ptr [rax], ecx ; mov eax, 7 ; jmp 0x43c6d2
0x0000000000458915 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000476345 : mov dword ptr [rax], edi ; pop rbx ; ret
0x00000000004343f4 : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000458870 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000045edf3 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x0000000000476339 : mov dword ptr [rax], edx ; pop rbx ; ret
0x00000000004449bf : mov dword ptr [rax], edx ; ret
0x0000000000459541 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000004680df : mov dword ptr [rbp + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000466509 : mov dword ptr [rbp - 0x100], eax ; call rsi
0x0000000000460323 : mov dword ptr [rbp - 0x138], ecx ; call 0x41c588
0x0000000000439629 : mov dword ptr [rbp - 0x68], eax ; call rcx
0x0000000000436ec2 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436ef7
0x0000000000436f60 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436f99
0x000000000044d8fe : mov dword ptr [rbp - 0xb0], eax ; mov rdi, rbx ; call rax
0x0000000000465a39 : mov dword ptr [rbp - 0xe0], ebx ; call rax
0x0000000000466161 : mov dword ptr [rbp - 0xe0], ebx ; call rsi
0x0000000000483902 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000442967 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000046b31e : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046b2d2 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040a7f7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000045e5e8 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor ecx, ecx ; jmp 0x45e5be
0x000000000040aef9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000041117b : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046b258 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000483ea5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000040d3c3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000478103 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000444b4f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040d86f : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d44a : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040e7e1 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040bd52 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045841e : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004590f1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a7a7 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000040d715 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000442987 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000040d8dc : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000048c926 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000479911 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000040d872 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049179c : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000045922c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000040d7d0 : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040907c : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d3c6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000045a781 : mov dword ptr [rcx + 4], esi ; jne 0x45a792 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045a786 : mov dword ptr [rcx + 8], esi ; ret
0x000000000045f220 : mov dword ptr [rcx - 0x80], 0xb9743afa ; ret
0x000000000045f2d0 : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000048f439 : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000430c8d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000430ccb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000430d4d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043063b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004306bd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004305fd : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430700 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000430720 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004306e1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000430db3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000430703 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000040d353 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004228ea : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000430d95 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000430dd3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000004306e5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000464b08 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000464adc : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004227d9 : mov dword ptr [rdi + 0x38], ecx ; ret
0x000000000040d383 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048f471 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000430d0d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043065d : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000430cab : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000430d2d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043061b : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042aea5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ace8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042af88 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000042ae35 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ac78 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430b77 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000042adc5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ac08 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430547 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000430b59 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000042ab98 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430539 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000430c0b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042ab28 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004305ab : mov dword ptr [rdi + 5], edx ; ret
0x0000000000430c2b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042aab8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004305bb : mov dword ptr [rdi + 6], edx ; ret
0x0000000000430bc9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430c4b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042aa48 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430589 : mov dword ptr [rdi + 7], edx ; ret
0x000000000040d357 : mov dword ptr [rdi + 8], eax ; ret
0x000000000046c104 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000430be9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430bab : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000046d044 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043057b : mov dword ptr [rdi + 8], edx ; ret
0x000000000041c569 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000041c572 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000048f42b : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x00000000004272f5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427333 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046c06f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042767c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a4f8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042785c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a478 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427a4c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a3f8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427c1d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a369 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427e1d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a2d9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042801d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a249 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004279fd : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000427815 : mov dword ptr [rdi - 2], edx ; ret
0x00000000004279f9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000427dd9 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000004274af : mov dword ptr [rdi - 4], edx ; ret
0x0000000000427dd6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427fd6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004281d6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004272f9 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000427337 : mov dword ptr [rdi - 8], edx ; ret
0x00000000004274ac : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004275a8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004274f4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a578 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d20e : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000042262a : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x000000000046bff4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046c0fe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000450696 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000430b45 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430b97 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430b24 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430504 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000430b75 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000430545 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000430bc7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430587 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430be7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430597 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000041c567 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004305a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000004305b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004305c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000041c56f : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000430536 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000430578 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004225a9 : mov dword ptr [rdi], ecx ; ret
0x0000000000430b14 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000430b32 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000430b84 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400abb : mov dword ptr [rdi], edx ; ret
0x000000000046d1ef : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x00000000004084b3 : mov dword ptr [rdx + 0x140], ecx ; ret
0x000000000043b925 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000043b928 : mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000430097 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000042e8c7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000430079 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042e8b9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043012b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004300a9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000042e8d9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043014b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000004300c9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000042e8e9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004300e9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043016b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042e8f9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000430109 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000042fffb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042e84b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000040e938 : mov dword ptr [rdx + 8], ecx ; ret
0x0000000000471bb7 : mov dword ptr [rdx], eax ; jmp 0x46de2c
0x0000000000430024 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000430052 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000042ffa4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000046d2a3 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042e7f4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043419e : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000476325 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000458706 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040e8a4 : mov dword ptr [rdx], ecx ; ret
0x000000000045e338 : mov dword ptr [rdx], esi ; pop rbx ; ret
0x0000000000410824 : mov dword ptr [rdx], esp ; add byte ptr [rax + 0x6c0860], bh ; ret
0x0000000000444995 : mov dword ptr [rip + 0x27d15d], eax ; je 0x4449a9 ; ret
0x0000000000438746 : mov dword ptr [rip + 0x28784c], edx ; pop rbx ; ret
0x0000000000438dab : mov dword ptr [rip + 0x28b20f], edi ; pop rbx ; ret
0x00000000004389d2 : mov dword ptr [rip + 0x28b5e8], eax ; pop rbx ; ret
0x00000000004389d1 : mov dword ptr [rip + 0x28b5e8], r8d ; pop rbx ; ret
0x00000000004016fa : mov dword ptr [rip + 0x2be970], eax ; xor eax, eax ; ret
0x0000000000400e0b : mov dword ptr [rip + 0x2c031f], eax ; pop r12 ; ret
0x000000000045c710 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000491279 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; ret
0x000000000048f45b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000040f93b : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x0000000000467ad2 : mov dword ptr [rsi], eax ; ret
0x00000000004134a1 : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x000000000048fbc7 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [rbp] ; call r14
0x000000000046b69b : mov dword ptr [rsp + 0x18], esi ; mov edi, 0x6c11e0 ; call rax
0x000000000041349c : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x00000000004132ba : mov dword ptr [rsp + 0x28], ebx ; call rax
0x00000000004132b9 : mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000045ec90 : mov dword ptr [rsp + 0x30], eax ; jmp 0x45ec4a
0x00000000004132b5 : mov dword ptr [rsp + 0x30], edx ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000047755b : mov dword ptr [rsp + 0x90], ebx ; call r12
0x000000000043ebbf : mov dword ptr [rsp + 8], eax ; call r12
0x000000000043bd5f : mov dword ptr [rsp + 8], eax ; call r14
0x000000000043c67e : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000435336 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041462f : mov dword ptr [rsp + 8], edx ; call 0x410876
0x000000000043df95 : mov dword ptr [rsp + 8], esi ; mov rsi, qword ptr [rsp + 0x58] ; call rax
0x000000000048cd46 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000444ac5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000043d70c : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000004780c2 : mov dword ptr fs:[0x2d0], esi ; ret
0x0000000000413d0f : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000045e347 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000004343f3 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x000000000045edf2 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x000000000045ee58 : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000471bb6 : mov dword ptr fs:[rdx], eax ; jmp 0x46de2d
0x000000000043419d : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000045e337 : mov dword ptr fs:[rdx], esi ; pop rbx ; ret
0x0000000000427810 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004304f0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004010a9 : mov eax, 0 ; leave ; ret
0x00000000004332ef : mov eax, 0x10 ; pop rbx ; ret
0x00000000004167d7 : mov eax, 0x16 ; je 0x4167e7 ; ret
0x0000000000433312 : mov eax, 0x20 ; pop rbx ; ret
0x000000000043330b : mov eax, 0x30 ; pop rbx ; ret
0x0000000000433304 : mov eax, 0x40 ; pop rbx ; ret
0x000000000048fd55 : mov eax, 0x41c00149 ; jmp rax
0x00000000004ac7fb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000041c9ca : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000004332fd : mov eax, 0x60 ; pop rbx ; ret
0x0000000000437086 : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x000000000045eb20 : mov eax, 0x66 ; syscall ; ret
0x000000000045eb40 : mov eax, 0x68 ; syscall ; ret
0x000000000045eb30 : mov eax, 0x6b ; syscall ; ret
0x000000000045eb50 : mov eax, 0x6c ; syscall ; ret
0x0000000000410828 : mov eax, 0x6c0860 ; ret
0x0000000000438c1a : mov eax, 0x6c3fc0 ; ret
0x00000000004332f6 : mov eax, 0x80 ; pop rbx ; ret
0x0000000000462a34 : mov eax, 0x83ffffd4 ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000434346 : mov eax, 0x894c1f74 ; ret 0x6348
0x0000000000467435 : mov eax, 0x89fffffb ; ret 0xc083
0x0000000000464bc3 : mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000438723 : mov eax, 0xc0850028 ; je 0x438737 ; ret
0x000000000045b4c0 : mov eax, 0xc9 ; syscall ; ret
0x00000000004371f2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000043b9e7 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x00000000004094c5 : mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000409f4d : mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000442107 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a244 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000040a7b1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d8b0 : mov eax, 0xffffffff ; ret
0x000000000046d1f1 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x00000000004506ad : mov eax, 1 ; pop r13 ; ret
0x00000000004505df : mov eax, 1 ; pop r14 ; ret
0x00000000004620da : mov eax, 1 ; pop r15 ; ret
0x000000000040dee2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043389b : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000004683df : mov eax, 1 ; pop rbx ; ret
0x0000000000438706 : mov eax, 1 ; ret
0x000000000048fd00 : mov eax, 2 ; add rsp, 8 ; ret
0x000000000045a9e1 : mov eax, 2 ; ret
0x000000000045a9f1 : mov eax, 3 ; ret
0x000000000048fcf0 : mov eax, 4 ; add rsp, 8 ; ret
0x000000000045aa01 : mov eax, 4 ; ret
0x000000000045aa11 : mov eax, 5 ; ret
0x000000000045aa21 : mov eax, 6 ; ret
0x000000000043c701 : mov eax, 7 ; jmp 0x43c6d0
0x000000000045aa31 : mov eax, 7 ; ret
0x000000000048fcd2 : mov eax, 8 ; add rsp, 8 ; ret
0x0000000000433319 : mov eax, 8 ; pop rbx ; ret
0x000000000049631d : mov eax, dr1 ; call qword ptr [rax - 0x1f000758]
0x000000000045873c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040d47c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000409ff3 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040d668 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000040da28 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000483b03 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040de7c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000457a04 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047a3a0 : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000046b851 : mov eax, dword ptr [rax + 8] ; ret
0x00000000004449df : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000048f3d1 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000471663 : mov eax, dword ptr [rax] ; mov byte ptr [rax + rdi - 1], 0 ; jmp 0x46d951
0x0000000000491799 : mov eax, dword ptr [rax] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004683ef : mov eax, dword ptr [rax] ; ret
0x0000000000435785 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x000000000043a1c1 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000469828 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000476341 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045e898 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0x45e8aa ; call rax
0x000000000048eb1d : mov eax, dword ptr [rbx] ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000045ea95 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0x45eaab ; call rax
0x000000000042e8c4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000432f51 : mov eax, dword ptr [rcx + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042e8d6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000042e8e6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000042e8f6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000042e906 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000041f06a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000420942 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000430050 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000042e890 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000042ffa1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042e7f1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000430021 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042e871 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000465e42 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004594bf : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000040e8b0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000040e8d8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000457a01 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ebd1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000475bf8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x475c10 ; ret
0x000000000048f3e1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048f441 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048f481 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048f4e1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048f4d1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048f491 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000046b7f1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x46b807 ; ret
0x00000000004914a0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4914b7 ; ret
0x00000000004579db : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000004333f9 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4333e9 ; ret
0x000000000041edc6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000040b6d4 : mov eax, dword ptr [rdx] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000409f58 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000048ff7c : mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000458917 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004679db : mov eax, dword ptr [rdx] ; ret
0x000000000040e891 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x40e890 ; ret
0x000000000048c8e0 : mov eax, dword ptr [rip + 0x237672] ; ret
0x0000000000467acb : mov eax, dword ptr [rip + 0x25bfb7] ; mov qword ptr [rsi], rax ; ret
0x0000000000441fc1 : mov eax, dword ptr [rip + 0x2812a9] ; ret
0x00000000004399c1 : mov eax, dword ptr [rip + 0x28a641] ; ret
0x000000000040ebb1 : mov eax, dword ptr [rip + 0x2b14e9] ; ret
0x00000000004658c4 : mov eax, dword ptr [rsi + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000048ffc1 : mov eax, dword ptr [rsi] ; add rsp, 8 ; ret
0x0000000000458872 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000465f74 : mov eax, dword ptr [rsp + 0x10] ; add rax, qword ptr [rbx] ; call rax
0x00000000004334b4 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048f4b6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000043545a : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401286 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000043fc29 : mov eax, dword ptr [rsp + 0x24] ; jmp 0x43fbf6
0x0000000000440d61 : mov eax, dword ptr [rsp + 0x2c] ; jmp 0x440d2e
0x000000000043d140 : mov eax, dword ptr [rsp + 0x30] ; mov qword ptr [rax], rbx ; jmp 0x43d113
0x000000000046b52b : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x78 ; ret
0x000000000046b39d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x48 ; ret
0x000000000045eed6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x000000000047600f : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043a518 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046a1d7 : mov eax, dword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x00000000004683ee : mov eax, dword ptr fs:[rax] ; ret
0x000000000044e7a8 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000413eb2 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000474f7c : mov eax, eax ; jmp 0x474d99
0x000000000040fa53 : mov eax, eax ; nop dword ptr [rax] ; ret
0x000000000040f93e : mov eax, eax ; ret
0x000000000040b65a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040907a : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000457949 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004081e6 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000044bf93 : mov eax, ebp ; pop rbp ; ret
0x000000000045ea43 : mov eax, ebp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000434e80 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040f315 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000468202 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044bf15 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046d183 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000468688 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408574 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408649 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000434cee : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040a7fb : mov eax, ebx ; pop rbx ; ret
0x000000000046d047 : mov eax, ecx ; adc eax, eax ; ret
0x000000000045a139 : mov eax, ecx ; jmp 0x459f9b
0x0000000000401a63 : mov eax, ecx ; pop r13 ; ret
0x00000000004019e9 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000446a77 : mov eax, ecx ; pop rbx ; ret
0x000000000045b0f9 : mov eax, ecx ; ret
0x000000000045efd0 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x000000000040ebe1 : mov eax, edi ; ret
0x0000000000483e4e : mov eax, edx ; add rsp, 0x28 ; ret
0x00000000004764b3 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000047809b : mov eax, edx ; jle 0x4780a6 ; ret
0x0000000000408919 : mov eax, edx ; pop r12 ; ret
0x000000000045a6fc : mov eax, edx ; pop r14 ; ret
0x0000000000467967 : mov eax, edx ; pop rbp ; ret
0x000000000045049b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414d19 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004104af : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004083e0 : mov eax, edx ; pop rbx ; ret
0x0000000000416fd8 : mov eax, edx ; ret
0x000000000046baa6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000045e77d : mov eax, esi ; pop r14 ; ret
0x000000000040769a : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000413b41 : mov eax, esi ; pop rbx ; ret
0x0000000000446964 : mov eax, esi ; ret
0x000000000045b5ab : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000422e1b : mov eax, esp ; pop r12 ; ret
0x000000000040cddc : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004165de : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040cddb : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045ea42 : mov eax, r13d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000044e7a7 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044e6f9 : mov eax, r8d ; ret
0x0000000000403564 : mov ebp, 0x80 ; xor esi, esi ; call rax
0x0000000000467d10 : mov ebp, 0x8b480025 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004a699d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000459a88 : mov ebp, 0xf80148c0 ; ret
0x0000000000459d0c : mov ebp, 0xf80148c6 ; ret
0x00000000004ad426 : mov ebp, 0xfb67d10d ; ret
0x0000000000478aa3 : mov ebp, dword ptr [rbp - 0xa8] ; jmp 0x478abf
0x000000000048f75d : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004b6114 : mov ebp, ebp ; cmc ; jmp qword ptr [rdx]
0x000000000046baac : mov ebp, ecx ; jmp rdx
0x0000000000462333 : mov ebp, edx ; mov r9, rdx ; mov r10, rax ; jmp 0x4622c9
0x00000000004b4b21 : mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000400f91 : mov ebp, esp ; ja 0x400f9c ; pop rbp ; ret
0x0000000000401e0b : mov ebx, 0x80 ; call rax
0x0000000000437224 : mov ebx, 0xafb8341 ; je 0x437233 ; ret
0x00000000004a699b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000043aa95 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x43aa79 ; jmp 0x43aa6b
0x000000000046a54f : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x000000000046a62f : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x000000000040d81a : mov ebx, edi ; je 0x40d830 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491294 : mov ebx, edi ; test eax, eax ; jne 0x4912a7 ; pop rbx ; ret
0x00000000004443d6 : mov ebx, edi ; test rax, rax ; je 0x4443e6 ; call rax
0x000000000047bc69 : mov ecx, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x0000000000436a73 : mov ecx, 0x48fffde3 ; mov edi, dword ptr [rbx] ; call r12
0x00000000004a6999 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000000004bdde5 : mov ecx, 0xdb980000 ; sti ; call qword ptr [rdx]
0x00000000004bddcd : mov ecx, 0xdba00000 ; sti ; call qword ptr [rax]
0x0000000000425a65 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000040e8a1 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000041edc3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000427dd3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427fd3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004281d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430520 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000430561 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000042aea3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ae33 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042adc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ace5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ac75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ac05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ab95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ab25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aab5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aa45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042af85 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000430501 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000466fad : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x000000000046b947 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b8d5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000444bb9 : mov ecx, eax ; jmp 0x444b8d
0x0000000000446724 : mov ecx, eax ; jmp 0x44660c
0x0000000000407a7b : mov ecx, edx ; jmp 0x4079ac
0x0000000000462336 : mov ecx, edx ; mov r10, rax ; jmp 0x4622c6
0x000000000040de77 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004167d5 : mov ecx, esi ; mov eax, 0x16 ; je 0x4167e9 ; ret
0x000000000043536d : mov edi, 0x48fffdfa ; mov edi, dword ptr [rbp] ; call rbx
0x0000000000455684 : mov edi, 0x4a6c28 ; call 0x401937
0x000000000040100c : mov edi, 0x4b2480 ; call rax
0x00000000004be39d : mov edi, 0x57000000 ; cld ; call rbx
0x00000000004be45d : mov edi, 0x5a100000 ; cld ; jmp qword ptr [rax]
0x0000000000401051 : mov edi, 0x6bfef0 ; call rax
0x0000000000464b46 : mov edi, 0x6c11a0 ; call rax
0x0000000000464bb2 : mov edi, 0x6c11a0 ; pop rbx ; pop rbp ; jmp rax
0x000000000046b81f : mov edi, 0x6c11e0 ; add rsp, 8 ; jmp rax
0x0000000000438418 : mov edi, 0x6c11e0 ; call rax
0x000000000046a13b : mov edi, 0x6c11e0 ; jmp rax
0x0000000000400fa2 : mov edi, 0x6c1c30 ; jmp rax
0x0000000000400fe2 : mov edi, 0x6c1c30 ; jmp rdx
0x000000000040277b : mov edi, 0x6c20c0 ; call rbx
0x000000000040282b : mov edi, 0x6c2140 ; call rax
0x000000000040308e : mov edi, 0x6c21a0 ; call rax
0x000000000043a4ff : mov edi, 0x6c3220 ; call rax
0x0000000000402b2f : mov edi, 0x6c32a0 ; call rax
0x0000000000402774 : mov edi, 0x6c32a0 ; call rbx
0x0000000000475fb1 : mov edi, 0x6c3640 ; call rax
0x000000000048d6f4 : mov edi, 0x83480170 ; rol byte ptr [rbx], 0xeb ; ret
0x00000000004460b1 : mov edi, 0x8948fffd ; ret
0x000000000040d058 : mov edi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000045296d : mov edi, 0xe9fffc24 ; ret 0xfff0
0x00000000004331f4 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x000000000048f185 : mov edi, 1 ; call r14
0x0000000000401817 : mov edi, 1 ; call rax
0x000000000048fa0c : mov edi, 1 ; jmp rax
0x0000000000439625 : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000459638 : mov edi, dword ptr [rax + 0x40] ; jmp 0x459604
0x0000000000435333 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000048f6be : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000436a69 : mov edi, dword ptr [rbp] ; call r12
0x0000000000434f8a : mov edi, dword ptr [rbp] ; call rbx
0x000000000043995a : mov edi, dword ptr [rbx + 0x18] ; call rax
0x0000000000436a78 : mov edi, dword ptr [rbx] ; call r12
0x000000000046a57e : mov edi, dword ptr [rdi + 0x28] ; call r11
0x000000000040aeb0 : mov edi, dword ptr [rdi + 0x70] ; jmp 0x4370f5
0x000000000040aed2 : mov edi, dword ptr [rdi + 0x70] ; xor edx, edx ; call 0x4370f7
0x0000000000434f38 : mov edi, dword ptr [rdi] ; call rbx
0x00000000004ad6e6 : mov edi, dword ptr [rdx] ; ret
0x0000000000476255 : mov edi, dword ptr [rip + 0x24d3f5] ; call rax
0x000000000047616b : mov edi, dword ptr [rip + 0x24d4df] ; jmp rax
0x0000000000434ef7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000441d70 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x0000000000441e4d : mov edi, dword ptr [rsp + 0x10] ; call r15
0x00000000004638f1 : mov edi, dword ptr [rsp + 0x30] ; call rax
0x0000000000408b91 : mov edi, dword ptr [rsp + 0x38] ; call 0x414e36
0x000000000043bd5b : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043c67a : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043bc62 : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043ebbb : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000043c39a : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043f56c : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043c0af : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043feca : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043d8f4 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000401281 : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000435455 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000435380 : mov edi, dword ptr [rsp] ; call rbx
0x000000000045ab84 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000468556 : mov edi, eax ; call 0x4147b4
0x000000000044695d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x446951 ; mov rax, rsi ; ret
0x0000000000408b75 : mov edi, ebp ; call 0x414e34
0x000000000043a90c : mov edi, ebp ; call 0x442909
0x000000000046c697 : mov edi, ebp ; call 0x47b889
0x0000000000479c66 : mov edi, ebp ; call qword ptr [rbx]
0x0000000000479c29 : mov edi, ebp ; call rax
0x00000000004366c9 : mov edi, ebp ; call rbx
0x0000000000457d64 : mov edi, ebp ; xor r8d, r8d ; call r12
0x0000000000441f77 : mov edi, ebx ; call r12
0x000000000043a8cc : mov edi, ebx ; call r14
0x0000000000439b3a : mov edi, ebx ; call r15
0x0000000000456f00 : mov edi, ebx ; call r8
0x0000000000409b95 : mov edi, ebx ; call rax
0x00000000004bd759 : mov edi, ebx ; jmp qword ptr [rdx]
0x0000000000434e7d : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d4e4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d664 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000047138f : mov edi, edi ; call 0x40d614
0x000000000044e4b4 : mov edi, edi ; call 0x45a714
0x0000000000435c5e : mov edi, edi ; call rbx
0x00000000004469e1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4469c9 ; mov rax, rsi ; ret
0x000000000045296a : mov edi, esi ; call 0x414e38
0x0000000000445dd1 : mov edi, esi ; call 0x422014
0x0000000000435c3e : mov edi, esi ; call rbx
0x0000000000435782 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000043a1be : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000491b49 : mov edi, esp ; call r12
0x00000000004154b4 : mov edi, esp ; call rax
0x0000000000435bf5 : mov edi, esp ; call rbx
0x0000000000466efb : mov edi, esp ; pop r12 ; pop r13 ; jmp rax
0x0000000000466efa : mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x000000000045e976 : mov edx, 0x233e8ff ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004acb9e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d6a1e
0x000000000046a829 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000046a836 : mov edx, 1 ; mov eax, edx ; ret
0x00000000004bc4a1 : mov edx, dr1 ; call rdx
0x000000000045ea15 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0x45ea2b ; call rdx
0x0000000000447c83 : mov edx, dword ptr [rax*8 + 0x4a6cc0] ; jmp rdx
0x000000000044b4c3 : mov edx, dword ptr [rax*8 + 0x4a6dc0] ; jmp rdx
0x000000000044b39f : mov edx, dword ptr [rax*8 + 0x4a6ec0] ; jmp rdx
0x000000000044b2b5 : mov edx, dword ptr [rax*8 + 0x4a6fc0] ; jmp rdx
0x000000000044b267 : mov edx, dword ptr [rax*8 + 0x4a70c0] ; jmp rdx
0x000000000044b082 : mov edx, dword ptr [rax*8 + 0x4a71c0] ; jmp rdx
0x0000000000446f2d : mov edx, dword ptr [rax*8 + 0x4a72c0] ; jmp rdx
0x00000000004530f5 : mov edx, dword ptr [rax*8 + 0x4a76e0] ; jmp rdx
0x0000000000450e2c : mov edx, dword ptr [rax*8 + 0x4a77e0] ; jmp rdx
0x0000000000452cec : mov edx, dword ptr [rax*8 + 0x4a78e0] ; jmp rdx
0x0000000000452caa : mov edx, dword ptr [rax*8 + 0x4a79e0] ; jmp rdx
0x0000000000452c4e : mov edx, dword ptr [rax*8 + 0x4a7ae0] ; jmp rdx
0x000000000045202c : mov edx, dword ptr [rax*8 + 0x4a7be0] ; jmp rdx
0x0000000000458708 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000045b128 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0x45b127 ; ret
0x0000000000476321 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000040adbe : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000042093f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041f06d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000493169 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x493180 ; call rdx
0x0000000000476335 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000430542 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000430533 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000430583 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430593 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000427811 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000427bd0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427461 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430b30 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000042af10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000430b81 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000042ad51 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000430b11 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004304f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000048f0a9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000401e31 : mov edx, eax ; jmp 0x401e46
0x0000000000407cea : mov edx, eax ; jmp 0x407d02
0x0000000000436ec6 : mov edx, eax ; jmp 0x436ef3
0x0000000000436f64 : mov edx, eax ; jmp 0x436f95
0x0000000000462339 : mov edx, eax ; jmp 0x4622c3
0x000000000046a7f2 : mov edx, eax ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000479c61 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479c24 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045e5ec : mov edx, ebp ; xor ecx, ecx ; jmp 0x45e5ba
0x0000000000409b92 : mov edx, esi ; mov rdi, rbx ; call rax
0x0000000000445dce : mov edx, esp ; mov rdi, r14 ; call 0x422017
0x000000000046a7f1 : mov edx, r8d ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000458b99 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000450de2 : mov esi, 0x10 ; jmp rdx
0x0000000000491b43 : mov esi, 0x40 ; mov rdi, rsp ; call r12
0x000000000047ba5f : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043b922 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000047b55f : mov esi, 0x4b1178 ; xor eax, eax ; call 0x467869
0x000000000044e6f3 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000047e369 : mov esi, 0x8349016b ; ret
0x000000000040613f : mov esi, 0x89490001 ; ret 0x8d48
0x000000000044dbbd : mov esi, 0x8949004a ; ror byte ptr [rax - 0x77], 1 ; ret 0xc5e8
0x00000000004a699e : mov esi, 0xc2c1c0bf ; ret
0x0000000000435c80 : mov esi, 1 ; call rbx
0x0000000000435e6d : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000435d39 : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000435cb1 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000004360f7 : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000456efa : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000004566ff : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000004360eb : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000435e5e : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000435d2a : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000435ca2 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000043664c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004366a3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000436723 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000436823 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000048f6ba : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048fbcc : mov esi, dword ptr [rbp] ; call r14
0x000000000046a57a : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000048fb78 : mov esi, dword ptr [rdi] ; call r14
0x0000000000439147 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x00000000004148db : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000004154af : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000043df9a : mov esi, dword ptr [rsp + 0x58] ; call rax
0x0000000000414efb : mov esi, dword ptr [rsp] ; jmp rax
0x0000000000400fe0 : mov esi, eax ; mov edi, 0x6c1c30 ; jmp rdx
0x000000000047124e : mov esi, eax ; mov r12, rbx ; jmp 0x46d550
0x0000000000400cd7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce4 ; ret
0x00000000004b45b5 : mov esi, ebp ; jmp qword ptr [rdx]
0x0000000000476253 : mov esi, ebx ; mov edi, dword ptr [rip + 0x24d3f5] ; call rax
0x000000000040d529 : mov esi, ecx ; jbe 0x40d4cd ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004b75b9 : mov esi, edi ; jmp qword ptr [rbx]
0x000000000048fa0a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000048fa61 : mov esi, esi ; mov rdi, rbx ; call r15
0x000000000043411a : mov esi, esp ; call 0x434c99
0x0000000000479c64 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479c27 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000041bda1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041bdd1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041bdc1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004b1f24 : mov esp, 0x4cfffdc2 ; ret
0x000000000049681c : mov esp, 0x62fff942 ; stc ; call rdx
0x0000000000477f54 : mov esp, 0x8024 ; add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000046eefe : mov esp, 0x8300001a ; ret 0x8308
0x0000000000477544 : mov esp, 0x9024 ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004b1f50 : mov esp, 0xbcfffdc2 ; ret 0xfffd
0x00000000004a16c0 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000041977b : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004ba32f : mov esp, 0xd1cfff9 ; jno 0x4ba2f9 ; stc ; jmp qword ptr [rdx]
0x00000000004ba377 : mov esp, 0xd1cfff9 ; mov ch, 0xbb ; stc ; jmp qword ptr [rdx]
0x00000000004ba2e7 : mov esp, 0xd1cfff9 ; xor byte ptr [rcx - 7], ch ; jmp qword ptr [rdx]
0x00000000004b1f90 : mov esp, 0xdcfffdc6 ; ret
0x00000000004809fd : mov esp, 0xe9fffff4 ; ret
0x0000000000422a1b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000041bdb1 : mov esp, 0xf80148c0 ; ret
0x000000000044cb20 : mov esp, 0xfc239c1 ; ret 0xb841
0x0000000000400e31 : mov esp, eax ; call 0x4331e8
0x000000000046baa9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x0000000000471251 : mov esp, ebx ; jmp 0x46d54d
0x000000000048f761 : mov esp, ecx ; ret
0x000000000044129e : mov fs, ebp ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000004401fa : mov gs, ecx ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000458388 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004583c8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000459228 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045838c : mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004592c6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040e079 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000405ffb : mov qword ptr [rax + 8], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004670b5 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000467034 : mov qword ptr [rax], 0 ; call r12
0x000000000043d144 : mov qword ptr [rax], rbx ; jmp 0x43d10f
0x000000000043fc26 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x43fbf9
0x0000000000440d5e : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x2c] ; jmp 0x440d31
0x0000000000458914 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000476344 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045886f : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000476338 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004449be : mov qword ptr [rax], rdx ; ret
0x0000000000459540 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004680de : mov qword ptr [rbp + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000466508 : mov qword ptr [rbp - 0x100], r8 ; call rsi
0x0000000000460322 : mov qword ptr [rbp - 0x138], r9 ; call 0x41c589
0x0000000000439628 : mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000436ec1 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436ef8
0x0000000000436f5f : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436f9a
0x0000000000465a38 : mov qword ptr [rbp - 0xe0], r11 ; call rax
0x0000000000466160 : mov qword ptr [rbp - 0xe0], r11 ; call rsi
0x0000000000442966 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000046b31d : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046b2d1 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040a7f6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000040aef8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000046b257 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000483ea4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000040d3c2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000478102 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000040d449 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040a7a6 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000040d714 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000040d8db : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000049179b : mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000048c925 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000479910 : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048f438 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000046c17e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000430d4c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000004306bc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043069c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004306ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043071f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004306e0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000040d352 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000464b07 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000464adb : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004227d8 : mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000040d382 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048f470 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000430d0c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043065c : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000430d2c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043067c : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000042ace7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ac77 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ac07 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ab97 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430c0a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042ab27 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004305aa : mov qword ptr [rdi + 5], rdx ; ret
0x0000000000430c2a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042aab7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004305ba : mov qword ptr [rdi + 6], rdx ; ret
0x0000000000430c4a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042aa47 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004305ca : mov qword ptr [rdi + 7], rdx ; ret
0x000000000046d043 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000046c103 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000040d356 : mov qword ptr [rdi + 8], rax ; ret
0x000000000041c571 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000048f42a : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x00000000004272f4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427332 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046c06e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042767b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a4f7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042785b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a477 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427a4b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a3f7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427c1c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a368 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427e1c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a2d8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042801c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a248 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046bff9 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000004272f8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427336 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000004274ab : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004275a7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004274f3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a577 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000450695 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046bfc8 : mov qword ptr [rdi], r9 ; ret
0x000000000046d20d : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x0000000000422629 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000430b96 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430586 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430596 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004305a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000004305b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004305c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000041c56e : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000430577 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004225a8 : mov qword ptr [rdi], rcx ; ret
0x0000000000430b83 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400aba : mov qword ptr [rdi], rdx ; ret
0x00000000004084b2 : mov qword ptr [rdx + 0x140], rcx ; ret
0x000000000043012a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042e91a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043014a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042e93a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043016a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042e95a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000042fffa : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042e84a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000040e937 : mov qword ptr [rdx + 8], rcx ; ret
0x000000000042ffa3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042e7f3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000476324 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000458705 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040e8a3 : mov qword ptr [rdx], rcx ; ret
0x00000000004016f9 : mov qword ptr [rip + 0x2be970], rax ; xor eax, eax ; ret
0x0000000000400e0a : mov qword ptr [rip + 0x2c031f], rax ; pop r12 ; ret
0x0000000000491278 : mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x000000000048cdb3 : mov qword ptr [rsi], r8 ; ret
0x000000000040f93a : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000467ad1 : mov qword ptr [rsi], rax ; ret
0x00000000004134a0 : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000045ec8f : mov qword ptr [rsp + 0x30], rax ; jmp 0x45ec4b
0x000000000047755a : mov qword ptr [rsp + 0x90], rbx ; call r12
0x000000000041462e : mov qword ptr [rsp + 8], r10 ; call 0x410877
0x000000000043ebbe : mov qword ptr [rsp + 8], rax ; call r12
0x000000000043c39d : mov qword ptr [rsp + 8], rax ; call r14
0x000000000043f56f : mov qword ptr [rsp + 8], rax ; call r15
0x0000000000435335 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043d70b : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000004449bd : mov qword ptr fs:[rax], rdx ; ret
0x0000000000462338 : mov r10, rax ; jmp 0x4622c4
0x00000000004b1ddc : mov r10b, 0xfd ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x00000000004acb9d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d6a1f
0x0000000000400e30 : mov r12, rax ; call 0x4331e9
0x0000000000471250 : mov r12, rbx ; jmp 0x46d54e
0x0000000000462332 : mov r13, r10 ; mov r9, rdx ; mov r10, rax ; jmp 0x4622ca
0x000000000048f6b9 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000047273e : mov r14b, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000450de1 : mov r14d, 0x10 ; jmp rdx
0x000000000047124d : mov r14d, eax ; mov r12, rbx ; jmp 0x46d551
0x000000000048f6bd : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000435781 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000491798 : mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x0000000000466fac : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000462335 : mov r9, rdx ; mov r10, rax ; jmp 0x4622c7
0x0000000000464249 : mov r9b, r13b ; ret
0x000000000040a7b0 : mov rax, -1 ; pop rbx ; ret
0x000000000040e260 : mov rax, -1 ; ret
0x000000000045a9d0 : mov rax, 1 ; ret
0x000000000045a9e0 : mov rax, 2 ; ret
0x000000000045a9f0 : mov rax, 3 ; ret
0x000000000045aa00 : mov rax, 4 ; ret
0x000000000045aa10 : mov rax, 5 ; ret
0x000000000045aa20 : mov rax, 6 ; ret
0x000000000045aa30 : mov rax, 7 ; ret
0x0000000000465f73 : mov rax, qword ptr [r12 + 0x10] ; add rax, qword ptr [rbx] ; call rax
0x0000000000469827 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004658c3 : mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000465e41 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d47b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000409ff2 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d667 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000040da27 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000483b02 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040de7b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000457a03 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047a39f : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000046b850 : mov rax, qword ptr [rax + 8] ; ret
0x00000000004449de : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000048f3d0 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000435784 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000043a1c0 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000476340 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045e897 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0x45e8ab ; call rax
0x000000000045ea94 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0x45eaac ; call rax
0x000000000042e7f0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000457a00 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ebd0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048f3e0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048f440 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048f480 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048f4e0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048f4d0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048f490 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000046b7f0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x46b808 ; ret
0x000000000048ff7b : mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x000000000040e890 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x40e891 ; ret
0x0000000000441fc0 : mov rax, qword ptr [rip + 0x2812a9] ; ret
0x00000000004399c0 : mov rax, qword ptr [rip + 0x28a641] ; ret
0x000000000040ebb0 : mov rax, qword ptr [rip + 0x2b14e9] ; ret
0x000000000048ffc0 : mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x000000000048f4b5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000435459 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401285 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000043d13f : mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rax], rbx ; jmp 0x43d114
0x000000000046b52a : mov rax, qword ptr [rsp + 0x48] ; add rsp, 0x78 ; ret
0x000000000045eed5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x000000000046a1d6 : mov rax, qword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x000000000045b5aa : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000422e1a : mov rax, r12 ; pop r12 ; ret
0x00000000004165dd : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004572f4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045e77c : mov rax, r14 ; pop r14 ; ret
0x0000000000413eb1 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fa52 : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000040f93d : mov rax, r8 ; ret
0x0000000000446a76 : mov rax, r9 ; pop rbx ; ret
0x000000000045f1e5 : mov rax, r9 ; ret
0x000000000040b659 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000409079 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000457948 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046827f : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000434e7f : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040f314 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000468201 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000468687 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408573 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408648 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000434ced : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040a7fa : mov rax, rbx ; pop rbx ; ret
0x0000000000401a62 : mov rax, rcx ; pop r13 ; ret
0x00000000004019e8 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045b0f8 : mov rax, rcx ; ret
0x000000000040ebe0 : mov rax, rdi ; ret
0x0000000000483e4d : mov rax, rdx ; add rsp, 0x28 ; ret
0x00000000004764b2 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000045e622 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414d18 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004104ae : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000046c634 : mov rax, rdx ; pop rbx ; ret
0x0000000000416fd7 : mov rax, rdx ; ret
0x0000000000407699 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000413b40 : mov rax, rsi ; pop rbx ; ret
0x0000000000446963 : mov rax, rsi ; ret
0x000000000048f75c : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046baab : mov rbp, r9 ; jmp rdx
0x0000000000400f90 : mov rbp, rsp ; ja 0x400f9d ; pop rbp ; ret
0x000000000046a54e : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x000000000046a62e : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x000000000040d819 : mov rbx, rdi ; je 0x40d831 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491293 : mov rbx, rdi ; test eax, eax ; jne 0x4912a8 ; pop rbx ; ret
0x00000000004443d5 : mov rbx, rdi ; test rax, rax ; je 0x4443e7 ; call rax
0x000000000040e8a0 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x0000000000430560 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000046b946 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b8d4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000407a7a : mov rcx, r10 ; jmp 0x4079ad
0x0000000000446723 : mov rcx, rax ; jmp 0x44660d
0x000000000043537f : mov rdi, qword ptr [r12] ; call rbx
0x000000000045ab83 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004766bb : mov rdi, qword ptr [r13] ; call r12
0x0000000000434f89 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000434ef6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000434f37 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000439624 : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000459637 : mov rdi, qword ptr [rax + 0x40] ; jmp 0x459605
0x0000000000435332 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000436a68 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004350be : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000439959 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000436a77 : mov rdi, qword ptr [rbx] ; call r12
0x000000000046a57d : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000441d6f : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000441e4c : mov rdi, qword ptr [rsp + 0x10] ; call r15
0x00000000004638f0 : mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000408b90 : mov rdi, qword ptr [rsp + 0x38] ; call 0x414e37
0x000000000043bc61 : mov rdi, qword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043c0ae : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043d8f3 : mov rdi, qword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000004154b3 : mov rdi, r12 ; call rax
0x0000000000435bf4 : mov rdi, r12 ; call rbx
0x0000000000408b74 : mov rdi, r13 ; call 0x414e35
0x00000000004366c8 : mov rdi, r13 ; call rbx
0x0000000000457d63 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x0000000000452969 : mov rdi, r14 ; call 0x414e39
0x0000000000445dd0 : mov rdi, r14 ; call 0x422015
0x0000000000435c3d : mov rdi, r14 ; call rbx
0x000000000043a1bd : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000047138e : mov rdi, r15 ; call 0x40d615
0x000000000044e4b3 : mov rdi, r15 ; call 0x45a715
0x0000000000435c5d : mov rdi, r15 ; call rbx
0x0000000000468555 : mov rdi, rax ; call 0x4147b5
0x0000000000435bcf : mov rdi, rbp ; call rbx
0x0000000000441f76 : mov rdi, rbx ; call r12
0x000000000043a8cb : mov rdi, rbx ; call r14
0x0000000000439b39 : mov rdi, rbx ; call r15
0x0000000000456eff : mov rdi, rbx ; call r8
0x0000000000409b94 : mov rdi, rbx ; call rax
0x000000000040d4e3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d663 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000491b48 : mov rdi, rsp ; call r12
0x000000000048f0a8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000045ea14 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0x45ea2c ; call rdx
0x0000000000447c82 : mov rdx, qword ptr [rax*8 + 0x4a6cc0] ; jmp rdx
0x000000000044b4c2 : mov rdx, qword ptr [rax*8 + 0x4a6dc0] ; jmp rdx
0x000000000044b39e : mov rdx, qword ptr [rax*8 + 0x4a6ec0] ; jmp rdx
0x000000000044b2b4 : mov rdx, qword ptr [rax*8 + 0x4a6fc0] ; jmp rdx
0x000000000044b266 : mov rdx, qword ptr [rax*8 + 0x4a70c0] ; jmp rdx
0x000000000044b081 : mov rdx, qword ptr [rax*8 + 0x4a71c0] ; jmp rdx
0x0000000000446f2c : mov rdx, qword ptr [rax*8 + 0x4a72c0] ; jmp rdx
0x00000000004530f4 : mov rdx, qword ptr [rax*8 + 0x4a76e0] ; jmp rdx
0x0000000000450e2b : mov rdx, qword ptr [rax*8 + 0x4a77e0] ; jmp rdx
0x0000000000452ceb : mov rdx, qword ptr [rax*8 + 0x4a78e0] ; jmp rdx
0x0000000000452ca9 : mov rdx, qword ptr [rax*8 + 0x4a79e0] ; jmp rdx
0x0000000000452c4d : mov rdx, qword ptr [rax*8 + 0x4a7ae0] ; jmp rdx
0x000000000045202b : mov rdx, qword ptr [rax*8 + 0x4a7be0] ; jmp rdx
0x0000000000476320 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000493168 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x493181 ; call rdx
0x0000000000476334 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000427460 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ad50 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000445dcd : mov rdx, r12 ; mov rdi, r14 ; call 0x422018
0x0000000000479c60 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479c23 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000409b91 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000407ce9 : mov rdx, r8 ; jmp 0x407d03
0x0000000000401e30 : mov rdx, rax ; jmp 0x401e47
0x0000000000436ec5 : mov rdx, rax ; jmp 0x436ef4
0x0000000000436f63 : mov rdx, rax ; jmp 0x436f96
0x000000000045e5eb : mov rdx, rbp ; xor ecx, ecx ; jmp 0x45e5bb
0x000000000048fb77 : mov rsi, qword ptr [r15] ; call r14
0x000000000048fbcb : mov rsi, qword ptr [rbp] ; call r14
0x000000000046a579 : mov rsi, qword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000439146 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x00000000004148da : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000004154ae : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000043df99 : mov rsi, qword ptr [rsp + 0x58] ; call rax
0x0000000000414efa : mov rsi, qword ptr [rsp] ; jmp rax
0x0000000000479c63 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479c26 : mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004b468c : mov rsi, r13 ; jmp qword ptr [rdx]
0x000000000048fa60 : mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000400fdf : mov rsi, rax ; mov edi, 0x6c1c30 ; jmp rdx
0x0000000000400cd6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce5 ; ret
0x0000000000476252 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x24d3f5] ; call rax
0x000000000040d528 : mov rsi, rcx ; jbe 0x40d4ce ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000048fa09 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000046baa8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000048f760 : mov rsp, rcx ; ret
0x00000000004b44dc : mov sil, r13b ; jmp qword ptr [rdx]
0x000000000043d49e : mov word ptr [rax + rax], es ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000004377a0 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c561 : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000048e01a : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000430c8c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000004305fc : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430d94 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000004306e4 : mov word ptr [rdi + 0x18], cx ; ret
0x000000000042af87 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000430b58 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000430538 : mov word ptr [rdi + 4], dx ; ret
0x0000000000430baa : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043057a : mov word ptr [rdi + 8], dx ; ret
0x00000000004279fc : mov word ptr [rdi - 2], cx ; ret
0x0000000000427814 : mov word ptr [rdi - 2], dx ; ret
0x00000000004279f8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430503 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000042af8b : mov word ptr [rdi], cx ; ret
0x0000000000430b13 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000042aff3 : mov word ptr [rdi], dx ; ret
0x00000000004bd70c : mov word ptr [rdx + 0x35b00000], dr0 ; hlt ; jmp qword ptr [rsi]
0x0000000000430078 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042e8b8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000430023 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042e873 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004b7362 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x0000000000444ac4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004370dc : movabs al, byte ptr [0x5d5b08c483480028] ; ret
0x000000000047dd36 : movabs al, byte ptr [0xc748c03145000000] ; ret
0x0000000000459633 : movabs al, byte ptr [0xeb40788b48000000] ; ret
0x00000000004b43fe : movabs al, byte ptr [0xf586290d1cfff5a8] ; jmp qword ptr [rdx]
0x00000000004bbb2e : movabs al, byte ptr [0xfa2b6f0d1cfffa2b] ; jmp qword ptr [rdx]
0x000000000046b7ef : movabs byte ptr [0x874f03948078b48], al ; ret
0x000000000040c581 : movabs dword ptr [0x8341001f0ffffffc], eax ; ret 0x4101
0x0000000000466852 : movabs dword ptr [0x8348d889482673ce], eax ; ret
0x0000000000469109 : movabs dword ptr [0x8949c08548fffab6], eax ; ret
0x00000000004b3dde : movabs dword ptr [0xf56c150d1cfff58b], eax ; jmp qword ptr [rdx]
0x0000000000436073 : movabs eax, dword ptr [0xff894cf631000008] ; call rbx
0x0000000000425f82 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000425f7e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042602c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004305d0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000430e4d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043079d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042ac5f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042abef : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ab7f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ab0f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430ded : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043073d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042aa9f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430e0d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043075d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000042aa2f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430e2d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043077d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042b04f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042afdf : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042af6f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042aeff : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ae8f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ae1f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042adaf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ad3f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042accf : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000041c4c6 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x000000000042a1bb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000042a22b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000430c64 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004305e4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000430627 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430617 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430698 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430658 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000430678 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004305f8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430799 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000430739 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000430759 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000430779 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042a9da : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000042aa34 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004305d1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000430e4e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043079e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000042ac60 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042abf0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ab80 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ab10 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430dee : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043073e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000042aaa0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430e0e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043075e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000042aa30 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430e2e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043077e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000042b050 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042afe0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042af70 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042af00 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ae90 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ae20 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042adb0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ad40 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042acd0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000041c4b3 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x41c4c8 ; ret
0x000000000041c4b2 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x41c4c9 ; ret
0x000000000041c4c8 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000042a1bc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000042a22c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a967 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a8e7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a857 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a7d7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a757 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a6d7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a657 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a5d7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a557 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a4d7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a457 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a3d7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a347 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a2b7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a227 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000430c65 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004305e5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000430638 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000430628 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430618 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430699 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430659 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000430679 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004305f9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043079a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043073a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043075a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043077a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042a9db : movq qword ptr [rdi], mm0 ; ret
0x000000000042aa35 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b6c24 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; sbb dh, ah ; cmc ; call rdx
0x0000000000434278 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], r8b ; ret
0x00000000004b332c : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004ad562 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ae7bd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ae816 ; jmp 0x4ae757
0x00000000004bd924 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ah, 0 ; add al, bl ; mov dr1, ebx ; call qword ptr [rax]
0x00000000004aedf5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ae6b1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004b3814 : movsd dword ptr [rdi], dword ptr [rsi] ; push rcx ; cmc ; jmp qword ptr [rdx]
0x000000000046c022 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000048cd03 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048ccbd : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000046a821 : movsx edx, al ; neg edx ; mov eax, edx ; ret
0x000000000048d6f3 : movsx esi, word ptr [rax + 1] ; add rax, 3 ; jmp 0x48d6c9
0x000000000048e612 : movsxd r8, dword ptr [r14 + r8*4] ; add r8, r14 ; jmp r8
0x00000000004172f1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004285f6 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000425a62 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048dac2 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000048eb1f : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048fd52 : movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x000000000049176a : movsxd rax, dword ptr [r9 + r8*4] ; add r9, rax ; jmp r9
0x000000000048dbc3 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000004b5ae4 : movsxd rax, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004243ad : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000430399 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000048ce53 : movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x000000000048cfa8 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000048e3c2 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000425b2f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048e1cc : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, rbp ; jmp rdx
0x000000000043237c : movsxd rsi, esi ; ret 0x7520
0x000000000048ccbe : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000048cd04 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x0000000000444b4c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004763ec : movzx eax, al ; neg eax ; ret
0x00000000004761f2 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045ed45 : movzx eax, al ; ret
0x000000000040c734 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e2c6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000048ff20 : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a955 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d8df : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040ef3d : movzx eax, byte ptr [rax] ; ret
0x0000000000418688 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000004243c0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041bf40 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004186a3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040a960 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d52d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000040c735 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000433247 : movzx eax, cl ; pop rbx ; ret
0x000000000043326f : movzx eax, dl ; pop rbx ; ret
0x00000000004329da : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4329d9 ; ret
0x0000000000432a8a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x432a89 ; ret
0x0000000000425264 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000004186a0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004243c3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000045eddf : movzx ecx, byte ptr [rsp - 0x15] ; mov byte ptr [r8 + 0x23], cl ; ret
0x0000000000481c59 : movzx edi, byte ptr [r15 + 1] ; jmp 0x481c6d
0x0000000000481c5a : movzx edi, byte ptr [rdi + 1] ; jmp 0x481c6c
0x000000000045be84 : movzx edi, word ptr [rbp - 0x60] ; movzx esi, word ptr [rbp - 0x70] ; jmp 0x45be5a
0x00000000004069ef : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x4069d7 ; ret
0x0000000000424291 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004187cf : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000424123 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000004323a4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000432404 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000004323f4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004323e4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004323d4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000004323c4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000004323b4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000042a980 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000425017 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043238b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000042b060 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041bf43 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000041bf69 : movzx edx, dl ; sub eax, edx ; ret
0x000000000042a900 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042aff0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000046f0b1 : movzx esi, byte ptr [rax] ; add r12, 1 ; jmp 0x46f084
0x000000000045be88 : movzx esi, word ptr [rbp - 0x70] ; jmp 0x45be56
0x000000000046f0b0 : movzx r14d, byte ptr [rax] ; add r12, 1 ; jmp 0x46f085
0x000000000045ed44 : movzx rax, al ; ret
0x00000000004b47ee : mul byte ptr [rbp + rsi*8 - 0x67f2e301] ; pushfq ; cmc ; jmp qword ptr [rdx]
0x0000000000459b57 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000047e210 : mulps xmm0, xmm0 ; jmp 0x47e1b9
0x000000000047bedd : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000047ec4c : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047bedc : mulss xmm0, xmm0 ; pop r15 ; ret
0x000000000043419b : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040bf5a : neg eax ; pop r13 ; ret
0x00000000004763ef : neg eax ; ret
0x00000000004344aa : neg edx ; cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0x434474
0x000000000043439a : neg edx ; cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x000000000045edf0 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x000000000046a824 : neg edx ; mov eax, edx ; ret
0x0000000000482ba1 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x0000000000477546 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000042a0ab : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004420c8 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000482f9e : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004246cc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045c522 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000004334bf : nop ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000004399af : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041bd9f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000048ca6f : nop ; call rax
0x0000000000496730 : nop ; cld ; clc ; jmp rax
0x00000000004b4cd9 : nop ; cmc ; call qword ptr [rdi]
0x0000000000437fc9 : nop ; jg 0x43801c ; add byte ptr [rax + 0xf], cl ; ret
0x000000000045be8b : nop ; jmp 0x45be53
0x000000000042762f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042780f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004589af : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d8af : nop ; mov eax, 0xffffffff ; ret
0x00000000004bc4a0 : nop ; mov edx, dr1 ; call rdx
0x0000000000427bcf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430b2f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000040a7af : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000040eb4f : nop ; mov rax, -1 ; ret
0x000000000048f3cf : nop ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000040e89f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x00000000004305cf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000049671c : nop ; or bh, cl ; call rax
0x0000000000496574 : nop ; out dx, al ; clc ; call qword ptr [rax]
0x000000000049657c : nop ; out dx, eax ; clc ; call qword ptr [rax]
0x0000000000432d6f : nop ; ret
0x00000000004966bc : nop ; sbb bh, cl ; jmp qword ptr [rax]
0x00000000004966b8 : nop ; sbb cl, bh ; call qword ptr [rax + 0x20fff91a]
0x0000000000496638 : nop ; sbb ecx, edi ; call qword ptr [rax + 0x20fff91b]
0x000000000049663c : nop ; sbb edi, ecx ; jmp qword ptr [rax]
0x0000000000496768 : nop ; stc ; jmp qword ptr [rax]
0x000000000040e8df : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000496320 : nop ; test al, 0xf8 ; jmp rax
0x00000000004375cf : nop ; xor eax, eax ; leave ; ret
0x000000000041bf6f : nop ; xor eax, eax ; ret
0x000000000041be1f : nop ; xor rax, rax ; ret
0x000000000043050b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000045b0f3 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000040a9ab : nop dword ptr [rax + rax] ; or eax, 0x20 ; jmp 0x40a980
0x000000000040eb98 : nop dword ptr [rax + rax] ; ret
0x00000000004090a3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000045a99c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000040ef5c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000004083dc : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040aead : nop dword ptr [rax] ; mov edi, dword ptr [rdi + 0x70] ; jmp 0x4370f8
0x00000000004225a4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000043345c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000040fa55 : nop dword ptr [rax] ; ret
0x000000000043870c : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000045b0f2 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000045efd2 : nop word ptr [rax + rax] ; ret
0x000000000046b990 : not eax ; and eax, ecx ; ret
0x000000000046ba0f : not eax ; and eax, edx ; ret
0x000000000046adf8 : not ecx ; jmp 0x46ae11
0x000000000046aea2 : not ecx ; jmp 0x46aebb
0x000000000046abb1 : not edx ; jmp 0x46abc6
0x000000000046ac7f : not edx ; jmp 0x46ac94
0x000000000046adf7 : not r9 ; jmp 0x46ae12
0x000000000046aea1 : not r9 ; jmp 0x46aebc
0x000000000046abb0 : not rdx ; jmp 0x46abc7
0x000000000046ac7e : not rdx ; jmp 0x46ac95
0x00000000004b5cdc : or ah, ah ; cmc ; jmp qword ptr [rdx]
0x00000000004694ac : or al, 0 ; add bl, dh ; ret
0x000000000047281a : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041fcd7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042134f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045ee3a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000413b62 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000413d12 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045337e : or al, 0x16 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000449683 : or al, 0x16 ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x0000000000418686 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000401017 : or al, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000468085 : or al, 0x3e ; jae 0x468047 ; xor eax, eax ; ret
0x00000000004373b8 : or al, 0x41 ; pop rsp ; ret
0x000000000046b3a0 : or al, 0x48 ; add esp, 0x48 ; ret
0x0000000000401284 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004b798c : or al, 0x55 ; add byte ptr [rax], al ; add bh, 0xf7 ; jmp qword ptr [rdi]
0x0000000000476bf7 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b8b8c : or al, 0x67 ; add byte ptr [rax], al ; push rax ; clc ; call qword ptr [rax]
0x000000000045639a : or al, 0x7e ; ret
0x000000000046abb4 : or al, 0x83 ; ret
0x0000000000433075 : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000044d0b2 : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000447a1d : or al, 0x89 ; ret 0xeac0
0x000000000048e3c4 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000004172f3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041edc4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004285f8 : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000425a64 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048ce55 : or al, 0x8f ; add rcx, r15 ; jmp rcx
0x000000000048cfaa : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000004243af : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043039b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000425a68 : or al, 0xb ; jmp r9
0x000000000043039f : or al, 0xb ; jmp rcx
0x00000000004b970c : or al, 0xc6 ; clc ; jmp qword ptr [rdx]
0x000000000042ab83 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000456696 : or al, 0xf6 ; ret 0x7404
0x0000000000456c53 : or al, 0xf6 ; ret 0xf04
0x00000000004bb51d : or al, 0xfa ; jmp qword ptr [rdx]
0x000000000041891d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fee1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418941 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048f1a9 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000435bca : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x0000000000405545 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000004b30a4 : or al, byte ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x000000000044a38a : or al, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000489687 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ba3b : or al, ch ; lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000459648 : or al, ch ; ret 1
0x00000000004b61ec : or al, dh ; cmc ; jmp qword ptr [rdx]
0x000000000046b827 : or bh, bh ; loopne 0x46b887 ; ret
0x000000000049671d : or bh, cl ; call rax
0x000000000048f43e : or bl, al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004670b8 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004bd3ad : or bl, bh ; jmp qword ptr [rdx]
0x000000000040d81d : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000450932 : or bl, ch ; add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000042ad43 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000040e93a : or bl, dh ; ret
0x000000000040e939 : or bl, sil ; ret
0x0000000000415e54 : or byte ptr [r13 - 0x77], r9b ; ret
0x000000000040d716 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000042e848 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000407482 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000045f472 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000489862 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042e907 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000040f3eb : or byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000004102db : or byte ptr [rax + 0x29], cl ; ret 0x8e74
0x000000000040ef37 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000041b049 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041525b : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000045ba5d : or byte ptr [rax + 0x39], r9b ; ret
0x0000000000469408 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004039b3 : or byte ptr [rax + 1], cl ; ret
0x0000000000467d5a : or byte ptr [rax + 4], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043c700 : or byte ptr [rax + 7], bh ; jmp 0x43c6d1
0x0000000000412a97 : or byte ptr [rax + rax + 0xf], ch ; xchg eax, ebp ; ret 0x8348
0x0000000000414069 : or byte ptr [rax + rax + 0xf], ch ; xchg eax, ebp ; ret 0x948
0x00000000004be70f : or byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000476a4d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000401e2a : or byte ptr [rax - 0x73], 0x44 ; shr al, 1 ; mov rdx, rax ; jmp 0x401e4d
0x000000000041be49 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x000000000041be5d : or byte ptr [rax - 0x73], cl ; add eax, 0x852b ; ret
0x000000000046c481 : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000435458 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000435331 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000043df98 : or byte ptr [rax - 0x75], cl ; je 0x43dfc7 ; pop rax ; call rax
0x000000000042e84d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000467b78 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000434cec : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000042e849 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004104ad : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000479dac : or byte ptr [rax - 0x77], cl ; ret
0x0000000000407483 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045f473 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000413d6b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000435423 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000422636 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004226be : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000466b47 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000040374a : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000000000450583 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x0000000000450652 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000040a243 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000418b7c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040f7ff : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000418b7d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420081 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418ba1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040e07c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000048fcd3 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043331a : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000412f78 : or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000004be6c6 : or byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000042173e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479a6a : or byte ptr [rbp + 0x440f4cd2], al ; ret
0x00000000004bf163 : or byte ptr [rbp + 0xb], al ; push rbx ; ret
0x000000000048fb72 : or byte ptr [rbp - 0x73], cl ; cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x000000000043ea17 : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x0000000000415e55 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000458742 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000040bf55 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000040b11e : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405ffe : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000401b85 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048fc53 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000464ade : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046d17b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000045049a : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047ae09 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000004bb952 : or byte ptr [rcx + 0xb], al ; ret
0x000000000047b95b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000046c630 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000049187e : or byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x000000000046d182 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000042e908 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000044ba5e : or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; ret 0xfffb
0x000000000043754e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000044622c : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004af07e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000464f57 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000464bb1 : or byte ptr [rdi + 0x6c11a0], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000472f26 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x000000000046ea37 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000046ddee : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x000000000046e697 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000043f686 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0x000000000040d8de : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000483e89 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000040d717 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000042602b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041b31c : or byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000496600 : or byte ptr [rsi], 0xf9 ; inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x000000000040fd7c : or ch, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047688e : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000409310 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000044ed7d : or cl, byte ptr [rax - 0x3f] ; call 0xffffffffc2ce358e
0x000000000047f70c : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000045cff2 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000478a59 : or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000458707 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x000000000047aff2 : or cl, byte ptr [rdi - 0x76b7ffdc] ; ret
0x00000000004556dd : or cl, ch ; push rbp ; ret
0x00000000004456dc : or cl, ch ; ret
0x000000000044ba62 : or cl, ch ; ret 0xfffb
0x0000000000484055 : or cl, cl ; cmove rax, rdx ; ret
0x000000000042ac63 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004914a5 : or dh, bl ; ret
0x0000000000450936 : or dh, byte ptr [rbp + 2] ; ret
0x0000000000479b37 : or dh, byte ptr [rbp - 0x55] ; call rbx
0x000000000046b415 : or dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000004129bb : or dh, dh ; ret 0x7404
0x0000000000413c91 : or dh, dh ; ret 0x7502
0x0000000000411f2a : or dh, dh ; ret 0xf01
0x00000000004129d7 : or dh, dh ; ret 0xf04
0x000000000040235f : or dh, dh ; ret 0xfdf
0x00000000004b3784 : or dl, byte ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000004b9a28 : or dl, cl ; clc ; call qword ptr [rax]
0x00000000004b9b8c : or dl, dl ; clc ; jmp qword ptr [rdx]
0x0000000000401e08 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000041956e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000048224c : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x000000000044940d : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000418aad : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004215ef : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418a07 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475c12 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000467b10 : or dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004257e6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004167f6 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000040af10 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040f64b : or dword ptr [rbx], 8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004be0c2 : or dword ptr [rbx], eax ; ret 0xa03
0x00000000004160a7 : or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000415ebe : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000044a46c : or dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000408c50 : or dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x0000000000401814 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x00000000004683d6 : or dword ptr [rip + 0x258e33], 1 ; pop rbx ; ret
0x0000000000430df1 : or eax, 0x1c478d48 ; ret
0x000000000040a9b0 : or eax, 0x20 ; jmp 0x40a97b
0x0000000000493877 : or eax, 0x22efe4 ; jne 0x4938a4 ; ret
0x00000000004bcbe8 : or eax, 0x3520303 ; ret
0x00000000004b31ad : or eax, 0x46300000 ; cmc ; call qword ptr [rdx]
0x00000000004b3195 : or eax, 0x46380000 ; cmc ; call qword ptr [rax]
0x0000000000422c12 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x0000000000416842 : or eax, 0x70c48348 ; pop rbx ; ret
0x000000000041fb37 : or eax, 0x83480000 ; ret 0x4910
0x000000000041fba1 : or eax, 0x83480000 ; ret 0xe910
0x000000000049367d : or eax, 0x83489066 ; ret 0x4810
0x00000000004433b3 : or eax, 0x83489074 ; ret
0x000000000047f6e6 : or eax, 0x894c0000 ; ret
0x00000000004b5bb7 : or eax, 0xd1cfff6 ; insb byte ptr [rdi], dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000004b5bff : or eax, 0xd1cfff6 ; push rax ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000004b5c47 : or eax, 0xd1cfff6 ; sub esp, esp ; cmc ; jmp qword ptr [rdx]
0x00000000004ae6b3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000042ab13 : or eax, 0xf7f0ff3 ; ret
0x00000000004b5a05 : or eax, 0xfff60f48 ; sbb al, 0xd ; pop rcx ; ret 0xfff5
0x00000000004ba725 : or eax, 0xfff9cc3a ; sbb al, 0xd ; ret 0xf9cb
0x00000000004341a1 : or eax, 0xffffffff ; ret
0x00000000004be7cd : or eax, dword ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret
0x000000000043411e : or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041884d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fd41 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418871 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b305d : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; cmc ; call qword ptr [rbx]
0x0000000000490c83 : or eax, dword ptr [rcx + 0x7ffe2] ; add byte ptr [rcx], cl ; ret 0x5389
0x0000000000422627 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000048cdb1 : or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000004bb94c : or ebp, dword ptr [r11 + 0xa] ; ret
0x00000000004bb94d : or ebp, dword ptr [rbx + 0xa] ; ret
0x000000000040e8d4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004bf439 : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x00000000004b2a05 : or ebp, esi ; jmp qword ptr [rdx]
0x00000000004590c4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000042acd3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000475bfe : or ebx, esi ; ret
0x000000000041567a : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004bd3a6 : or ecx, dword ptr [rax + 0xd1cfffb] ; jb 0x4bd3bf ; sti ; jmp qword ptr [rdx]
0x000000000040b10f : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x000000000044072e : or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x000000000045ba13 : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040f64c : or ecx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b924 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x0000000000445dcc : or ecx, dword ptr [rcx + rcx*4 - 0x1e] ; mov rdi, r14 ; call 0x422019
0x000000000046adf5 : or ecx, eax ; not r9 ; jmp 0x46ae14
0x000000000046ae9f : or ecx, eax ; not r9 ; jmp 0x46aebe
0x000000000048d1b1 : or ecx, ebp ; ret
0x0000000000496719 : or ecx, edi ; call qword ptr [rax - 0x2f0006f6]
0x00000000004bec31 : or edi, ebp ; call rsp
0x00000000004bb565 : or edi, edx ; jmp qword ptr [rdx]
0x000000000046abae : or edx, eax ; not rdx ; jmp 0x46abc9
0x000000000046ac7c : or edx, eax ; not rdx ; jmp 0x46ac97
0x00000000004bb7a9 : or edx, edi ; jmp rbx
0x0000000000414a10 : or esi, dword ptr [rcx] ; salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000042abf3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045ee24 : or esi, ebx ; ret
0x00000000004b27fc : or esi, edi ; hlt ; jmp qword ptr [rdx]
0x000000000040af11 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042ad42 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000042acd2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b2a04 : or r13d, esi ; jmp qword ptr [rdx]
0x000000000042ac62 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000042abf2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000048cdb0 : or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x00000000004be7cc : or r8d, dword ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret
0x000000000046adf4 : or r9, rax ; not r9 ; jmp 0x46ae15
0x000000000046ae9e : or r9, rax ; not r9 ; jmp 0x46aebf
0x00000000004bcbe7 : or rax, 0x3520303 ; ret
0x00000000004341a0 : or rax, 0xffffffffffffffff ; ret
0x0000000000489562 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422626 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000004bb97c : or rbp, qword ptr [r11 + 0xa] ; ret
0x000000000046abad : or rdx, rax ; not rdx ; jmp 0x46abca
0x000000000046ac7b : or rdx, rax ; not rdx ; jmp 0x46ac98
0x0000000000475058 : out -0x18, eax ; ret 0xf9fe
0x00000000004ad560 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba61c : out -0x36, eax ; stc ; jmp qword ptr [rdx]
0x00000000004b5d6d : out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004af288 : out -0xb, eax ; mov ch, 0xab ; ret
0x000000000042a55a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004bceb1 : out -6, eax ; call qword ptr [rax]
0x0000000000491b4a : out 0x41, eax ; call rsp
0x0000000000466efc : out 0x41, eax ; pop rsp ; pop r13 ; jmp rax
0x00000000004693b9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048f429 : out 0x48, al ; mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x000000000040e2e3 : out 0x5b, al ; ret
0x0000000000479c65 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x0000000000479c28 : out 0x89, al ; out dx, eax ; call rax
0x00000000004b597c : out 0xc1, al ; cmc ; jmp qword ptr [rdx]
0x000000000043411b : out 0xe8, al ; outsd dx, dword ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004750e0 : out 0xe8, al ; sub cl, bh ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x000000000042a4da : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004b6c29 : out 0xf5, al ; call rdx
0x00000000004bb159 : out 0xf9, al ; jmp qword ptr [rax]
0x000000000048354f : out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x00000000004829dc : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422499 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000496571 : out dx, al ; clc ; call qword ptr [rax + 0x10fff8ee]
0x0000000000496575 : out dx, al ; clc ; call qword ptr [rax]
0x00000000004964b1 : out dx, al ; clc ; jmp rcx
0x00000000004b615d : out dx, al ; cmc ; jmp qword ptr [rdx]
0x00000000004ae6b7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000496468 : out dx, al ; in al, dx ; clc ; push rax ; in eax, dx ; clc ; jmp qword ptr [rcx]
0x000000000042767a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a8ea : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042149e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422905 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000407e77 : out dx, eax ; add ecx, ebp ; ret
0x000000000041c31e : out dx, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493879 : out dx, eax ; and al, byte ptr [rax] ; jne 0x4938a2 ; ret
0x0000000000408b76 : out dx, eax ; call 0x414e33
0x000000000043a90d : out dx, eax ; call 0x442908
0x000000000046c698 : out dx, eax ; call 0x47b888
0x0000000000479c67 : out dx, eax ; call qword ptr [rbx]
0x0000000000479c2a : out dx, eax ; call rax
0x00000000004366ca : out dx, eax ; call rbx
0x0000000000496579 : out dx, eax ; clc ; call qword ptr [rax + 0x10fff8ef]
0x000000000049657d : out dx, eax ; clc ; call qword ptr [rax]
0x00000000004964b9 : out dx, eax ; clc ; jmp rcx
0x00000000004b61a5 : out dx, eax ; cmc ; jmp qword ptr [rdx]
0x00000000004b1df0 : out dx, eax ; mov bl, 0xfd ; jmp qword ptr [rax]
0x0000000000467033 : out dx, eax ; mov qword ptr [rax], 0 ; call r12
0x00000000004274aa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004275a6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004274f2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a96a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042159d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040e298 : out dx, eax ; pop rbx ; ret
0x0000000000424433 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424448 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042445d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043f053 : out dx, eax ; ret 0
0x0000000000432b23 : out dx, eax ; ret 0xf66
0x000000000042594c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000425935 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042591e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004243da : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004569d2 : out dx, eax ; xor byte ptr [rbx - 0x78f0f601], al ; ret
0x0000000000457d65 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000041f4ae : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004332ec : outsb dx, byte ptr [rsi] ; add byte ptr [r8 + 0x10], dil ; pop rbx ; ret
0x0000000000430f4e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004aee63 : outsb dx, byte ptr [rsi] ; ja 0x4aedec ; ret 0x48f
0x00000000004be384 : outsb dx, byte ptr [rsi] ; pop rcx ; cld ; jmp qword ptr [rdx]
0x00000000004acba4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000041c92a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000496369 : outsd dx, dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x0000000000417448 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041cf7e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000043411d : outsd dx, dword ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000042574d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004257ed : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000459b5a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000425752 : outsd dx, dword ptr [rsi] ; ret
0x00000000004ad566 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000427de7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000004257f2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000459baa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004bbb34 : outsd dx, dword ptr [rsi] ; sub edi, edx ; jmp qword ptr [rdx]
0x00000000004ad565 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000044641c : paddb mm7, mm7 ; nop ; xor eax, eax ; ret
0x0000000000418742 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000045a994 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000045a97f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000418741 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004ae965 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004ae966 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000419606 : pmovmskb edx, mm4 ; test edx, edx ; je 0x41961a ; bsf eax, edx ; ret
0x00000000004bb3a5 : pop qword ptr [rax] ; add byte ptr [rax], ch ; clc ; stc ; call rax
0x000000000043cd8d : pop qword ptr [rdx + 0x31000000] ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000004371d4 : pop r10 ; ret
0x00000000004aedef : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000414e04 : pop r12 ; jmp rax
0x00000000004506ab : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x0000000000401a60 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040bf58 : pop r12 ; neg eax ; pop r13 ; ret
0x0000000000466efd : pop r12 ; pop r13 ; jmp rax
0x000000000045a6f8 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045e778 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x00000000004151cf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400656 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a2 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408044 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004019ed : pop r12 ; pop r13 ; ret
0x000000000043a939 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000045f384 : pop r12 ; pop rbp ; ret
0x0000000000400493 : pop r12 ; ret
0x000000000040dbde : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000466eff : pop r13 ; jmp rax
0x00000000004505dd : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x000000000045a6fa : pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045e77a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000481442 : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000004151d1 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400658 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a4 : pop r13 ; pop r14 ; ret
0x0000000000408046 : pop r13 ; pop rbp ; ret
0x00000000004019ef : pop r13 ; ret
0x0000000000458edb : pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x000000000043a93b : pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000046bcfa : pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000004094c3 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000004620d8 : pop r14 ; mov eax, 1 ; pop r15 ; ret
0x000000000047ec4a : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047beda : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000481444 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000004151d3 : pop r14 ; pop r15 ; jmp rax
0x000000000040065a : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401690 : pop r14 ; pop r15 ; ret
0x00000000004017a6 : pop r14 ; ret
0x00000000004785b1 : pop r14 ; sar rax, 3 ; pop r15 ; ret
0x0000000000481446 : pop r15 ; fmulp st(1) ; ret
0x00000000004151d5 : pop r15 ; jmp rax
0x000000000040065c : pop r15 ; pop rbp ; ret
0x0000000000401692 : pop r15 ; ret
0x000000000048cee3 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000043df9d : pop rax ; call rax
0x00000000004be2f5 : pop rax ; cld ; jmp qword ptr [rdx]
0x00000000004b39d5 : pop rax ; cmc ; jmp qword ptr [rdx]
0x00000000004456db : pop rax ; or cl, ch ; ret
0x00000000004be5b8 : pop rax ; pop rbx ; cld ; call qword ptr [rax]
0x00000000004148f4 : pop rax ; pop rdx ; add r8b, bpl ; ret
0x000000000046b408 : pop rax ; ret
0x0000000000417004 : pop rax ; sahf ; add dword ptr [rax], eax ; ret
0x0000000000479ed2 : pop rax ; sub byte ptr [rax + 0x39], cl ; ret
0x000000000045d762 : pop rbp ; add byte ptr es:[rcx + 0x29], cl ; ret
0x00000000004373b5 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x00000000004148e1 : pop rbp ; jmp rax
0x0000000000401013 : pop rbp ; mov byte ptr [rip + 0x2c0c25], 1 ; ret
0x00000000004505de : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x0000000000408918 : pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000045a6fb : pop rbp ; mov eax, edx ; pop r14 ; ret
0x0000000000400fa1 : pop rbp ; mov edi, 0x6c1c30 ; jmp rax
0x0000000000466ef9 : pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x0000000000422e19 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000045e77b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x0000000000400fde : pop rbp ; mov rsi, rax ; mov edi, 0x6c1c30 ; jmp rdx
0x0000000000401e29 : pop rbp ; or byte ptr [rax - 0x73], 0x44 ; shr al, 1 ; mov rdx, rax ; jmp 0x401e4e
0x0000000000414e03 : pop rbp ; pop r12 ; jmp rax
0x0000000000401a5f : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040bf57 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000045a6f7 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000004151ce : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040168b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004019ec : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043a938 : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x0000000000400492 : pop rbp ; pop r12 ; ret
0x000000000047ec49 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047bed9 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000481443 : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000004151d2 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000400659 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017a5 : pop rbp ; pop r14 ; ret
0x00000000004785b0 : pop rbp ; pop r14 ; sar rax, 3 ; pop r15 ; ret
0x0000000000408047 : pop rbp ; pop rbp ; ret
0x000000000046d188 : pop rbp ; pop rbx ; ret
0x00000000004003cf : pop rbp ; ret
0x0000000000444997 : pop rbp ; shl dword ptr [rdi], 1 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000457d78 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000458edc : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x0000000000406069 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000043a93c : pop rbp ; xor eax, eax ; pop r14 ; ret
0x00000000004ac138 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043329f : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000004332cf : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004be5b9 : pop rbx ; cld ; call qword ptr [rax]
0x00000000004b3a1d : pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000004ac136 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004572a3 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475f3e : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000491264 : pop rbx ; jmp 9
0x0000000000483b0a : pop rbx ; jmp rax
0x0000000000432fa9 : pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x0000000000409f4c : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004683ed : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000433330 : pop rbx ; mov eax, eax ; ret
0x00000000004081e5 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000044bf92 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000467966 : pop rbx ; mov eax, edx ; pop rbp ; ret
0x000000000046a13a : pop rbx ; mov edi, 0x6c11e0 ; jmp rax
0x000000000040d4e6 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d666 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000457947 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046827e : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000408043 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000045f383 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004373b4 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x00000000004148e0 : pop rbx ; pop rbp ; jmp rax
0x0000000000408917 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000466ef8 : pop rbx ; pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x0000000000422e18 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000414e02 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000401a5e : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040bf56 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000004017a0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004019eb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400491 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004003ce : pop rbx ; pop rbp ; ret
0x0000000000406068 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000004b47ac : pop rbx ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004083e2 : pop rbx ; ret
0x00000000004af420 : pop rbx ; ret 0x6f9
0x0000000000438811 : pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000045ad48 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000476168 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x24d4df] ; jmp rax
0x000000000041c42a : pop rcx ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004be33d : pop rcx ; cld ; jmp qword ptr [rdx]
0x00000000004bc109 : pop rcx ; cli ; jmp rdi
0x0000000000484062 : pop rcx ; jmp qword ptr [rbx]
0x00000000004b8127 : pop rcx ; ret
0x00000000004b5a0c : pop rcx ; ret 0xfff5
0x0000000000426028 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000475fae : pop rdi ; add byte ptr [r15 + 0x6c3640], r15b ; call rax
0x00000000004695c0 : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000421c2d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000402f3d : pop rdi ; and al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000481447 : pop rdi ; fmulp st(1) ; ret
0x0000000000427a49 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427859 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ae6de : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004151d6 : pop rdi ; jmp rax
0x00000000004ad6a1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000045f1e4 : pop rdi ; mov rax, r9 ; ret
0x0000000000427679 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004274a9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004275a5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004274f1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040065d : pop rdi ; pop rbp ; ret
0x0000000000401693 : pop rdi ; ret
0x00000000004148f5 : pop rdx ; add r8b, bpl ; ret
0x000000000040b6d7 : pop rdx ; cdqe ; ret
0x00000000004be461 : pop rdx ; cld ; jmp qword ptr [rax]
0x00000000004ae2c1 : pop rdx ; je 0x4ae28b ; ret 0xacfc
0x00000000004af287 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x00000000004371d3 : pop rdx ; pop r10 ; ret
0x00000000004148df : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000004371f9 : pop rdx ; pop rsi ; ret
0x00000000004371d5 : pop rdx ; ret
0x00000000004aedf0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000421b2e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040ca59 : pop rsi ; and al, byte ptr [rax] ; add bl, dh ; ret
0x00000000004b9754 : pop rsi ; clc ; jmp qword ptr [rdx]
0x000000000046ab10 : pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000046bcfb : pop rsi ; idiv r9 ; pop r15 ; ret
0x00000000004094c4 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000004620d9 : pop rsi ; mov eax, 1 ; pop r15 ; ret
0x000000000047ec4b : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047bedb : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000422635 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000481445 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x00000000004151d4 : pop rsi ; pop r15 ; jmp rax
0x000000000040065b : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401691 : pop rsi ; pop r15 ; ret
0x00000000004017a7 : pop rsi ; ret
0x00000000004785b2 : pop rsi ; sar rax, 3 ; pop r15 ; ret
0x000000000041f6c0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048045c : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004203c0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000004132bb : pop rsp ; and al, 0x28 ; call rax
0x00000000004b9bd4 : pop rsp ; and ecx, edi ; jmp qword ptr [rdx]
0x00000000004b3a65 : pop rsp ; cmc ; jmp qword ptr [rdx]
0x000000000046f3e8 : pop rsp ; in eax, -1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000414e05 : pop rsp ; jmp rax
0x00000000004506ac : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x0000000000450777 : pop rsp ; mov eax, edx ; pop rbx ; ret
0x00000000004460b0 : pop rsp ; mov edi, 0x8948fffd ; ret
0x0000000000401a61 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000040bf59 : pop rsp ; neg eax ; pop r13 ; ret
0x0000000000418ba0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466efe : pop rsp ; pop r13 ; jmp rax
0x000000000045a6f9 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045e779 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000481441 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000004151d0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400657 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a3 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000408045 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004019ee : pop rsp ; pop r13 ; ret
0x000000000043a93a : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000045f385 : pop rsp ; pop rbp ; ret
0x0000000000400494 : pop rsp ; ret
0x00000000004b27b4 : pop rsp ; std ; hlt ; jmp qword ptr [rdx]
0x000000000040dbdf : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000004baadc : pop rsp ; xchg byte ptr [rax], al ; add byte ptr [rax], ah ; sar cl, 1 ; call rcx
0x00000000004331f9 : popfq ; ret 0xea81
0x0000000000486b60 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496d25 : popfq ; stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x00000000004b5977 : psadbw mm7, mm7 ; sbb al, 0xd ; out 0xc1, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b5a07 : psadbw mm7, mm7 ; sbb al, 0xd ; pop rcx ; ret 0xfff5
0x00000000004b5a4f : psadbw mm7, mm7 ; sbb al, 0xd ; sub ah, al ; cmc ; jmp qword ptr [rdx]
0x000000000042aa32 : psllq mm1, qword ptr [r15] ; jg 0x42aa4d ; ret
0x000000000042aa33 : psllq mm1, qword ptr [rdi] ; jg 0x42aa4c ; ret
0x0000000000430616 : psllq mm1, qword ptr [rdi] ; jg 0x43062a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430615 : psllq mm1, qword ptr [rdi] ; jg 0x43062b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430677 : psllq mm1, qword ptr [rdi] ; jg 0x43068c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000496685 : psubw mm7, mm7 ; adc ecx, edi ; jmp qword ptr [rax]
0x0000000000430f34 : push -0x9ffffff ; ret 0x7501
0x000000000046f50a : push 0x15044f6 ; and byte ptr [rdi], cl ; test al, dl ; jmp 0x46f51c
0x000000000046f509 : push 0x15044f6 ; and byte ptr [rdi], cl ; test al, dl ; jmp 0x46f51d
0x0000000000434db2 : push 0x3b ; add byte ptr [rax], al ; ret
0x00000000004aee62 : push 0x6e ; ja 0x4aeded ; ret 0x48f
0x000000000046b100 : push 0x83 ; ret
0x0000000000496361 : push 0xf8 ; inc dword ptr [rax] ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rax]
0x00000000004961ff : push qword ptr [rax + 0x2c] ; clc ; inc dword ptr [rax + 0x2d] ; clc ; call qword ptr [rax]
0x000000000049658b : push qword ptr [rax + 0x40fff8f1] ; clc ; call rax
0x0000000000496987 : push qword ptr [rax + 0x40fff944] ; stc ; call rax
0x000000000049676f : push qword ptr [rax + 0x40fff947] ; stc ; call rax
0x0000000000401430 : push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x00000000004968e3 : push qword ptr [rax + rcx*2 + 0x4844fff9] ; stc ; call rsp
0x00000000004b23ab : push qword ptr [rax - 0x26] ; std ; jmp rax
0x0000000000496cbb : push qword ptr [rax - 0x3f000668] ; cwde ; stc ; call rax
0x000000000049638f : push qword ptr [rax - 0x3f00077d] ; test edi, eax ; call rax
0x0000000000496337 : push qword ptr [rax - 0x50] ; clc ; inc eax ; mov cl, 0xf8 ; call qword ptr [rax]
0x0000000000496597 : push qword ptr [rax - 0xd] ; clc ; call qword ptr [rax]
0x00000000004969d7 : push qword ptr [rax] ; cmp ecx, edi ; jmp qword ptr [rax + 0x16fff938]
0x000000000049631b : push qword ptr [rax] ; mov eax, dr1 ; call qword ptr [rax - 0x1f000758]
0x00000000004961ef : push qword ptr [rax] ; sub eax, edi ; inc dword ptr [rax] ; sub bh, al ; call rax
0x00000000004328b8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000409fdb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000040e2e1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004375cc : push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040e293 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000496b13 : push qword ptr [rcx + rdi - 7] ; jmp rsp
0x000000000040a434 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004702e1 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000473f1b : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x0000000000414882 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000043417a : push qword ptr [rdi + 0x17] ; ret
0x00000000004341c9 : push qword ptr [rdi + 0x18] ; ret
0x000000000045ebcf : push qword ptr [rdi + 0x1a] ; ret
0x0000000000444b9c : push qword ptr [rdi + 0x1e] ; ret
0x000000000045ec5e : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x000000000043435e : push qword ptr [rdi + 0x6f] ; ret
0x000000000045ee7c : push qword ptr [rdi + 1] ; ret
0x0000000000444e15 : push qword ptr [rdi + 2] ; ret
0x000000000045e7dd : push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x0000000000492826 : push qword ptr [rdi + rbx - 0x18] ; ret 0xfff7
0x0000000000475e13 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x000000000049648b : push qword ptr [rdx - 0x13] ; clc ; call qword ptr [rax]
0x0000000000496487 : push qword ptr [rdx - 0x14] ; clc ; push qword ptr [rdx - 0x13] ; clc ; call qword ptr [rax]
0x000000000049679f : push qword ptr [rsi + 0x42] ; stc ; jmp rsi
0x00000000004967b7 : push qword ptr [rsi + 0x46fff946] ; stc ; call rsi
0x000000000045912d : push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x000000000040d44b : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b3674 : push r8 ; cmc ; jmp qword ptr [rdx]
0x0000000000412d0b : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000045838a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e8e1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004966a7 : push rax ; adc cl, bh ; call rax
0x0000000000496627 : push rax ; adc ecx, edi ; call rax
0x00000000004679d4 : push rax ; add al, 0x48 ; cmp edx, ecx ; jne 0x467992 ; mov eax, dword ptr [rdx] ; ret
0x000000000040d44c : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045c328 : push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x0000000000436b9a : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000496cfb : push rax ; cdq ; stc ; call qword ptr [rax]
0x00000000004b8b90 : push rax ; clc ; call qword ptr [rax]
0x00000000004b3675 : push rax ; cmc ; jmp qword ptr [rdx]
0x00000000004969c0 : push rax ; cmp al, 0xf9 ; call rax
0x00000000004572cb : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000004969c8 : push rax ; cmp edi, ecx ; call rax
0x0000000000496ccb : push rax ; cwde ; stc ; inc dword ptr [rax] ; cdq ; stc ; call qword ptr [rax]
0x00000000004b5c04 : push rax ; fcompi st(5) ; jmp qword ptr [rdx]
0x0000000000471450 : push rax ; fcos ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000049646b : push rax ; in eax, dx ; clc ; jmp qword ptr [rcx]
0x00000000004728bf : push rax ; jmp 0x46eb14
0x000000000046b8dc : push rax ; jmp qword ptr [rax]
0x0000000000484070 : push rax ; jmp qword ptr [rbx]
0x00000000004bc7d0 : push rax ; mov ah, 0xfa ; call qword ptr [rbx]
0x00000000004b4494 : push rax ; mov dh, ch ; jmp qword ptr [rdx]
0x000000000043b927 : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000043fecd : push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043d8f7 : push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000479a69 : push rax ; or byte ptr [rbp + 0x440f4cd2], al ; ret
0x0000000000405ffd : push rax ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044ba5d : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; ret 0xfffb
0x00000000004129ba : push rax ; or dh, dh ; ret 0x7404
0x00000000004129d6 : push rax ; or dh, dh ; ret 0xf04
0x0000000000418aac : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000475fad : push rax ; pop rdi ; add byte ptr [r15 + 0x6c3640], r15b ; call rax
0x0000000000496d23 : push rax ; popfq ; stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x000000000049635f : push rax ; push 0xf8 ; inc dword ptr [rax] ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rax]
0x000000000040e8d6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000045922a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000049665c : push rax ; sbb edi, ecx ; jmp rax
0x00000000004969b0 : push rax ; stc ; call rax
0x0000000000496798 : push rax ; stc ; jmp rax
0x000000000049644b : push rax ; xlatb ; clc ; call qword ptr [rax]
0x000000000040e2dd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000491f76 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b798d : push rbp ; add byte ptr [rax], al ; add bh, 0xf7 ; jmp qword ptr [rdi]
0x000000000043ee6a : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000487ca8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000413c90 : push rbp ; or dh, dh ; ret 0x7502
0x00000000004556df : push rbp ; ret
0x000000000044e4b7 : push rbp ; ret 0
0x0000000000457d61 : push rbp ; ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x000000000041bd9a : push rbp ; xor rax, rax ; ret
0x0000000000401186 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004761f0 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404adb : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000041be6a : push rbx ; add dword ptr [rax], eax ; ret
0x0000000000490c8d : push rbx ; and cl, ch ; ret 0xfffb
0x00000000004590f2 : push rbx ; je 0x459156 ; pop rbp ; pop r12 ; ret
0x0000000000456695 : push rbx ; or al, 0xf6 ; ret 0x7404
0x0000000000456c52 : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000040f3ea : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x0000000000467b77 : push rbx ; or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000435422 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000040d8dd : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000004b5e44 : push rbx ; out -0xb, eax ; jmp qword ptr [rdx]
0x000000000040fa89 : push rbx ; ret
0x0000000000468559 : push rbx ; ret 0xfffa
0x00000000004609d4 : push rbx ; sub dh, dh ; ret 0xf04
0x000000000040adbf : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004084d3 : push rbx ; sub rsp, 8 ; call 0x4147b7
0x00000000004ae2bc : push rbx ; xchg eax, edx ; jae 0x4ae29b ; push rsi ; pop rdx ; je 0x4ae290 ; ret 0xacfc
0x000000000041b84d : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004ad545 : push rcx ; call qword ptr [rsi]
0x00000000004b3785 : push rcx ; cmc ; jmp qword ptr [rdx]
0x000000000044641b : push rcx ; paddb mm7, mm7 ; nop ; xor eax, eax ; ret
0x00000000004b6ec6 : push rcx ; ret
0x00000000004b43bc : push rcx ; xchg ch, dh ; jmp qword ptr [rdx]
0x0000000000430b5a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000042ab99 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000045dd94 : push rdi ; add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000430c0c : push rdi ; add eax, 0xc478d48 ; ret
0x0000000000427338 : push rdi ; clc ; ret
0x00000000004be3a1 : push rdi ; cld ; call rbx
0x00000000004274b0 : push rdi ; cld ; ret
0x0000000000427fd7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042a479 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045edef : push rdi ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x000000000042a3f9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042a24a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040d384 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000042a2da : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046d17a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047b95a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000046d181 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000472f25 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x000000000046ea36 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000046dded : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x000000000046e696 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000044ba61 : push rdi ; or cl, ch ; ret 0xfffb
0x0000000000430df0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042574e : push rdi ; ret
0x00000000004257ee : push rdi ; ret 0xff3
0x0000000000407a81 : push rdi ; ret 0xffef
0x0000000000435582 : push rdi ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000004281d7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004279fa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000427dd7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000459b5b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004b2ecc : push rdx ; cmp al, 0xf5 ; jmp qword ptr [rdx]
0x000000000046032a : push rdx ; ret 0xfffb
0x0000000000496844 : push rdx ; stc ; jmp rdx
0x0000000000424434 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045886d : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004b7b5d : push rsi ; add byte ptr [rax], al ; sal dil, cl ; call qword ptr [rdi]
0x000000000042ae31 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000042aea1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004305a5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000042adc1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000430543 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000424449 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000427462 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427bd1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427805 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004279e5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427bc5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427625 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004aee60 : push rsi ; cli ; push 0x6e ; ja 0x4aedef ; ret 0x48f
0x00000000004b3ab9 : push rsi ; cmc ; jmp rsp
0x00000000004323f6 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000004323e6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000496508 : push rsi ; int1 ; clc ; jmp rsi
0x00000000004323b6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000045bc56 : push rsi ; js 0x45bc85 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000004226bd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000047f6e5 : push rsi ; or eax, 0x894c0000 ; ret
0x00000000004ae2c0 : push rsi ; pop rdx ; je 0x4ae28c ; ret 0xacfc
0x00000000004ac206 : push rsi ; ret
0x0000000000460a5d : push rsi ; ret 0xf02
0x00000000004323c6 : push rsi ; sub eax, edx ; ret
0x000000000042445e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004132b6 : push rsp ; and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000048cd00 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048ccba : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000414630 : push rsp ; and al, 8 ; call 0x410875
0x0000000000496b1c : push rsp ; cmp cl, bh ; jmp rsp
0x00000000004b94d4 : push rsp ; jo 0x4b94de ; add byte ptr [rax], bl ; mov ch, 0xf8 ; call qword ptr [rcx]
0x000000000041292c : push rsp ; ret
0x0000000000490b2d : push rsp ; ret 0x4910
0x000000000049690c : push rsp ; stc ; jmp rsp
0x00000000004b4cd4 : push rsp ; sub byte ptr [rax], al ; add byte ptr [rax - 0x70], bh ; cmc ; call qword ptr [rdi]
0x00000000004bccd4 : push rsp ; test al, 0 ; add byte ptr [rax], bl ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004512b8 : push rsp ; test dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000041f380 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004bc105 : pushfq ; add byte ptr [rax], al ; call 0xffffffffe84bbb6c
0x00000000004b4b1c : pushfq ; add byte ptr es:[rax], al ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000482f9c : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000496305 : pushfq ; clc ; jmp rax
0x00000000004b4765 : pushfq ; cmc ; jmp qword ptr [rdx]
0x0000000000437fe9 : pushfq ; jg 0x43803c ; add byte ptr [rax + 0xf], cl ; ret
0x000000000040c97c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000420080 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000408b70 : pushfq ; xchg eax, esp ; add dword ptr [rax], eax ; mov rdi, r13 ; call 0x414e39
0x000000000045c521 : rcl byte ptr [rax + 0x39000001], cl ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000496694 : rcl byte ptr [rsi], 1 ; stc ; call rax
0x0000000000496448 : rcl dh, 1 ; clc ; push rax ; xlatb ; clc ; call qword ptr [rax]
0x0000000000413609 : rcl dword ptr [rip + 0x2ad219], -0x7d ; ret 0x8b01
0x00000000004ae2bf : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ae28d ; ret 0xacfc
0x00000000004ae2bb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ae291 ; ret 0xacfc
0x0000000000496cc0 : rcr byte ptr [rax - 0x672f0007], 0xf9 ; jmp rax
0x0000000000496698 : rcr byte ptr [rax], 1 ; stc ; call rax
0x000000000046d187 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000437550 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000475f3d : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x00000000004109b5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000044622e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040772e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048f5fb : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x000000000045049c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000414d1a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004104b0 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000496cf8 : rcr byte ptr [rcx - 0x660f0007], 1 ; stc ; call qword ptr [rax]
0x00000000004ae6dd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000496d18 : rcr byte ptr [rdx - 0x650f0007], 1 ; stc ; jmp rax
0x000000000040cf31 : rcr byte ptr [rip + 0xdeb0000], 0xf ; mov cl, 0x35 ; ret 0x2b57
0x00000000004be37e : rcr dword ptr [rcx - 4], -1 ; sbb al, 0xd ; outsb dx, byte ptr [rsi] ; pop rcx ; cld ; jmp qword ptr [rdx]
0x000000000046bad9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000400cd9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce2 ; ret
0x00000000004002c9 : ret
0x0000000000400d35 : ret 0
0x0000000000444518 : ret 0x101
0x0000000000456caf : ret 0x107
0x000000000047f714 : ret 0x1075
0x0000000000401e32 : ret 0x10eb
0x000000000047089c : ret 0x11
0x0000000000412c82 : ret 0x110
0x000000000046d15c : ret 0x114d
0x00000000004802cc : ret 0x11e9
0x00000000004a1ac8 : ret 0x12
0x0000000000475468 : ret 0x12e9
0x0000000000407ceb : ret 0x13eb
0x000000000040f3ee : ret 0x148
0x000000000040e2f2 : ret 0x149
0x000000000043499c : ret 0x14c
0x0000000000411b9c : ret 0x1589
0x00000000004467ef : ret 0x1676
0x00000000004197ea : ret 0x17
0x000000000041be05 : ret 0x1876
0x0000000000490801 : ret 0x19e8
0x00000000004aec3a : ret 0x1ad4
0x00000000004ad3cd : ret 0x1b49
0x000000000044daa6 : ret 0x1b8
0x0000000000401444 : ret 0x1be
0x00000000004a3500 : ret 0x1d4
0x00000000004a3c98 : ret 0x1d5
0x000000000044d9aa : ret 0x1e5
0x000000000040a9b4 : ret 0x1f0f
0x000000000041946a : ret 0x1f4
0x0000000000444a9d : ret 0x200
0x000000000046b9ae : ret 0x2148
0x00000000004135da : ret 0x217
0x000000000046158c : ret 0x2175
0x0000000000452ded : ret 0x22
0x0000000000419568 : ret 0x2288
0x0000000000454e0b : ret 0x22e9
0x0000000000425952 : ret 0x2373
0x0000000000434237 : ret 0x23e8
0x00000000004a2508 : ret 0x24
0x000000000047aef6 : ret 0x2487
0x0000000000464f6f : ret 0x25
0x00000000004628ba : ret 0x25e9
0x000000000045cbd2 : ret 0x2633
0x000000000045d5ba : ret 0x265f
0x000000000045cfba : ret 0x2665
0x0000000000459956 : ret 0x2774
0x0000000000427106 : ret 0x280f
0x0000000000414ed5 : ret 0x2875
0x000000000041bdf5 : ret 0x2876
0x000000000043a915 : ret 0x2895
0x0000000000436ec7 : ret 0x28eb
0x000000000047aee7 : ret 0x28f5
0x000000000040f9d5 : ret 0x2948
0x000000000045afd0 : ret 0x294c
0x0000000000416e9a : ret 0x2a99
0x0000000000415f8a : ret 0x2aa8
0x000000000045b772 : ret 0x2b3c
0x000000000043b09e : ret 0x2b49
0x000000000040cf3a : ret 0x2b57
0x0000000000433202 : ret 0x2b77
0x0000000000406c9a : ret 0x2bb5
0x0000000000436f65 : ret 0x2ceb
0x000000000045ee14 : ret 0x2d77
0x00000000004470ab : ret 0x2f
0x0000000000441e89 : ret 0x3104
0x0000000000464846 : ret 0x3110
0x00000000004a29f8 : ret 0x33
0x0000000000437127 : ret 0x33e8
0x0000000000409637 : ret 0x348
0x000000000045cc2f : ret 0x34be
0x00000000004675e7 : ret 0x35e9
0x0000000000474894 : ret 0x36e8
0x00000000004ae51a : ret 0x3827
0x00000000004354ca : ret 0x3845
0x000000000041bde5 : ret 0x3876
0x00000000004acba6 : ret 0x38ae
0x0000000000475ddf : ret 0x38b
0x0000000000478b3b : ret 0x3901
0x0000000000452952 : ret 0x3945
0x000000000040a5a7 : ret 0x3948
0x00000000004448eb : ret 0x3949
0x000000000045f0ff : ret 0x394c
0x000000000043a63c : ret 0x3974
0x00000000004329d2 : ret 0x3a01
0x000000000042593b : ret 0x3a73
0x000000000044e246 : ret 0x3ae9
0x0000000000437541 : ret 0x3b01
0x000000000044255a : ret 0x3b48
0x0000000000401371 : ret 0x3b8
0x00000000004148b0 : ret 0x3d83
0x00000000004629a5 : ret 0x3e9
0x0000000000483c4b : ret 0x3f7
0x000000000041c417 : ret 0x41
0x000000000040c58a : ret 0x4101
0x000000000044718a : ret 0x4108
0x0000000000448a14 : ret 0x4110
0x00000000004674ca : ret 0x4118
0x0000000000419630 : ret 0x4166
0x000000000043b9ee : ret 0x41c3
0x00000000004242ca : ret 0x4266
0x000000000046ddf5 : ret 0x4401
0x000000000043ff23 : ret 0x44c7
0x000000000043ab99 : ret 0x44f6
0x000000000044d6be : ret 0x4501
0x000000000046160e : ret 0x4502
0x00000000004ad6a4 : ret 0x474c
0x000000000043dae5 : ret 0x4801
0x00000000004224a1 : ret 0x4802
0x000000000042257d : ret 0x4803
0x0000000000422565 : ret 0x4804
0x000000000042254d : ret 0x4805
0x0000000000422535 : ret 0x4806
0x00000000004194f3 : ret 0x4808
0x0000000000414abd : ret 0x4810
0x00000000004144bc : ret 0x4811
0x0000000000413b7e : ret 0x4817
0x0000000000437ba0 : ret 0x4838
0x00000000004241d6 : ret 0x4840
0x000000000040f5fb : ret 0x4855
0x000000000045e955 : ret 0x4864
0x000000000041960f : ret 0x48c3
0x000000000045c364 : ret 0x48d
0x0000000000439881 : ret 0x48e9
0x00000000004aee66 : ret 0x48f
0x0000000000440901 : ret 0x4901
0x00000000004229a1 : ret 0x4902
0x000000000043c141 : ret 0x4904
0x0000000000410c12 : ret 0x4908
0x000000000045df42 : ret 0x4909
0x0000000000418852 : ret 0x4910
0x0000000000416883 : ret 0x494b
0x000000000046a0cf : ret 0x4ab0
0x00000000004b0818 : ret 0x4afc
0x00000000004b0900 : ret 0x4afe
0x0000000000422909 : ret 0x4c01
0x0000000000422701 : ret 0x4c02
0x000000000040374d : ret 0x4c08
0x000000000044d09f : ret 0x4c30
0x000000000043baf4 : ret 0x4d02
0x000000000040f8bf : ret 0x4d07
0x000000000047da13 : ret 0x4d09
0x000000000044fba8 : ret 0x4d64
0x000000000044cb23 : ret 0x4e0f
0x00000000004ae8c7 : ret 0x4e27
0x000000000047d60d : ret 0x50e9
0x0000000000425924 : ret 0x5173
0x000000000046346b : ret 0x5385
0x0000000000456e37 : ret 0x5389
0x0000000000477282 : ret 0x543a
0x0000000000407d34 : ret 0x5474
0x000000000048ccb8 : ret 0x5489
0x00000000004acb2c : ret 0x5508
0x0000000000476891 : ret 0x5589
0x000000000045a51a : ret 0x56e9
0x00000000004aedf8 : ret 0x5803
0x000000000045814d : ret 0x5877
0x000000000041328f : ret 0x58b
0x00000000004ac800 : ret 0x591c
0x00000000004ad567 : ret 0x5ae4
0x0000000000402eb0 : ret 0x5ae8
0x00000000004628e7 : ret 0x5b74
0x0000000000461a97 : ret 0x5c41
0x00000000004771cb : ret 0x5c88
0x000000000045ce6b : ret 0x5c89
0x00000000004716cf : ret 0x5ce9
0x0000000000400bca : ret 0x5e3
0x000000000040a4a4 : ret 0x60e9
0x00000000004471ef : ret 0x6275
0x00000000004af292 : ret 0x62c1
0x000000000043434b : ret 0x6348
0x0000000000450594 : ret 0x6349
0x00000000004342f7 : ret 0x63e8
0x000000000041bd72 : ret 0x6620
0x0000000000417183 : ret 0x66c3
0x00000000004ac81f : ret 0x67b2
0x000000000045c2f7 : ret 0x67ba
0x0000000000433d9f : ret 0x6b8
0x000000000046ff25 : ret 0x6e9
0x00000000004af421 : ret 0x6f9
0x00000000004268da : ret 0x6fc
0x00000000004146a1 : ret 0x7075
0x00000000004054c4 : ret 0x70e9
0x000000000041c552 : ret 0x7401
0x0000000000413c71 : ret 0x7402
0x00000000004129bd : ret 0x7404
0x000000000041c5bb : ret 0x7408
0x0000000000409089 : ret 0x7420
0x000000000044d0b8 : ret 0x7450
0x0000000000430f39 : ret 0x7501
0x0000000000413c93 : ret 0x7502
0x000000000041c54d : ret 0x7504
0x0000000000432374 : ret 0x7508
0x0000000000430f0b : ret 0x7510
0x000000000041c548 : ret 0x7518
0x0000000000430f18 : ret 0x7520
0x0000000000430f25 : ret 0x7540
0x000000000045ed71 : ret 0x7577
0x0000000000404d4a : ret 0x75e9
0x0000000000424812 : ret 0x7677
0x000000000043b092 : ret 0x774
0x000000000045c3c6 : ret 0x77e
0x0000000000456b79 : ret 0x7a8b
0x0000000000442093 : ret 0x7b73
0x0000000000414812 : ret 0x7b74
0x000000000045fcae : ret 0x7d77
0x000000000041bd02 : ret 0x7e20
0x000000000041744c : ret 0x7f10
0x00000000004286ee : ret 0x80
0x0000000000418629 : ret 0x8000
0x0000000000404f3c : ret 0x8001
0x000000000045e273 : ret 0x8010
0x0000000000464008 : ret 0x804
0x000000000046069f : ret 0x8116
0x0000000000480784 : ret 0x8136
0x0000000000482feb : ret 0x8141
0x000000000044ed98 : ret 0x8166
0x000000000047b6cc : ret 0x8175
0x0000000000478a6d : ret 0x8188
0x0000000000403e97 : ret 0x81e9
0x000000000040efe2 : ret 0x820f
0x000000000044306d : ret 0x8301
0x0000000000400a81 : ret 0x8304
0x000000000044333a : ret 0x8308
0x000000000040aa88 : ret 0x830f
0x0000000000444630 : ret 0x8310
0x000000000044f449 : ret 0x832d
0x00000000004004f5 : ret 0x8341
0x000000000041bac2 : ret 0x8348
0x000000000044e519 : ret 0x8349
0x000000000045f2d6 : ret 0x8401
0x0000000000450586 : ret 0x8404
0x0000000000400d82 : ret 0x840f
0x000000000048e3ee : ret 0x8440
0x000000000040f974 : ret 0x8441
0x000000000040abe5 : ret 0x8445
0x00000000004564cf : ret 0x8502
0x0000000000450655 : ret 0x8504
0x0000000000456d4e : ret 0x8508
0x000000000040ab62 : ret 0x850f
0x000000000045c5d9 : ret 0x8545
0x00000000004566ed : ret 0x8548
0x000000000044d985 : ret 0x858b
0x0000000000448c5c : ret 0x85c7
0x000000000046233a : ret 0x85eb
0x00000000004013d5 : ret 0x860f
0x000000000041525e : ret 0x870f
0x00000000004ac13e : ret 0x871e
0x00000000004615a9 : ret 0x874
0x000000000041be15 : ret 0x876
0x000000000040c345 : ret 0x8801
0x0000000000443873 : ret 0x8901
0x0000000000408e71 : ret 0x8908
0x0000000000449815 : ret 0x8910
0x000000000048e6c6 : ret 0x8941
0x000000000045c2f1 : ret 0x8944
0x0000000000437b01 : ret 0x8948
0x0000000000408b32 : ret 0x8949
0x0000000000401835 : ret 0x894c
0x000000000040f8c3 : ret 0x894d
0x000000000046c62b : ret 0x894e
0x0000000000413610 : ret 0x8b01
0x000000000045efa3 : ret 0x8b05
0x00000000004ae96e : ret 0x8b36
0x00000000004445a2 : ret 0x8b41
0x0000000000462b1a : ret 0x8b44
0x00000000004055f9 : ret 0x8b48
0x000000000043d4a4 : ret 0x8b49
0x000000000046c5ae : ret 0x8b4a
0x0000000000402e35 : ret 0x8b4c
0x000000000044ddfb : ret 0x8d0f
0x0000000000406144 : ret 0x8d48
0x0000000000402e4e : ret 0x8d49
0x000000000040a6e5 : ret 0x8d4a
0x000000000043aeeb : ret 0x8d4c
0x0000000000447a67 : ret 0x8d89
0x000000000043d49b : ret 0x8e0f
0x00000000004102de : ret 0x8e74
0x000000000040166b : ret 0x900
0x0000000000417065 : ret 0x90c3
0x00000000004750e8 : ret 0x92e9
0x000000000045c32d : ret 0x93ba
0x00000000004345c7 : ret 0x93e8
0x0000000000462730 : ret 0x940f
0x000000000041406e : ret 0x948
0x0000000000459bf8 : ret 0x94c
0x00000000004761eb : ret 0x950f
0x00000000004702e9 : ret 0x9529
0x0000000000403466 : ret 0x953d
0x00000000004ad793 : ret 0x9576
0x0000000000436f81 : ret 0x970f
0x000000000040f56c : ret 0x9848
0x0000000000465a72 : ret 0x98e8
0x00000000004343af : ret 0x9be
0x000000000046f0b9 : ret 0x9d8b
0x0000000000477065 : ret 0x9e0f
0x00000000004be0c4 : ret 0xa03
0x0000000000411dfa : ret 0xa0e9
0x0000000000453f8c : ret 0xa1e9
0x0000000000483a8e : ret 0xa374
0x00000000004ad483 : ret 0xa514
0x000000000044c9c5 : ret 0xa5e8
0x000000000047f70a : ret 0xa77
0x0000000000413619 : ret 0xa7e
0x000000000048ddc1 : ret 0xa8
0x000000000045df02 : ret 0xa8e9
0x000000000046239d : ret 0xaa75
0x0000000000407c24 : ret 0xaba
0x00000000004ad907 : ret 0xac65
0x00000000004ae2c4 : ret 0xacfc
0x0000000000412b8c : ret 0xb48b
0x00000000004344b3 : ret 0xb5eb
0x00000000004023d9 : ret 0xb60f
0x000000000043fa25 : ret 0xb70f
0x0000000000479ffa : ret 0xb76
0x0000000000433b50 : ret 0xb8
0x000000000044cb26 : ret 0xb841
0x00000000004512be : ret 0xb848
0x0000000000408c59 : ret 0xb941
0x00000000004ad7ce : ret 0xb9b9
0x000000000040b04e : ret 0xba
0x0000000000444cc9 : ret 0xba41
0x000000000048ec76 : ret 0xbc80
0x000000000044efbb : ret 0xbe07
0x000000000044f054 : ret 0xbe48
0x00000000004ad524 : ret 0xbe57
0x00000000004154ff : ret 0xc
0x0000000000449950 : ret 0xc0
0x00000000004184e9 : ret 0xc000
0x00000000004013ae : ret 0xc031
0x0000000000408d33 : ret 0xc083
0x000000000041bbc0 : ret 0xc085
0x000000000043f1da : ret 0xc101
0x0000000000438c65 : ret 0xc141
0x0000000000400fc5 : ret 0xc148
0x000000000045cedb : ret 0xc149
0x000000000045c370 : ret 0xc229
0x0000000000460124 : ret 0xc283
0x00000000004257f4 : ret 0xc2b2
0x0000000000433271 : ret 0xc35b
0x0000000000434297 : ret 0xc3e8
0x00000000004a69a2 : ret 0xc4c3
0x00000000004ad0d8 : ret 0xc4ff
0x000000000044dbc5 : ret 0xc5e8
0x000000000040c365 : ret 0xc601
0x000000000042d410 : ret 0xc748
0x0000000000412de0 : ret 0xc789
0x000000000048078e : ret 0xc801
0x000000000041c3c9 : ret 0xc88
0x000000000040d7c0 : ret 0xc883
0x0000000000440731 : ret 0xc889
0x000000000045b40d : ret 0xc8e9
0x000000000048cbf1 : ret 0xc984
0x00000000004194c1 : ret 0xc9ff
0x000000000046a7f3 : ret 0xca29
0x0000000000416814 : ret 0xcb8
0x0000000000400563 : ret 0xcbeb
0x00000000004acb6a : ret 0xcca7
0x00000000004aec4d : ret 0xcd11
0x0000000000404a0f : ret 0xce80
0x00000000004379be : ret 0xd009
0x00000000004374b1 : ret 0xd029
0x000000000046a832 : ret 0xd089
0x0000000000476ff5 : ret 0xd138
0x0000000000474810 : ret 0xd189
0x0000000000403b1d : ret 0xd284
0x000000000047bfe0 : ret 0xd349
0x000000000047ab27 : ret 0xd3e8
0x0000000000410297 : ret 0xd575
0x000000000047704a : ret 0xd889
0x00000000004ae6e5 : ret 0xd8f
0x0000000000444831 : ret 0xd9e8
0x00000000004144f0 : ret 0xda29
0x0000000000437383 : ret 0xda75
0x0000000000436dc0 : ret 0xdae8
0x00000000004083a8 : ret 0xdaf7
0x00000000004ae7c6 : ret 0xdcd9
0x00000000004ad742 : ret 0xde5d
0x00000000004ac4d1 : ret 0xde9e
0x0000000000478b3e : ret 0xdf75
0x000000000044217a : ret 0xdf89
0x00000000004183a9 : ret 0xe000
0x0000000000430ec9 : ret 0xe074
0x0000000000413ada : ret 0xe083
0x00000000004b926b : ret 0xe0a
0x000000000046eb36 : ret 0xe181
0x0000000000447a26 : ret 0xe183
0x0000000000438762 : ret 0xe1eb
0x0000000000409f75 : ret 0xe274
0x00000000004069dc : ret 0xe281
0x0000000000432ed6 : ret 0xe283
0x00000000004ae8e6 : ret 0xe71f
0x000000000045f9a8 : ret 0xe74
0x000000000045f420 : ret 0xe75
0x0000000000438b21 : ret 0xe783
0x000000000046b0c1 : ret 0xe7e9
0x0000000000400ed4 : ret 0xe8c1
0x000000000040c59b : ret 0xe901
0x00000000004565bd : ret 0xe902
0x0000000000419556 : ret 0xe908
0x000000000041f1e6 : ret 0xe910
0x00000000004acc47 : ret 0xe970
0x0000000000477068 : ret 0xe9c1
0x00000000004331fa : ret 0xea81
0x0000000000447a1f : ret 0xeac0
0x0000000000400d79 : ret 0xeac1
0x0000000000456470 : ret 0xeb02
0x0000000000400ab6 : ret 0xeb04
0x00000000004709c9 : ret 0xeb08
0x0000000000418876 : ret 0xeb10
0x0000000000407ba2 : ret 0xeb75
0x00000000004af3f8 : ret 0xec2
0x000000000047aea9 : ret 0xec75
0x0000000000456384 : ret 0xee83
0x00000000004af09a : ret 0xef32
0x00000000004561b6 : ret 0xef83
0x0000000000438b15 : ret 0xefc1
0x00000000004a16c8 : ret 0xf
0x0000000000418269 : ret 0xf000
0x000000000040238f : ret 0xf01
0x000000000040cd13 : ret 0xf02
0x000000000047496c : ret 0xf039
0x00000000004129d9 : ret 0xf04
0x000000000046486d : ret 0xf08
0x0000000000417402 : ret 0xf10
0x000000000040a5e0 : ret 0xf189
0x000000000047a836 : ret 0xf201
0x000000000040a5cf : ret 0xf301
0x0000000000467b3b : ret 0xf304
0x000000000044c466 : ret 0xf3f
0x00000000004572d3 : ret 0xf40
0x0000000000407d8a : ret 0xf41
0x0000000000433557 : ret 0xf44
0x000000000043c59f : ret 0xf48
0x000000000044d7a0 : ret 0xf4a
0x00000000004b622e : ret 0xf607
0x00000000004b5bb6 : ret 0xf60d
0x000000000045e7ee : ret 0xf631
0x000000000043b354 : ret 0xf641
0x0000000000417209 : ret 0xf66
0x0000000000432db8 : ret 0xf685
0x000000000045c344 : ret 0xf741
0x00000000004079bf : ret 0xf748
0x0000000000418129 : ret 0xf800
0x000000000048136a : ret 0xf805
0x000000000048106a : ret 0xf808
0x00000000004ac3b0 : ret 0xf869
0x000000000045b269 : ret 0xf883
0x0000000000403d31 : ret 0xf889
0x0000000000496840 : ret 0xf945
0x00000000004ba72c : ret 0xf9cb
0x000000000047505a : ret 0xf9fe
0x000000000044c404 : ret 0xfac1
0x000000000045ea7a : ret 0xfb01
0x000000000048406a : ret 0xfb48
0x00000000004bd478 : ret 0xfb88
0x000000000044ff9a : ret 0xfbd4
0x0000000000417fe9 : ret 0xfc00
0x00000000004196b9 : ret 0xfc3
0x0000000000445eba : ret 0xfd66
0x000000000047172e : ret 0xfde9
0x0000000000402361 : ret 0xfdf
0x0000000000417ea9 : ret 0xfe00
0x000000000046ba49 : ret 0xfeb8
0x0000000000417d69 : ret 0xff00
0x000000000042a2a1 : ret 0xff2
0x00000000004241fa : ret 0xff3
0x00000000004007da : ret 0xff49
0x0000000000417c29 : ret 0xff80
0x00000000004758b3 : ret 0xffa5
0x0000000000472682 : ret 0xffb2
0x0000000000409f6e : ret 0xffb8
0x00000000004813c8 : ret 0xffbf
0x000000000040a4b2 : ret 0xffc0
0x00000000004802fc : ret 0xffc1
0x000000000040f6c5 : ret 0xffd0
0x0000000000444a7d : ret 0xffd8
0x0000000000455a0d : ret 0xffdc
0x00000000004179a9 : ret 0xffe0
0x000000000046888a : ret 0xffe4
0x0000000000482caa : ret 0xffe6
0x0000000000444a64 : ret 0xffe8
0x000000000046f512 : ret 0xffeb
0x0000000000402fb7 : ret 0xffed
0x0000000000407a83 : ret 0xffef
0x0000000000417869 : ret 0xfff0
0x000000000040457d : ret 0xfff1
0x000000000040437d : ret 0xfff3
0x00000000004138d1 : ret 0xfff4
0x00000000004b5a0d : ret 0xfff5
0x000000000048d6b4 : ret 0xfff7
0x0000000000417729 : ret 0xfff8
0x00000000004406a5 : ret 0xfff9
0x000000000045568b : ret 0xfffa
0x000000000044ba64 : ret 0xfffb
0x00000000004175e9 : ret 0xfffc
0x00000000004062ec : ret 0xfffd
0x0000000000401b1e : ret 0xfffe
0x0000000000414635 : ret 0xffff
0x0000000000407c7b : ret 1
0x000000000040aeb5 : ret 2
0x00000000004255b2 : ret 3
0x000000000041bed9 : ret 4
0x000000000047e668 : ret 5
0x00000000004a52c4 : ret 6
0x00000000004a54c4 : ret 7
0x000000000041bef5 : ret 8
0x0000000000402652 : ret 9
0x000000000040055e : retf -0x31c7 ; cmovge eax, edx ; jmp 0x400536
0x00000000004ba5d4 : retf -0x636 ; jmp qword ptr [rdx]
0x0000000000484fef : retf -0x7af1 ; call qword ptr [rsi]
0x00000000004b98b7 : retf -8 ; sbb al, 0xd ; leave ; clc ; jmp qword ptr [rdx]
0x00000000004b98ff : retf -8 ; sbb al, 0xd ; sub al, 0xc9 ; clc ; jmp qword ptr [rdx]
0x00000000004ba6e5 : retf ; stc ; jmp qword ptr [rdx]
0x00000000004ba6e4 : retfq ; stc ; jmp qword ptr [rdx]
0x0000000000432a95 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000040e8e7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000046a827 : rol bl, 1 ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000046a834 : rol bl, 1 ; mov edx, 1 ; mov eax, edx ; ret
0x000000000041bf6d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000046a82f : rol bl, 1 ; sub edx, eax ; mov eax, edx ; ret
0x00000000004241d2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000459952 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a4ec0 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000042471d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004122df : rol byte ptr [rax], 0 ; add dh, dh ; ret
0x0000000000444d00 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000422b42 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000459979 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x0000000000435780 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004702e3 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000473f1d : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x0000000000408947 : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x000000000045b126 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0x45b129 ; ret
0x000000000046badb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004374b6 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x000000000043df9f : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x00000000004054bb : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x0000000000496794 : rol byte ptr [rbx - 7], 0xff ; push rax ; stc ; jmp rax
0x000000000045a9f2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000048d6f9 : rol byte ptr [rbx], 0xeb ; ret
0x00000000004363e2 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004514af : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000040891a : rol byte ptr [rcx + 0x5c], 1 ; ret
0x000000000045a6fd : rol byte ptr [rcx + 0x5e], 1 ; ret
0x00000000004331f1 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000412b70 : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000045c340 : rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x0000000000441b21 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000045a9d2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000433077 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000044306a : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000469d41 : rol byte ptr [rcx], 0x89 ; ret 0x8348
0x00000000004642e5 : rol byte ptr [rcx], 0x89 ; ret 0x8b48
0x0000000000496740 : rol byte ptr [rcx], 1 ; stc ; jmp qword ptr [rax]
0x000000000049696c : rol byte ptr [rdi - 7], 0xff ; push rax ; stc ; jmp rax
0x000000000045aa32 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000045a9e2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004780c6 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000045aa22 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004a69a0 : rol cl, 0xc2 ; ret
0x0000000000467b36 : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000045c244 : rol cl, 1 ; clc ; add eax, 0x89d02944 ; ret
0x000000000045c42b : rol cl, 1 ; clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x000000000045a97c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000004be5b5 : rol dword ptr [rax], 0 ; pop rax ; pop rbx ; cld ; call qword ptr [rax]
0x00000000004be585 : rol dword ptr [rax], 0 ; test al, 0xa1 ; cld ; call qword ptr [rax]
0x0000000000451add : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x0000000000405541 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000043880d : rol ecx, -0x1f ; add ebx, dword ptr [rbx - 0x2d] ; loopne 0x43887a ; ret
0x00000000004b237c : ror al, 0xfd ; jmp rax
0x000000000041bde2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x41be29 ; add rax, rdi ; ret
0x000000000041977f : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000467519 : ror byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000045ee1f : ror byte ptr [rax + 0x39], 0xd6 ; ja 0x45ee37 ; ret
0x00000000004371a8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000004144c0 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000046c96f : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x000000000046c487 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000477062 : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x000000000043c2fc : ror byte ptr [rax + 0x39], cl ; ret
0x00000000004bd456 : ror byte ptr [rax + 0xd1cfffb], 0xfc ; xchg ebx, edi ; jmp qword ptr [rdx]
0x0000000000436b9e : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000004673e3 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000045abe2 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x0000000000422a1c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000041bdb2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000041977c : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000046da91 : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000044979c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000044980c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x000000000041bf65 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000400fcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x400fdb ; pop rbp ; ret
0x0000000000476995 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc270b2e3
0x0000000000476bb3 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000041bda2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000041bdd2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000041bdc2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000439145 : ror byte ptr [rax - 0x75], 0x74 ; sbb ah, byte ptr [rax] ; call rax
0x000000000040de7a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000040e936 : ror byte ptr [rax - 0x77], 0x4a ; or bl, dh ; ret
0x000000000040b495 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000045deb5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000453cef : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000044dbc2 : ror byte ptr [rax - 0x77], 1 ; ret 0xc5e8
0x00000000004069d9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000408944 : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x00000000004761e5 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040910f : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045ed40 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000413eb3 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000046b417 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000044e7a9 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000046804a : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x0000000000413bd6 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2ca83f5
0x000000000046072a : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043cba5 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000407650 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000475c98 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000045ec33 : ror byte ptr [rax - 0x7d], cl ; in al, dx ; jo 0x45ec35 ; ret 0x4840
0x000000000046411d : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043f68c : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000043e63d : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000469915 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000049187d : ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000480342 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000484054 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000045997f : ror byte ptr [rcx + 0x39], 1 ; ret
0x000000000048cdb2 : ror byte ptr [rcx + rcx*4 + 6], 1 ; ret
0x0000000000457d62 : ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x000000000040d7cf : ror byte ptr [rcx - 0x3b7cb7ed], 1 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444b4e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000476c98 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x0000000000408b5a : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000462064 : ror byte ptr [rcx - 0x77], cl ; ret
0x0000000000466531 : ror byte ptr [rcx - 0x7d], cl ; std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x0000000000479a6c : ror byte ptr [rdi + rcx + 0x44], cl ; ret
0x000000000041c6f9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000040fa54 : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x00000000004605a6 : ror byte ptr [rdi], 0x84 ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046a937 : ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000481bbf : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000469f4f : ror byte ptr [rdi], 0x84 ; test dword ptr [rax], 0x89480000 ; ret 0x2b49
0x000000000042d39a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042d3d6 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000491572 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000000004374ae : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004771c3 : ror byte ptr [rdi], 0x94 ; ret
0x000000000047727f : ror byte ptr [rdi], 0x94 ; ret 0x543a
0x00000000004771c8 : ror byte ptr [rdi], 0x94 ; ret 0x5c88
0x00000000004761e8 : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047480d : ror byte ptr [rdi], 0x94 ; ret 0xd189
0x0000000000400737 : ror byte ptr [rdi], 0x95 ; ret
0x000000000040a4a1 : ror byte ptr [rdi], 0x95 ; ret 0x60e9
0x000000000040a406 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x00000000004083a5 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000004702e6 : ror byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000004069ee : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x4069d8 ; ret
0x000000000045c431 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret
0x000000000045c2f4 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000473f20 : ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x000000000043708c : ror byte ptr [rdi], cl ; ret 0x66c3
0x000000000040f569 : ror byte ptr [rdi], cl ; ret 0x9848
0x0000000000477349 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000476ff2 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x00000000004ba570 : ror cl, 1 ; stc ; call qword ptr [rdx]
0x0000000000436afc : ror dword ptr [rax + 0xf], cl ; ret
0x0000000000477044 : ror dword ptr [rax + 1], cl ; ret 0x3948
0x0000000000458bce : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000440c24 : ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000043fa22 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x0000000000479b3b : ror dword ptr [rax - 0x77], cl ; ret
0x000000000040d31d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x40d317 ; ret
0x000000000045834d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x458347 ; ret
0x000000000046cc25 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000048297f : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000043c6fe : ror dword ptr [rcx + 0x7b808], 1 ; add byte ptr [rax], al ; jmp 0x43c6d3
0x000000000047c465 : ror dword ptr [rcx - 0x3f], cl ; sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x0000000000462337 : ror dword ptr [rcx - 0x77], 1 ; ret 0x85eb
0x000000000046207a : ror dword ptr [rcx - 0x7d], 1 ; ret
0x000000000046adf6 : ror dword ptr [rcx - 9], -0x2f ; jmp 0x46ae13
0x000000000046aea0 : ror dword ptr [rcx - 9], -0x2f ; jmp 0x46aebd
0x0000000000430ec7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000048de3d : ror dword ptr [rdi], -0x4a ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000447a19 : ror dword ptr [rdi], -0x4a ; or al, 0x89 ; ret 0xeac0
0x000000000047bfdd : ror dword ptr [rdi], -0x6b ; ret 0xd349
0x0000000000424f88 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425694 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425466 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x00000000004253e6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000425724 : ror dword ptr [rdi], -0x7b ; je 0x425734 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042521b : ror dword ptr [rdi], -0x7b ; jno 0x425230 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004252e3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424f60 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045c527 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000411ed6 : ror dword ptr [rdi], cl ; xchg dword ptr [rbx - 0x9fffffb], ebp ; ret
0x000000000040fd7b : ror dword ptr [rdx], 0x2b ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040d31c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x40d318 ; ret
0x000000000045834c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x458348 ; ret
0x0000000000453708 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x0000000000453a30 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000417005 : sahf ; add dword ptr [rax], eax ; ret
0x000000000048eabe : sahf ; idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000044cd83 : sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004215ee : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004acba5 : sahf ; ret 0x38ae
0x0000000000477067 : sahf ; ret 0xe9c1
0x0000000000496d29 : sahf ; stc ; call qword ptr [rax]
0x0000000000496d51 : sahf ; stc ; inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000496d49 : sahf ; stc ; inc eax ; sahf ; stc ; jmp rax
0x0000000000496d2d : sahf ; stc ; jmp qword ptr [rax]
0x0000000000496d4d : sahf ; stc ; jmp rax
0x00000000004b8025 : sahf ; std ; jmp qword ptr [rdx]
0x00000000004763ee : sal bh, 0xd8 ; ret
0x000000000043332d : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000418627 : sal bh, 1 ; ret 0x8000
0x00000000004184e7 : sal bh, 1 ; ret 0xc000
0x00000000004183a7 : sal bh, 1 ; ret 0xe000
0x0000000000418267 : sal bh, 1 ; ret 0xf000
0x0000000000418127 : sal bh, 1 ; ret 0xf800
0x0000000000417fe7 : sal bh, 1 ; ret 0xfc00
0x0000000000417ea7 : sal bh, 1 ; ret 0xfe00
0x0000000000417d67 : sal bh, 1 ; ret 0xff00
0x0000000000417c27 : sal bh, 1 ; ret 0xff80
0x0000000000417ae7 : sal bh, 1 ; ret 0xffc0
0x00000000004179a7 : sal bh, 1 ; ret 0xffe0
0x0000000000417867 : sal bh, 1 ; ret 0xfff0
0x0000000000417727 : sal bh, 1 ; ret 0xfff8
0x00000000004175e7 : sal bh, 1 ; ret 0xfffc
0x00000000004174a7 : sal bh, 1 ; ret 0xfffe
0x00000000004b7b61 : sal bh, cl ; call qword ptr [rdi]
0x000000000044e70c : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x00000000004b7b49 : sal bh, cl ; jmp qword ptr [rbx]
0x000000000044b26a : sal byte ptr [rax + 0x4a], 0 ; jmp rdx
0x0000000000479c50 : sal byte ptr [rax - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000041bd98 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000045f1e2 : sal byte ptr [rbp + 0x5f], 0x4c ; mov eax, ecx ; ret
0x00000000004914a3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000044d0b4 : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000491297 : sal byte ptr [rbp + 6], 0x5b ; ret
0x00000000004764d1 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047f70f : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000040e895 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000432c00 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000040d320 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042437b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000004069f3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000045b12b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004371d0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x0000000000459922 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000402bc1 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x000000000044b085 : sal byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x00000000004371a6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000045f476 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000446f30 : sal byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x00000000004196b3 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000419563 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000455c39 : sal byte ptr [rdx - 0x7cb70001], 0x7c ; ret 0xc0
0x0000000000419657 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x00000000004b7b60 : sal dil, cl ; call qword ptr [rdi]
0x0000000000496594 : sal dl, 1 ; clc ; push qword ptr [rax - 0xd] ; clc ; call qword ptr [rax]
0x000000000040e934 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx + 8], rcx ; ret
0x00000000004597d0 : sal dword ptr [rcx], 1 ; ret
0x0000000000467b34 : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000040de78 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000430f06 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040055c : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400538
0x0000000000425a09 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000491cf1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496449 : salc ; clc ; push rax ; xlatb ; clc ; call qword ptr [rax]
0x0000000000465106 : salc ; cld ; cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x000000000045ee22 : salc ; ja 0x45ee34 ; ret
0x0000000000414a12 : salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000043515c : sar ah, 1 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b9b8d : sar al, cl ; jmp qword ptr [rdx]
0x000000000045b32f : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000483ce3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004683e9 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000446f7a : sar bl, 0xff ; call qword ptr [rax]
0x000000000046510b : sar byte ptr [rax + 2], 0x5b ; ret
0x0000000000475bfc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000496b98 : sar byte ptr [rax], 1 ; stc ; inc dword ptr [rax + 0x38] ; stc ; call rax
0x000000000043875d : sar byte ptr [rcx], cl ; ret
0x0000000000468a14 : sar byte ptr [rdi + 0x4b0b6a], 0x83 ; ret
0x00000000004969b4 : sar byte ptr [rip + 0x3d50fff9], 1 ; stc ; call rax
0x00000000004360f6 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047809c : sar byte ptr [rsi + 2], 1 ; ret
0x00000000004ad53f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000046f884 : sar ch, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004baae1 : sar cl, 1 ; call rcx
0x00000000004966f8 : sar dh, 0xf8 ; call qword ptr [rax]
0x00000000004966ec : sar dl, 1 ; clc ; jmp qword ptr [rax]
0x000000000040277a : sar dword ptr [rdi + 0x6c20c0], cl ; call rbx
0x000000000046ba51 : sar eax, 0x10 ; ret
0x000000000046ba0a : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000046b98d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x00000000004b9b45 : sar eax, 1 ; jmp qword ptr [rdx]
0x0000000000400fce : sar eax, 1 ; jne 0x400fd9 ; pop rbp ; ret
0x00000000004593bc : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004785b4 : sar eax, 3 ; pop r15 ; ret
0x00000000004b1f21 : sar ebp, -1 ; mov esp, 0x4cfffdc2 ; ret
0x00000000004babe1 : sar ecx, 1 ; call rsp
0x00000000004ad2a3 : sar ecx, 1 ; jnp 0x4ad264 ; ret
0x00000000004bac49 : sar ecx, cl ; call rcx
0x00000000004739ff : sar edi, 1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004628df : sar edi, 1 ; inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x0000000000473bdd : sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000041bf67 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004593bb : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000046b98c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000400fcd : sar rax, 1 ; jne 0x400fda ; pop rbp ; ret
0x00000000004785b3 : sar rax, 3 ; pop r15 ; ret
0x000000000041bf66 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000439149 : sbb ah, byte ptr [rax] ; call rax
0x000000000046a550 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x000000000046a630 : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x00000000004bc49c : sbb al, 0xa0 ; add byte ptr [rax], al ; nop ; mov edx, dr1 ; call rdx
0x00000000004be39c : sbb al, 0xbf ; add byte ptr [rax], al ; add byte ptr [rdi - 4], dl ; call rbx
0x00000000004b5a9a : sbb al, 0xd ; add ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b2722 : sbb al, 0xd ; add bh, cl ; hlt ; jmp qword ptr [rdx]
0x00000000004b495a : sbb al, 0xd ; and al, 0xa1 ; cmc ; jmp qword ptr [rdx]
0x00000000004b36ba : sbb al, 0xd ; cdq ; push rax ; cmc ; jmp qword ptr [rdx]
0x00000000004b2b4a : sbb al, 0xd ; clc ; and esi, ebp ; jmp qword ptr [rdx]
0x00000000004ba822 : sbb al, 0xd ; cld ; retf ; stc ; jmp qword ptr [rdx]
0x00000000004bd45a : sbb al, 0xd ; cld ; xchg ebx, edi ; jmp qword ptr [rdx]
0x00000000004b357a : sbb al, 0xd ; cmc ; jmp qword ptr [rdx]
0x00000000004b868a : sbb al, 0xd ; cmp dword ptr [rcx], esp ; clc ; jmp qword ptr [rdx]
0x00000000004b47f2 : sbb al, 0xd ; cwde ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004b630a : sbb al, 0xd ; cwde ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000004ba662 : sbb al, 0xd ; fcmovne st(0), st(2) ; stc ; jmp qword ptr [rdx]
0x00000000004bb682 : sbb al, 0xd ; fcom qword ptr [rdx] ; cli ; jmp qword ptr [rdx]
0x00000000004b2842 : sbb al, 0xd ; fdivr st(5) ; hlt ; jmp qword ptr [rdx]
0x00000000004b3372 : sbb al, 0xd ; fisttp qword ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x00000000004ba242 : sbb al, 0xd ; frstor dword ptr [rsi - 7] ; jmp qword ptr [rdx]
0x00000000004b5f1a : sbb al, 0xd ; imul al ; cmc ; jmp qword ptr [rdx]
0x00000000004b558a : sbb al, 0xd ; in al, -0x55 ; cmc ; jmp qword ptr [rdx]
0x00000000004b56f2 : sbb al, 0xd ; in eax, -0x52 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5bba : sbb al, 0xd ; insb byte ptr [rdi], dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000004bd5f2 : sbb al, 0xd ; insb byte ptr [rdi], dx ; mov bl, bh ; jmp qword ptr [rdx]
0x00000000004b54fa : sbb al, 0xd ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x00000000004bba1a : sbb al, 0xd ; insb byte ptr [rdi], dx ; sub edi, edx ; jmp qword ptr [rdx]
0x00000000004b871a : sbb al, 0xd ; jae 0x4b8744 ; clc ; jmp qword ptr [rdx]
0x00000000004b9ff2 : sbb al, 0xd ; jae 0x4ba05f ; stc ; jmp qword ptr [rdx]
0x00000000004b2b02 : sbb al, 0xd ; jb 0x4b2b2e ; cmc ; jmp qword ptr [rdx]
0x00000000004bd3aa : sbb al, 0xd ; jb 0x4bd3bb ; sti ; jmp qword ptr [rdx]
0x00000000004b58ea : sbb al, 0xd ; je 0x4b58af ; cmc ; jmp qword ptr [rdx]
0x00000000004b85b2 : sbb al, 0xd ; jg 0x4b85db ; clc ; jmp qword ptr [rdx]
0x00000000004b5812 : sbb al, 0xd ; jl 0x4b57c9 ; cmc ; jmp qword ptr [rdx]
0x00000000004b39d2 : sbb al, 0xd ; jle 0x4b3a33 ; cmc ; jmp qword ptr [rdx]
0x00000000004ba332 : sbb al, 0xd ; jno 0x4ba2f6 ; stc ; jmp qword ptr [rdx]
0x00000000004b34ea : sbb al, 0xd ; jnp 0x4b3541 ; cmc ; jmp qword ptr [rdx]
0x00000000004b30ea : sbb al, 0xd ; jns 0x4b3138 ; cmc ; jmp qword ptr [rdx]
0x00000000004b615a : sbb al, 0xd ; jns 0x4b6151 ; cmc ; jmp qword ptr [rdx]
0x00000000004b471a : sbb al, 0xd ; jrcxz 0x4b46be ; cmc ; jmp qword ptr [rdx]
0x00000000004bd4ea : sbb al, 0xd ; jrcxz 0x4bd47a ; sti ; jmp qword ptr [rdx]
0x00000000004b3532 : sbb al, 0xd ; js 0x4b3589 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5b72 : sbb al, 0xd ; lahf ; fdivr st(5), st(0) ; jmp qword ptr [rdx]
0x00000000004b982a : sbb al, 0xd ; leave ; clc ; jmp qword ptr [rdx]
0x00000000004b9e82 : sbb al, 0xd ; leave ; stc ; jmp qword ptr [rdx]
0x00000000004ba19a : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rdx]
0x00000000004b5422 : sbb al, 0xd ; loope 0x4b540e ; std ; jmp qword ptr [rdx]
0x00000000004b62c2 : sbb al, 0xd ; loopne 0x4b62c5 ; cmc ; jmp qword ptr [rdx]
0x00000000004b9c1a : sbb al, 0xd ; mov ch, 0x21 ; stc ; jmp qword ptr [rdx]
0x00000000004ba37a : sbb al, 0xd ; mov ch, 0xbb ; stc ; jmp qword ptr [rdx]
0x00000000004bba62 : sbb al, 0xd ; mov ch, byte ptr [rbx] ; cli ; jmp qword ptr [rdx]
0x00000000004b573a : sbb al, 0xd ; mov cl, 0xae ; cmc ; jmp qword ptr [rdx]
0x00000000004bb5f2 : sbb al, 0xd ; mov dh, 0x12 ; cli ; jmp qword ptr [rdx]
0x00000000004b46d2 : sbb al, 0xd ; mov dl, 0x9b ; cmc ; jmp qword ptr [rdx]
0x00000000004b546a : sbb al, 0xd ; mov dl, 0xe3 ; std ; jmp qword ptr [rdx]
0x00000000004b6112 : sbb al, 0xd ; mov ebp, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b468a : sbb al, 0xd ; mov rsi, r13 ; jmp qword ptr [rdx]
0x00000000004b44da : sbb al, 0xd ; mov sil, r13b ; jmp qword ptr [rdx]
0x00000000004b332a : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b3812 : sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; push rcx ; cmc ; jmp qword ptr [rdx]
0x00000000004b5ae2 : sbb al, 0xd ; movsxd rax, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b5cda : sbb al, 0xd ; or ah, ah ; cmc ; jmp qword ptr [rdx]
0x00000000004b970a : sbb al, 0xd ; or al, 0xc6 ; clc ; jmp qword ptr [rdx]
0x00000000004b30a2 : sbb al, 0xd ; or al, byte ptr [rbp - 0xb] ; jmp qword ptr [rdx]
0x00000000004b61ea : sbb al, 0xd ; or al, dh ; cmc ; jmp qword ptr [rdx]
0x00000000004b3782 : sbb al, 0xd ; or dl, byte ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000004b9b8a : sbb al, 0xd ; or dl, dl ; clc ; jmp qword ptr [rdx]
0x00000000004b27fa : sbb al, 0xd ; or esi, edi ; hlt ; jmp qword ptr [rdx]
0x00000000004b2a02 : sbb al, 0xd ; or r13d, esi ; jmp qword ptr [rdx]
0x00000000004ba61a : sbb al, 0xd ; out -0x36, eax ; stc ; jmp qword ptr [rdx]
0x00000000004b5d6a : sbb al, 0xd ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004b597a : sbb al, 0xd ; out 0xc1, al ; cmc ; jmp qword ptr [rdx]
0x00000000004be382 : sbb al, 0xd ; outsb dx, byte ptr [rsi] ; pop rcx ; cld ; jmp qword ptr [rdx]
0x00000000004bbb32 : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; sub edi, edx ; jmp qword ptr [rdx]
0x00000000004b47aa : sbb al, 0xd ; pop rbx ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004b5a0a : sbb al, 0xd ; pop rcx ; ret 0xfff5
0x00000000004b9752 : sbb al, 0xd ; pop rsi ; clc ; jmp qword ptr [rdx]
0x00000000004b9bd2 : sbb al, 0xd ; pop rsp ; and ecx, edi ; jmp qword ptr [rdx]
0x00000000004b27b2 : sbb al, 0xd ; pop rsp ; std ; hlt ; jmp qword ptr [rdx]
0x00000000004b3672 : sbb al, 0xd ; push r8 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5c02 : sbb al, 0xd ; push rax ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000004b4492 : sbb al, 0xd ; push rax ; mov dh, ch ; jmp qword ptr [rdx]
0x00000000004b5e42 : sbb al, 0xd ; push rbx ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004b43ba : sbb al, 0xd ; push rcx ; xchg ch, dh ; jmp qword ptr [rdx]
0x00000000004b2eca : sbb al, 0xd ; push rdx ; cmp al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004ba72a : sbb al, 0xd ; ret 0xf9cb
0x00000000004ba5d2 : sbb al, 0xd ; retf -0x636 ; jmp qword ptr [rdx]
0x00000000004ba6e2 : sbb al, 0xd ; retfq ; stc ; jmp qword ptr [rdx]
0x00000000004be33a : sbb al, 0xd ; sbb dword ptr [rcx - 4], ebx ; jmp qword ptr [rdx]
0x00000000004b37ca : sbb al, 0xd ; sbb edx, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000004b585a : sbb al, 0xd ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b6232 : sbb al, 0xd ; scasd eax, dword ptr [rdi] ; cmc ; cmc ; jmp qword ptr [rdx]
0x00000000004b57ca : sbb al, 0xd ; scasd eax, dword ptr [rdi] ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b9faa : sbb al, 0xd ; stc ; jmp qword ptr [rdx]
0x00000000004b63e2 : sbb al, 0xd ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004b5c92 : sbb al, 0xd ; std ; jrcxz 0x4b5c91 ; jmp qword ptr [rdx]
0x00000000004b3702 : sbb al, 0xd ; stosd dword ptr [rdi], eax ; push rax ; cmc ; jmp qword ptr [rdx]
0x00000000004b9eca : sbb al, 0xd ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rdx]
0x00000000004b5a52 : sbb al, 0xd ; sub ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b9902 : sbb al, 0xd ; sub al, 0xc9 ; clc ; jmp qword ptr [rdx]
0x00000000004b5d22 : sbb al, 0xd ; sub al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x00000000004b3d9a : sbb al, 0xd ; sub dword ptr [rbx - 0xb], ebp ; jmp qword ptr [rdx]
0x00000000004b5c4a : sbb al, 0xd ; sub esp, esp ; cmc ; jmp qword ptr [rdx]
0x00000000004b8a4a : sbb al, 0xd ; xor byte ptr [rax + rdi*8], ah ; jmp qword ptr [rdx]
0x00000000004ba2ea : sbb al, 0xd ; xor byte ptr [rcx - 7], ch ; jmp qword ptr [rdx]
0x00000000004b5faa : sbb al, 0xd ; xor ch, cl ; cmc ; jmp qword ptr [rdx]
0x00000000004b3a1a : sbb al, 0xd ; xor dword ptr [rbx - 0xb], ebx ; jmp qword ptr [rdx]
0x00000000004491af : sbb al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000045e9b0 : sbb al, 2 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000479b32 : sbb al, byte ptr [rbx + 0xa3c0fe0] ; jne 0x479aed ; call rbx
0x00000000004965d9 : sbb bh, cl ; call qword ptr [rax]
0x00000000004966bd : sbb bh, cl ; jmp qword ptr [rax]
0x00000000004ac025 : sbb bl, byte ptr [rsi] ; ret
0x000000000043d146 : sbb bl, ch ; ret 0x1f0f
0x00000000004341cb : sbb bl, dh ; ret
0x00000000004228eb : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000491f7a : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004761e2 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000048dfff : sbb byte ptr [rax + 0xf4c10fa], al ; ret
0x0000000000439627 : sbb byte ptr [rax - 0x77], cl ; cwde ; call rcx
0x000000000040fbc6 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004456d8 : sbb byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret
0x000000000040d381 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000450591 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x0000000000414ab7 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000040b046 : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0xba
0x0000000000491f7b : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042249e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000042249d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000436ce1 : sbb byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040ddda : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045ad47 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a1eeb5
0x000000000045aa70 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000040f34a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040d7d5 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000440d60 : sbb byte ptr [rbx - 0x14d3dbbc], cl ; ret 0x8948
0x000000000043fc28 : sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x000000000040e8d7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000414a16 : sbb byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x0000000000477923 : sbb byte ptr [rcx + 0x29], cl ; ret 0x6348
0x00000000004653b6 : sbb byte ptr [rcx + 0x39], cl ; ret
0x000000000047f8d9 : sbb byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000045922b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000435583 : sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000004b3f88 : sbb byte ptr [rcx - 0xb], dh ; call qword ptr [rax]
0x00000000004761e3 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000046411b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046b69e : sbb byte ptr [rdi + 0x6c11e0], bh ; call rax
0x00000000004148de : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000413537 : sbb byte ptr [rdx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000435d5c : sbb byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004bccd8 : sbb ch, ah ; cli ; jmp qword ptr [rdx]
0x000000000048f2d9 : sbb ch, al ; xor dword ptr [rip - 0x7cb70007], ebp ; ret
0x00000000004b448e : sbb ch, byte ptr [rax + 0xd1cfff5] ; push rax ; mov dh, ch ; jmp qword ptr [rdx]
0x0000000000442fdc : sbb ch, byte ptr [rax + rax + 0x48] ; test eax, eax ; je 0x442fee ; call rax
0x00000000004966b9 : sbb cl, bh ; call qword ptr [rax + 0x20fff91a]
0x00000000004965d5 : sbb cl, bh ; call qword ptr [rax]
0x0000000000496699 : sbb cl, bh ; call rax
0x000000000041921d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041fd3d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418e0d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000418919 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000419129 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042198a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004211aa : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042159a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420dba : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042089d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042007d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000418b9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041f85d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000418edd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004191f9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420f59 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004192c9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004203bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fb9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041f37d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042055d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000041907d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041886d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000418c6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042144a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c6a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421d7a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041914d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000041893d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041f6bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004189df : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418d3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000041f7f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004204f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420013 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042134b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000421c7b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418fad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000420833 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fb33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041f653 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420353 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042149b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420cbb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418a03 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004406a3 : sbb cl, ch ; ret 0xfff9
0x00000000004b6c28 : sbb dh, ah ; cmc ; call rdx
0x000000000045ebd1 : sbb dh, bl ; ret
0x00000000004b23a4 : sbb dl, 0xfd ; call qword ptr [rax]
0x0000000000486db8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000486d41 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000486db9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000409fd6 : sbb dword ptr [rax], eax ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000004ae8dd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004be33c : sbb dword ptr [rcx - 4], ebx ; jmp qword ptr [rdx]
0x00000000004328d7 : sbb eax, -1 ; ret
0x00000000004375c5 : sbb eax, 0 ; leave ; ret
0x00000000004b407d : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x75], ah ; cmc ; jmp rax
0x0000000000486b61 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000486bd9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b3f85 : sbb eax, dword ptr [rax] ; add byte ptr [rax], bl ; jno 0x4b3f86 ; call qword ptr [rax]
0x000000000046bada : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004328d5 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000046b621 : sbb ebp, dword ptr [rax + rax + 0x48] ; add esp, 0x58 ; ret
0x00000000004762a7 : sbb ebp, dword ptr [rax + rax + 0x48] ; add esp, 8 ; ret
0x00000000004b8a46 : sbb ebp, dword ptr [rip + 0xd1cfff8] ; xor byte ptr [rax + rdi*8], ah ; jmp qword ptr [rdx]
0x0000000000410921 : sbb ebx, dword ptr [rsi] ; sub eax, dword ptr [rax] ; test rdx, rdx ; je 0x410935 ; call rdx
0x0000000000450660 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000048fb21 : sbb ecx, ecx ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x0000000000496639 : sbb ecx, edi ; call qword ptr [rax + 0x20fff91b]
0x0000000000496679 : sbb ecx, edi ; call qword ptr [rax]
0x00000000004b88f9 : sbb edi, eax ; call rdx
0x00000000004932b7 : sbb edi, eax ; push rbx ; ret
0x000000000049663d : sbb edi, ecx ; jmp qword ptr [rax]
0x000000000049665d : sbb edi, ecx ; jmp rax
0x00000000004040b1 : sbb edx, dword ptr [rbp + 1] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b37cc : sbb edx, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000004219de : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004b56f5 : scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004679da : scasb al, byte ptr [rdi] ; mov eax, dword ptr [rdx] ; ret
0x0000000000463bde : scasb al, byte ptr [rdi] ; ret
0x00000000004628de : scasb al, byte ptr [rdi] ; sar edi, 1 ; inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x0000000000421add : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045b4ff : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x00000000004b6234 : scasd eax, dword ptr [rdi] ; cmc ; cmc ; jmp qword ptr [rdx]
0x000000000045b7fd : scasd eax, dword ptr [rdi] ; jl 0x45b82c ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc031
0x000000000048cee0 : scasd eax, dword ptr [rdi] ; mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000401568 : scasd eax, dword ptr [rdi] ; ret
0x000000000045c2f6 : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000433084 : scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000004b57cc : scasd eax, dword ptr [rdi] ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000047bbeb : scasd eax, dword ptr [rdi] ; sub al, 0xd5 ; loopne 0x47bc14 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x000000000047e94b : scasd eax, dword ptr [rdi] ; sub al, 0xd5 ; loopne 0x47e974 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x000000000048128b : scasd eax, dword ptr [rdi] ; sub al, 0xd5 ; loopne 0x4812b4 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x00000000004371ac : setae al ; ret
0x0000000000438760 : setne dl ; jmp 0x438748
0x000000000045e336 : shl byte ptr [rcx + rcx*4 + 0x32], 0x5b ; ret
0x0000000000496254 : shl byte ptr [rcx], 0xf8 ; inc dword ptr [rax] ; and edi, eax ; jmp rax
0x00000000004679fc : shl byte ptr [rip - 0x3b7cb800], 8 ; ret
0x0000000000432b1f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000430ec3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000417205 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042591b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000425932 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000459b96 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000459ba7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000425811 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045b0fd : shl byte ptr [rsi - 0x70], 0xc3 ; mov eax, 1 ; ret
0x0000000000463463 : shl byte ptr [rsi - 0x7d], cl ; jge 0x463476 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x00000000004b6b60 : shl dl, 1 ; cmc ; jmp rbx
0x00000000004a2500 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000476258 : shl dword ptr [rax + rax], cl ; call rax
0x00000000004ad428 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000444998 : shl dword ptr [rdi], 1 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000425896 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043297b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000459b92 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042594d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000425936 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042591f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004243db : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004258b1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041bbbc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000425771 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000468552 : shl eax, 4 ; mov rdi, rax ; call 0x4147b8
0x0000000000438812 : shl eax, cl ; pop rbp ; ret
0x000000000043880e : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000046c06c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046bff7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046bfc6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048cdae : shl edx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x00000000004829db : shl esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000046c06b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046bff6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046bfc5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000468551 : shl rax, 4 ; mov rdi, rax ; call 0x4147b9
0x000000000048cdad : shl rdx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x000000000047b565 : shr al, 0xf5 ; ret 0xfffe
0x00000000004bb170 : shr al, 0xf9 ; jmp rdx
0x0000000000401e2e : shr al, 1 ; mov rdx, rax ; jmp 0x401e49
0x0000000000401e2d : shr al, 1 ; mov rdx, rax ; jmp 0x401e4a
0x000000000046abb2 : shr bl, cl ; or al, 0x83 ; ret
0x000000000044b4c6 : shr byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x000000000042437f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000441c08 : shr byte ptr [rcx], cl ; ret
0x000000000041bf6b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000044b2b8 : shr byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x0000000000413615 : shr byte ptr [rdx], cl ; add byte ptr [rcx], bh ; ret 0xa7e
0x000000000044b3a2 : shr byte ptr [rsi + 0x4a], 0 ; jmp rdx
0x0000000000452835 : shr dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000046b9c0 : shr eax, 0x3f ; ret
0x000000000043327a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000433259 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000043aa9c : shr ebx, cl ; ret
0x000000000046c17c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046c101 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046c0d0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004366cc : shr ecx, cl ; ret
0x00000000004594c3 : shr edx, 2 ; sub eax, edx ; ret
0x000000000046c17b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046c100 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046c0cf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000046b9bf : shr rax, 0x3f ; ret
0x00000000004594c2 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000432fa6 : sldt word ptr [rax] ; pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x00000000004a16c5 : sldt word ptr [rax] ; ret 0xf
0x00000000004966ba : stc ; call qword ptr [rax + 0x20fff91a]
0x000000000049663a : stc ; call qword ptr [rax + 0x20fff91b]
0x000000000049697e : stc ; call qword ptr [rax + 0x20fff945]
0x0000000000496766 : stc ; call qword ptr [rax + 0x20fff948]
0x000000000049671a : stc ; call qword ptr [rax - 0x2f0006f6]
0x0000000000496d0e : stc ; call qword ptr [rax - 0x4f000666]
0x00000000004965d2 : stc ; call qword ptr [rax]
0x0000000000496852 : stc ; call qword ptr [rdx + 0x22fff943]
0x0000000000496832 : stc ; call qword ptr [rdx]
0x00000000004967ae : stc ; call qword ptr [rsi + 0x26fff947]
0x00000000004967ce : stc ; call qword ptr [rsi]
0x0000000000496d16 : stc ; call rax
0x00000000004baae2 : stc ; call rcx
0x00000000004ba092 : stc ; call rdi
0x0000000000496822 : stc ; call rdx
0x00000000004967be : stc ; call rsi
0x00000000004968ea : stc ; call rsp
0x00000000004966e9 : stc ; clc ; call rax
0x00000000004b627d : stc ; cmc ; jmp qword ptr [rdx]
0x0000000000475f2c : stc ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000048f2dd : stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b2725 : stc ; hlt ; jmp qword ptr [rdx]
0x0000000000496602 : stc ; inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x0000000000496686 : stc ; inc dword ptr [rax + 0x11] ; stc ; jmp qword ptr [rax]
0x00000000004965e6 : stc ; inc dword ptr [rax + 0x12] ; stc ; jmp qword ptr [rax]
0x00000000004965ca : stc ; inc dword ptr [rax + 0x14] ; stc ; jmp qword ptr [rax]
0x000000000049666e : stc ; inc dword ptr [rax + 0x15] ; stc ; call qword ptr [rax]
0x000000000049699a : stc ; inc dword ptr [rax + 0x20fff942] ; cmp cl, bh ; jmp rax
0x0000000000496b9a : stc ; inc dword ptr [rax + 0x38] ; stc ; call rax
0x00000000004965fe : stc ; inc dword ptr [rax + 0x40fff90e] ; adc cl, bh ; jmp qword ptr [rax]
0x000000000049698a : stc ; inc dword ptr [rax + 0x44] ; stc ; call rax
0x0000000000496772 : stc ; inc dword ptr [rax + 0x47] ; stc ; call rax
0x0000000000496716 : stc ; inc dword ptr [rax + 9] ; stc ; call qword ptr [rax - 0x2f0006f6]
0x00000000004968e6 : stc ; inc dword ptr [rax + rcx*2 - 7] ; call rsp
0x000000000049660a : stc ; inc dword ptr [rax] ; adc al, 0xf9 ; jmp rax
0x000000000049668e : stc ; inc dword ptr [rax] ; adc eax, 0x16d0fff9 ; stc ; call rax
0x0000000000496cce : stc ; inc dword ptr [rax] ; cdq ; stc ; call qword ptr [rax]
0x0000000000496d52 : stc ; inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000496d26 : stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x000000000049697a : stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff945]
0x0000000000496762 : stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff948]
0x0000000000496b0e : stc ; inc dword ptr [rdx + rdi] ; stc ; push qword ptr [rcx + rdi - 7] ; jmp rsp
0x000000000049684e : stc ; inc dword ptr [rdx] ; stc ; call qword ptr [rdx + 0x22fff943]
0x00000000004967ba : stc ; inc dword ptr [rsi + 0x46] ; stc ; call rsi
0x00000000004967aa : stc ; inc dword ptr [rsi] ; stc ; call qword ptr [rsi + 0x26fff947]
0x0000000000496cbe : stc ; inc eax ; cwde ; stc ; call rax
0x0000000000496d6e : stc ; inc eax ; lahf ; stc ; jmp rax
0x0000000000496d4a : stc ; inc eax ; sahf ; stc ; jmp rax
0x000000000040fa83 : stc ; je 0x40f8c5 ; ret
0x0000000000420a92 : stc ; je 0x420a5e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000488842 : stc ; je 0x48880e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004969da : stc ; jmp qword ptr [rax + 0x16fff938]
0x0000000000496d8a : stc ; jmp qword ptr [rax - 0x3f000660]
0x00000000004965ce : stc ; jmp qword ptr [rax]
0x0000000000496a4a : stc ; jmp qword ptr [rdx + 0x22fff93a]
0x0000000000496a42 : stc ; jmp qword ptr [rdx + 0x22fff93b]
0x0000000000496a3a : stc ; jmp qword ptr [rdx + 0x22fff93c]
0x0000000000496a32 : stc ; jmp qword ptr [rdx + 0x22fff93d]
0x0000000000496a2a : stc ; jmp qword ptr [rdx + 0x22fff93e]
0x0000000000496856 : stc ; jmp qword ptr [rdx]
0x00000000004967b2 : stc ; jmp qword ptr [rsi]
0x0000000000496d92 : stc ; jmp rax
0x00000000004baa72 : stc ; jmp rbx
0x000000000048ce59 : stc ; jmp rcx
0x0000000000496846 : stc ; jmp rdx
0x00000000004967a2 : stc ; jmp rsi
0x000000000049690e : stc ; jmp rsp
0x00000000004ad2a4 : stc ; jnp 0x4ad263 ; ret
0x00000000004756eb : stc ; mov al, 0xff ; call qword ptr [rax + 0x8c28348]
0x00000000004281d8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004375ce : stc ; nop ; xor eax, eax ; leave ; ret
0x000000000046bcfe : stc ; pop r15 ; ret
0x0000000000496986 : stc ; push qword ptr [rax + 0x40fff944] ; stc ; call rax
0x000000000049676e : stc ; push qword ptr [rax + 0x40fff947] ; stc ; call rax
0x00000000004968e2 : stc ; push qword ptr [rax + rcx*2 + 0x4844fff9] ; stc ; call rsp
0x0000000000496cba : stc ; push qword ptr [rax - 0x3f000668] ; cwde ; stc ; call rax
0x00000000004969d6 : stc ; push qword ptr [rax] ; cmp ecx, edi ; jmp qword ptr [rax + 0x16fff938]
0x0000000000496b12 : stc ; push qword ptr [rcx + rdi - 7] ; jmp rsp
0x000000000049679e : stc ; push qword ptr [rsi + 0x42] ; stc ; jmp rsi
0x00000000004967b6 : stc ; push qword ptr [rsi + 0x46fff946] ; stc ; call rsi
0x00000000004966a6 : stc ; push rax ; adc cl, bh ; call rax
0x0000000000496626 : stc ; push rax ; adc ecx, edi ; call rax
0x0000000000496cfa : stc ; push rax ; cdq ; stc ; call qword ptr [rax]
0x0000000000496cca : stc ; push rax ; cwde ; stc ; inc dword ptr [rax] ; cdq ; stc ; call qword ptr [rax]
0x0000000000496d22 : stc ; push rax ; popfq ; stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x0000000000466534 : std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000004b23a6 : std ; call qword ptr [rax]
0x00000000004b1f3e : std ; call qword ptr [rbx + rax*8 - 0x3c830003]
0x00000000004b216e : std ; call qword ptr [rbx + rax*8 - 3]
0x00000000004bf20a : std ; call qword ptr [rbx]
0x00000000004b1e1e : std ; call rax
0x00000000004bcdd2 : std ; call rcx
0x00000000004b2a9a : std ; call rdi
0x00000000004b8752 : std ; call rsp
0x00000000004b63e5 : std ; cmc ; jmp qword ptr [rdx]
0x00000000004350bc : std ; dec dword ptr [rax - 0x75] ; jge 0x4350c8 ; call rbx
0x000000000043536f : std ; dec dword ptr [rax - 0x75] ; jge 0x43537b ; call rbx
0x00000000004460b2 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b1f32 : std ; dec dword ptr [rbx + rax*8 - 3] ; inc esp ; ret
0x00000000004b1dda : std ; dec dword ptr [rbx - 0x4e] ; std ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x0000000000434f7a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043537d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000434f87 : std ; dec dword ptr [rcx - 0x75] ; jge 0x434f93 ; call rbx
0x00000000004350ae : std ; dec dword ptr [rcx - 0x75] ; jge 0x4350ba ; call rbx
0x00000000004351f1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4351fd ; call rbx
0x0000000000435361 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43536d ; call rbx
0x00000000004b1dde : std ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x00000000004b27b5 : std ; hlt ; jmp qword ptr [rdx]
0x00000000004b237a : std ; inc eax ; enter -3, -0x20 ; fscale ; jmp qword ptr [rax]
0x00000000004b1f36 : std ; inc esp ; ret
0x000000000046b1ae : std ; jbe 0x46b1bb ; ret
0x00000000004b1df2 : std ; jmp qword ptr [rax]
0x00000000004bce3a : std ; jmp qword ptr [rdi]
0x00000000004b5426 : std ; jmp qword ptr [rdx]
0x00000000004b237e : std ; jmp rax
0x00000000004b1e16 : std ; jmp rsp
0x00000000004b5c94 : std ; jrcxz 0x4b5c8f ; jmp qword ptr [rdx]
0x00000000004279fb : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004433b2 : std ; or eax, 0x83489074 ; ret
0x00000000004b23aa : std ; push qword ptr [rax - 0x26] ; std ; jmp rax
0x0000000000437b5f : std ; ret
0x00000000004350bb : std ; std ; dec dword ptr [rax - 0x75] ; jge 0x4350c9 ; call rbx
0x00000000004350a0 : std ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004350ad : std ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4350bb ; call rbx
0x0000000000415ec1 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004160a4 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000490621 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000047c468 : sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000004bd92a : sti ; call qword ptr [rax]
0x00000000004bddea : sti ; call qword ptr [rdx]
0x000000000049672d : sti ; clc ; call qword ptr [rax - 0x1f000704]
0x00000000004b630d : sti ; cmc ; jmp qword ptr [rdx]
0x000000000045e9ba : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000045e97b : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000040d81b : sti ; je 0x40d82f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bd366 : sti ; jmp qword ptr [rdx]
0x0000000000427dd8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004ad42a : sti ; ret
0x00000000004813c7 : sti ; ret 0xffbf
0x0000000000435284 : sti ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000491295 : sti ; test eax, eax ; jne 0x4912a6 ; pop rbx ; ret
0x00000000004443d7 : sti ; test rax, rax ; je 0x4443e5 ; call rax
0x00000000004ad904 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004b54fd : stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x000000000047fde2 : stosb byte ptr [rdi], al ; ret
0x0000000000479b39 : stosd dword ptr [rdi], eax ; call rbx
0x00000000004b558d : stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rdx]
0x00000000004148d9 : stosd dword ptr [rdi], eax ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x000000000045d761 : stosd dword ptr [rdi], eax ; pop rbp ; add byte ptr es:[rcx + 0x29], cl ; ret
0x00000000004b3704 : stosd dword ptr [rdi], eax ; push rax ; cmc ; jmp qword ptr [rdx]
0x00000000004aea0c : stosd dword ptr [rdi], eax ; ret
0x00000000004b9ecc : stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rdx]
0x00000000004aedf1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004b5a54 : sub ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b5105 : sub al, 0 ; add byte ptr [rax - 0x65], bh ; cmc ; jmp qword ptr [rax]
0x00000000004be6c8 : sub al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000401018 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400e0f : sub al, 0 ; pop r12 ; ret
0x0000000000450773 : sub al, 0x27 ; add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004ba3ac : sub al, 0x7f ; add byte ptr [rax], al ; mov al, 0x65 ; stc ; call rdx
0x00000000004377a1 : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000424f63 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b9904 : sub al, 0xc9 ; clc ; jmp qword ptr [rdx]
0x00000000004b31ac : sub al, 0xd ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xb], al ; call qword ptr [rdx]
0x000000000047bbec : sub al, 0xd5 ; loopne 0x47bc13 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x000000000047e94c : sub al, 0xd5 ; loopne 0x47e973 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x000000000048128c : sub al, 0xd5 ; loopne 0x4812b3 ; add byte ptr [r8 + 1], cl ; ret 0x8b48
0x00000000004b5d24 : sub al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x0000000000440d64 : sub al, 0xeb ; ret 0x8948
0x0000000000496201 : sub al, 0xf8 ; inc dword ptr [rax + 0x2d] ; clc ; call qword ptr [rax]
0x00000000004bb3a8 : sub al, bh ; stc ; call rax
0x000000000041479c : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415861 : sub al, byte ptr [rax] ; test rax, rax ; je 0x415871 ; call rax
0x000000000046de7a : sub al, byte ptr [rbx - 0x1df43] ; call qword ptr [rax]
0x00000000004135d8 : sub al, ch ; ret 0x217
0x00000000004961f5 : sub bh, al ; call rax
0x0000000000479ed3 : sub byte ptr [rax + 0x39], cl ; ret
0x000000000046ab7a : sub byte ptr [rax + 0x63], cl ; ret
0x000000000043389a : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000045ac96 : sub byte ptr [rax - 0x73], cl ; je 0x45acc5 ; call rbx
0x00000000004138cb : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff4
0x00000000004b4d05 : sub byte ptr [rax], al ; add byte ptr [rax - 0x6f], ch ; cmc ; call qword ptr [rcx]
0x00000000004b4cd5 : sub byte ptr [rax], al ; add byte ptr [rax - 0x70], bh ; cmc ; call qword ptr [rdi]
0x00000000004343c9 : sub byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004370dd : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043742f : sub byte ptr [rax], al ; cmp rdx, rax ; jne 0x437418 ; ret
0x000000000043874a : sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004399c5 : sub byte ptr [rax], al ; ret
0x0000000000438724 : sub byte ptr [rax], al ; test eax, eax ; je 0x438736 ; ret
0x0000000000434d45 : sub byte ptr [rax], al ; test rax, rax ; je 0x434d56 ; ret
0x000000000040696b : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000409f5d : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000045c711 : sub byte ptr [rbx + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000438703 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000438702 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000412a02 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004154b2 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000046baa5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000004627a0 : sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000457bc7 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004763eb : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000455685 : sub byte ptr [rdx + rcx*2], ch ; call 0x401936
0x00000000004b63de : sub byte ptr [rsi], al ; idiv bh ; sbb al, 0xd ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004b2b68 : sub byte ptr [rsi], bl ; cmc ; call qword ptr [rax]
0x00000000004b2c79 : sub ch, dh ; call qword ptr [rcx]
0x00000000004773ee : sub cl, al ; call 0x49099d19
0x000000000047790d : sub cl, al ; call 0x4909a238
0x00000000004750e2 : sub cl, bh ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x00000000004609d5 : sub dh, dh ; ret 0xf04
0x000000000045e7e9 : sub dword ptr [rax - 0x77], ecx ; loope 0x45e77c ; ret 0xf631
0x00000000004b3d9c : sub dword ptr [rbx - 0xb], ebp ; jmp qword ptr [rdx]
0x0000000000426027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42603d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42618d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004262c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4262dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42642d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42657d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004266b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4266cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42681d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42696d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426d47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426d5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426e97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426ead ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426fe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426ffd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427137 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42714d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427287 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42729d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000425f83 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000425f7f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042602d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000425746 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000496205 : sub eax, 0x2e10fff8 ; clc ; jmp rax
0x0000000000412d02 : sub eax, 0x448d48fe ; ret
0x000000000048f2dc : sub eax, 0x8348fff9 ; ret
0x00000000004b5265 : sub eax, 0xa1f80000 ; cmc ; call qword ptr [rsi]
0x000000000047ec05 : sub eax, 0xc7480003 ; ret 0xffc0
0x00000000004b8a47 : sub eax, 0xd1cfff8 ; xor byte ptr [rax + rdi*8], ah ; jmp qword ptr [rdx]
0x0000000000442984 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000432d54 : sub eax, 1 ; ret
0x000000000046b866 : sub eax, dword ptr [0] ; ret
0x000000000040ec99 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ec34 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b3ac7], 1 ; ret
0x000000000040f78d : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040ca55 : sub eax, dword ptr [rax] ; jne 0x40ecc4 ; ret
0x000000000040ec70 : sub eax, dword ptr [rax] ; jne 0x40eeed ; ret
0x0000000000410228 : sub eax, dword ptr [rax] ; jne 0x4169b3 ; ret
0x000000000040ebb5 : sub eax, dword ptr [rax] ; ret
0x0000000000410923 : sub eax, dword ptr [rax] ; test rdx, rdx ; je 0x410933 ; call rdx
0x00000000004016fe : sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000000000401b7f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048c673 : sub eax, dword ptr [rcx + r8*4] ; je 0x48c657 ; ret
0x000000000048c674 : sub eax, dword ptr [rcx + rax*4] ; je 0x48c656 ; ret
0x000000000040f67e : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000004333fc : sub eax, dword ptr [rdx + rcx*4] ; je 0x4333e6 ; ret
0x000000000040e8b3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000046d2a1 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000040dbe1 : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x000000000047674b : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045ad4a : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000040e329 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000041868c : sub eax, ecx ; ret
0x00000000004961f1 : sub eax, edi ; inc dword ptr [rax] ; sub bh, al ; call rax
0x0000000000419781 : sub eax, edi ; ret
0x0000000000464ad9 : sub eax, edx ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040e8db : sub eax, edx ; ret
0x000000000046ba4f : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000046b9bd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000457d7a : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000458ede : sub eax, esi ; pop r14 ; pop r15 ; ret
0x000000000040b4e9 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004ad69e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004ac135 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004112f7 : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000415ec4 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000043880c : sub ecx, eax ; shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x00000000004bba1d : sub edi, edx ; jmp qword ptr [rdx]
0x000000000040e8e0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040e8d5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000041bde4 : sub edx, eax ; jbe 0x41be27 ; add rax, rdi ; ret
0x000000000041bdf4 : sub edx, eax ; jbe 0x41be29 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041be04 : sub edx, eax ; jbe 0x41be29 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041be14 : sub edx, eax ; jbe 0x41be29 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000046a831 : sub edx, eax ; mov eax, edx ; ret
0x000000000046a7f4 : sub edx, ecx ; mov eax, edx ; ret
0x000000000046ba0d : sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000040adc2 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000047e301 : sub esi, dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000040055b : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400539
0x000000000045aa6e : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004938b9 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004084d5 : sub esp, 8 ; call 0x4147b5
0x0000000000464f69 : sub esp, 8 ; call qword ptr [rip + 0x25c2c6]
0x00000000004b48c6 : sub esp, dword ptr [rbp + rsi*8 - 0x2ef2e301] ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004b5c4c : sub esp, esp ; cmc ; jmp qword ptr [rdx]
0x000000000040e328 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000432d53 : sub rax, 1 ; ret
0x000000000046b865 : sub rax, qword ptr [0] ; ret
0x000000000040f67d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000046b864 : sub rax, qword ptr fs:[0] ; ret
0x000000000040b4e8 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dbe0 : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000457d79 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000458edd : sub rax, r14 ; pop r14 ; pop r15 ; ret
0x000000000045ad49 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000419780 : sub rax, rdi ; ret
0x000000000046b9bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000041bde3 : sub rdx, rax ; jbe 0x41be28 ; add rax, rdi ; ret
0x000000000040adc1 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000045aa6d : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004938b8 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004084d4 : sub rsp, 8 ; call 0x4147b6
0x0000000000464f68 : sub rsp, 8 ; call qword ptr [rip + 0x25c2c6]
0x00000000004371f7 : syscall ; pop rdx ; pop rsi ; ret
0x000000000045b4c5 : syscall ; ret
0x000000000045e333 : syscall ; xor eax, eax ; mov dword ptr fs:[rdx], esi ; pop rbx ; ret
0x000000000044c1b4 : test ah, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000040dfc9 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048f4e3 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004bccd5 : test al, 0 ; add byte ptr [rax], bl ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004bce38 : test al, 0x68 ; std ; jmp qword ptr [rdi]
0x00000000004ac9f7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004be588 : test al, 0xa1 ; cld ; call qword ptr [rax]
0x0000000000496321 : test al, 0xf8 ; jmp rax
0x00000000004122de : test al, al ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000042437a : test al, al ; jne 0x424368 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000046f511 : test al, dl ; jmp 0x46f515
0x00000000004bc104 : test byte ptr [rax + rax - 0x5a61800], bl ; jmp rdi
0x00000000004736c1 : test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x00000000004b5104 : test byte ptr [rax + rax], ch ; add byte ptr [rax - 0x65], bh ; cmc ; jmp qword ptr [rax]
0x0000000000477401 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000477e33 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043a4d0 : test byte ptr [rax - 0x39], cl ; ret
0x000000000048fa62 : test byte ptr [rax - 0x77], 0xdf ; call r15
0x0000000000435bce : test byte ptr [rax - 0x77], 0xef ; call rbx
0x000000000043109a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004304da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040ebda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040eb9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043322a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040e1ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430eda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004be7e8 : test byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000480ea0 : test byte ptr [rax], bl ; in al, -1 ; dec dword ptr [rax + 0x39] ; ret
0x00000000004b9504 : test byte ptr [rax], dh ; add byte ptr [rax], ch ; mov ch, 0xf8 ; call qword ptr [rcx]
0x000000000046154b : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000043a3b5 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x000000000047616a : test byte ptr [rbx + 0x24d4df3d], 0 ; jmp rax
0x0000000000479c89 : test byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044c220 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000041b31e : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x000000000043815f : test byte ptr [rcx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046c924 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret
0x00000000004967c8 : test byte ptr [rcx + rdi*8 - 1], 0x86 ; stc ; call qword ptr [rsi]
0x000000000047daf6 : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000418a06 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004598b4 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x000000000047223e : test byte ptr [rdi - 0x1600002f], al ; pop rdx ; ret
0x000000000043529a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000040abe2 : test byte ptr [rdi], 0x95 ; ret 0x8445
0x0000000000470a68 : test byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000048045b : test byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x39], cl ; ret
0x000000000043ee73 : test byte ptr [rdx], 0 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000045a014 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400d07 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x000000000046735c : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000474a7a : test byte ptr [rsi], bl ; ret 0xffff
0x0000000000433242 : test ch, 0xf0 ; je 0x43323b ; movzx eax, cl ; pop rbx ; ret
0x00000000004329df : test cl, cl ; jne 0x4329d4 ; ret
0x0000000000432a8f : test cl, cl ; jne 0x432a84 ; ret
0x0000000000432d4f : test cl, cl ; jne 0x432d48 ; sub rax, 1 ; ret
0x000000000043326a : test dh, 0xf0 ; je 0x433239 ; movzx eax, dl ; pop rbx ; ret
0x000000000043326a : test dh, 0xf0 ; je 0x43323b ; movzx eax, dl ; pop rbx ; ret
0x0000000000469f51 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000463f21 : test dh, bh ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000412f76 : test dh, bl ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000004605a8 : test dh, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043ee72 : test dh, dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043b9e5 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000430f24 : test dl, 0x40 ; jne 0x430ee9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000430f52 : test dl, 4 ; jne 0x430ee9 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b40d : test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004069f2 : test dl, dl ; jne 0x4069d4 ; ret
0x0000000000432bff : test dl, dl ; jne 0x432bf8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004791ab : test dword ptr [rax + 0x39], 0x430f48c2 ; ret 0x8348
0x000000000041c9c9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000046da94 : test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000044979f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000044980f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x0000000000401562 : test dword ptr [rax - 9], 0xaf0f48f3 ; ret
0x0000000000469f52 : test dword ptr [rax], 0x89480000 ; ret 0x2b49
0x00000000004512b9 : test dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004694aa : test dword ptr [rax], eax ; or al, 0 ; add bl, dh ; ret
0x00000000004b6156 : test dword ptr [rax], ecx ; idiv bh ; sbb al, 0xd ; jns 0x4b6155 ; cmc ; jmp qword ptr [rdx]
0x000000000042236f : test dword ptr [rbp - 0xc000004], esp ; ret
0x0000000000414bfd : test dword ptr [rbx + 0x48000021], ebx ; mov eax, ebx ; pop rbx ; ret
0x0000000000425247 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425696 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000463f22 : test dword ptr [rbx], 0x89490000 ; ret 0x8d48
0x000000000041bd5a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000041c6e0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000042521d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042512d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042503d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004755b1 : test dword ptr [rcx], ebp ; ret
0x000000000041c8ca : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x0000000000422185 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041022b : test dword ptr [rdx + 0x67], edi ; add byte ptr [rax], al ; ret
0x000000000040ec73 : test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x0000000000424f62 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047214b : test dword ptr [rdx], ebp ; fcos ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000047364e : test dword ptr [rdx], ebp ; mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000040ca58 : test dword ptr [rsi + 0x22], ebx ; add byte ptr [rax], al ; ret
0x0000000000432762 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042246e : test dword ptr [rsi - 0xc000005], esp ; ret
0x0000000000439955 : test dword ptr [rsi], 0x8b480000 ; jnp 0x43997d ; call rax
0x00000000004b6306 : test dword ptr [rsi], 0xd1cfff6 ; cwde ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000004b5ade : test dword ptr [rsi], ecx ; idiv bh ; sbb al, 0xd ; movsxd rax, ebp ; cmc ; jmp qword ptr [rdx]
0x0000000000425468 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000435283 : test eax, 0x49fffdfb ; mov edi, dword ptr [rsi] ; call rbx
0x00000000004bcdcd : test eax, 0x65300000 ; std ; call rcx
0x00000000004bce35 : test eax, 0x68a80000 ; std ; jmp qword ptr [rdi]
0x00000000004ae6e0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004286e6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000401008 : test eax, eax ; je 0x40101c ; mov edi, 0x4b2480 ; call rax
0x000000000040104d : test eax, eax ; je 0x401061 ; mov edi, 0x6bfef0 ; call rax
0x0000000000402827 : test eax, eax ; je 0x40283b ; mov edi, 0x6c2140 ; call rax
0x0000000000402f51 : test eax, eax ; je 0x402f6c ; mov edi, 0x6c2140 ; call rax
0x0000000000403201 : test eax, eax ; je 0x403215 ; mov edi, 0x6c21a0 ; call rax
0x0000000000415864 : test eax, eax ; je 0x41586e ; call rax
0x0000000000419413 : test eax, eax ; je 0x41941f ; xchg eax, edx ; sub eax, edx ; ret
0x00000000004334e6 : test eax, eax ; je 0x4334fa ; mov edi, 0x6c32a0 ; call rax
0x0000000000433612 : test eax, eax ; je 0x433626 ; mov edi, 0x6c32a0 ; call rax
0x0000000000434d48 : test eax, eax ; je 0x434d53 ; ret
0x0000000000438591 : test eax, eax ; je 0x4385a5 ; mov edi, 0x6c11e0 ; call rax
0x0000000000438726 : test eax, eax ; je 0x438734 ; ret
0x0000000000438c16 : test eax, eax ; je 0x438c29 ; mov eax, 0x6c3fc0 ; ret
0x0000000000442eaf : test eax, eax ; je 0x442ec3 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442ed4 : test eax, eax ; je 0x442ee8 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442fe0 : test eax, eax ; je 0x442fea ; call rax
0x000000000044303f : test eax, eax ; je 0x443053 ; mov edi, 0x6c32a0 ; call rax
0x0000000000443146 : test eax, eax ; je 0x44315a ; mov edi, 0x6c32a0 ; call rax
0x00000000004432c0 : test eax, eax ; je 0x4432ca ; call rax
0x000000000044334c : test eax, eax ; je 0x443360 ; mov edi, 0x6c32a0 ; call rax
0x000000000044342b : test eax, eax ; je 0x443446 ; mov edi, 0x6c32a0 ; call rax
0x00000000004443d9 : test eax, eax ; je 0x4443e3 ; call rax
0x000000000045e89c : test eax, eax ; je 0x45e8a6 ; call rax
0x000000000045ea99 : test eax, eax ; je 0x45eaa7 ; call rax
0x0000000000463a50 : test eax, eax ; je 0x4637b3 ; call rax
0x000000000046380b : test eax, eax ; je 0x463815 ; call rax
0x0000000000463e44 : test eax, eax ; je 0x463e58 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000464b42 : test eax, eax ; je 0x464b56 ; mov edi, 0x6c11a0 ; call rax
0x000000000046878c : test eax, eax ; je 0x4687a0 ; mov edi, 0x6c11e0 ; call rax
0x0000000000468810 : test eax, eax ; je 0x468824 ; mov edi, 0x6c11e0 ; call rax
0x00000000004688d5 : test eax, eax ; je 0x4688e9 ; mov edi, 0x6c11e0 ; call rax
0x0000000000469c1a : test eax, eax ; je 0x469c2e ; mov edi, 0x6c11a0 ; call rax
0x000000000046a11d : test eax, eax ; je 0x46a131 ; mov edi, 0x6c11e0 ; call rax
0x000000000046b6b9 : test eax, eax ; je 0x46b68e ; mov edi, 0x6c11e0 ; call rax
0x000000000046b80a : test eax, eax ; je 0x46b81e ; mov edi, 0x6c11e0 ; call rax
0x00000000004764d0 : test eax, eax ; je 0x4764e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a0dd : test eax, eax ; je 0x47a0f1 ; mov edi, 0x6c11e0 ; call rax
0x000000000047a2f3 : test eax, eax ; je 0x47a307 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483ef0 : test eax, eax ; je 0x483f04 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483f9a : test eax, eax ; je 0x483fae ; mov edi, 0x6c11e0 ; call rax
0x0000000000491b18 : test eax, eax ; je 0x491b2c ; mov edi, 0x6c11a0 ; call rax
0x0000000000491bd9 : test eax, eax ; je 0x491bed ; mov edi, 0x6c11a0 ; call rax
0x000000000040e894 : test eax, eax ; jne 0x40e88d ; ret
0x000000000041bd97 : test eax, eax ; jne 0x41bdf7 ; xor rax, rax ; ret
0x00000000004371cf : test eax, eax ; jne 0x4371cb ; pop rdx ; pop r10 ; ret
0x000000000045b0e9 : test eax, eax ; jne 0x45b0a8 ; nop dword ptr [rax] ; ret
0x000000000045f1e1 : test eax, eax ; jne 0x45f24c ; mov rax, r9 ; ret
0x0000000000491296 : test eax, eax ; jne 0x4912a5 ; pop rbx ; ret
0x00000000004914a2 : test eax, eax ; jne 0x4914b5 ; ret
0x000000000046510a : test eax, eax ; js 0x465115 ; pop rbx ; ret
0x0000000000475bfb : test eax, eax ; js 0x475c0d ; ret
0x000000000041bcc0 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000414c25 : test ebx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000402770 : test ebx, ebx ; je 0x40278b ; mov edi, 0x6c32a0 ; call rbx
0x000000000043aa99 : test ebx, ebx ; jne 0x43aa75 ; jmp 0x43aa67
0x0000000000475f14 : test ebx, ebx ; jne 0x475f28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491ca3 : test ebx, ebx ; jne 0x491c95 ; pop rbx ; ret
0x0000000000491ecf : test ebx, ebx ; jne 0x491ec6 ; pop rbx ; ret
0x0000000000430f12 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000430f1f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000496395 : test edi, eax ; call rax
0x000000000048d6ae : test edx, eax ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x00000000004167f3 : test edx, edi ; je 0x416806 ; pop rbx ; ret
0x000000000043708b : test edx, edx ; cmovne eax, edx ; ret
0x0000000000410926 : test edx, edx ; je 0x410930 ; call rdx
0x0000000000419609 : test edx, edx ; je 0x419617 ; bsf eax, edx ; ret
0x0000000000419609 : test edx, edx ; je 0x419618 ; bsf eax, edx ; ret
0x00000000004196b2 : test edx, edx ; je 0x4196c7 ; bsf rax, rdx ; ret
0x00000000004196b2 : test edx, edx ; je 0x4196c8 ; bsf rax, rdx ; ret
0x0000000000419656 : test edx, edx ; je 0x4196d8 ; bsf rax, rdx ; ret
0x0000000000459921 : test edx, edx ; je 0x459947 ; bsf rax, rdx ; ret
0x0000000000459921 : test edx, edx ; je 0x459948 ; bsf rax, rdx ; ret
0x000000000045ea19 : test edx, edx ; je 0x45ea27 ; call rdx
0x000000000049316d : test edx, edx ; je 0x49317c ; call rdx
0x000000000040d31f : test edx, edx ; jne 0x40d315 ; ret
0x000000000045834f : test edx, edx ; jne 0x458345 ; ret
0x000000000045b12a : test edx, edx ; jne 0x45b125 ; ret
0x0000000000400ecb : test edx, edx ; jns 0x400db2 ; jmp 0x400ea0
0x0000000000430f05 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000442970 : test esi, esi ; je 0x44293e ; pop rbx ; ret
0x0000000000459811 : test esi, esi ; jne 0x459820 ; xor rax, rax ; ret
0x0000000000419412 : test r8d, r8d ; je 0x419420 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000045b0e8 : test r8d, r8d ; jne 0x45b0a9 ; nop dword ptr [rax] ; ret
0x000000000045f1e0 : test r8d, r8d ; jne 0x45f24d ; mov rax, r9 ; ret
0x00000000004bcdcc : test rax, 0x65300000 ; std ; call rcx
0x0000000000415863 : test rax, rax ; je 0x41586f ; call rax
0x0000000000434d47 : test rax, rax ; je 0x434d54 ; ret
0x0000000000442fdf : test rax, rax ; je 0x442feb ; call rax
0x00000000004432bf : test rax, rax ; je 0x4432cb ; call rax
0x00000000004443d8 : test rax, rax ; je 0x4443e4 ; call rax
0x000000000045e89b : test rax, rax ; je 0x45e8a7 ; call rax
0x000000000045ea98 : test rax, rax ; je 0x45eaa8 ; call rax
0x0000000000463a4f : test rax, rax ; je 0x4637b4 ; call rax
0x000000000046380a : test rax, rax ; je 0x463816 ; call rax
0x00000000004764cf : test rax, rax ; je 0x4764e2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e893 : test rax, rax ; jne 0x40e88e ; ret
0x000000000043aa98 : test rbx, rbx ; jne 0x43aa76 ; jmp 0x43aa68
0x0000000000475f13 : test rbx, rbx ; jne 0x475f29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491ca2 : test rbx, rbx ; jne 0x491c96 ; pop rbx ; ret
0x0000000000491ece : test rbx, rbx ; jne 0x491ec7 ; pop rbx ; ret
0x00000000004167f2 : test rdx, rdi ; je 0x416807 ; pop rbx ; ret
0x0000000000410925 : test rdx, rdx ; je 0x410931 ; call rdx
0x00000000004196b1 : test rdx, rdx ; je 0x4196c8 ; bsf rax, rdx ; ret
0x00000000004196b1 : test rdx, rdx ; je 0x4196c9 ; bsf rax, rdx ; ret
0x0000000000419655 : test rdx, rdx ; je 0x4196d9 ; bsf rax, rdx ; ret
0x0000000000459920 : test rdx, rdx ; je 0x459948 ; bsf rax, rdx ; ret
0x0000000000459920 : test rdx, rdx ; je 0x459949 ; bsf rax, rdx ; ret
0x000000000045ea18 : test rdx, rdx ; je 0x45ea28 ; call rdx
0x000000000049316c : test rdx, rdx ; je 0x49317d ; call rdx
0x000000000040d31e : test rdx, rdx ; jne 0x40d316 ; ret
0x000000000045834e : test rdx, rdx ; jne 0x458346 ; ret
0x0000000000459810 : test rsi, rsi ; jne 0x459821 ; xor rax, rax ; ret
0x000000000040c737 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000420a91 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004b5109 : wait ; cmc ; jmp qword ptr [rax]
0x00000000004b46d5 : wait ; cmc ; jmp qword ptr [rdx]
0x000000000044d231 : wait ; ret
0x000000000041921f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041fd3f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418e0f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000041891b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044459b : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000041912b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042198c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004211ac : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042159c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420dbc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489fdd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488ae1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000489ce1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004893e1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004896e1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488dd9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042089f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042007f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000418b9f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041f85f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000418edf : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000453327 : xchg byte ptr [rax - 0x7d], cl ; ret
0x00000000004191fb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004baadd : xchg byte ptr [rax], al ; add byte ptr [rax], ah ; sar cl, 1 ; call rcx
0x0000000000420f5b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004192cb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004203bf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fb9f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041f37f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042055f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000041907f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041886f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000418c6f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042144c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c6c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000463894 : xchg byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000421d7c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041914f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000041893f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041f6bf : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004189e1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418d3f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000489086 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f7f5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004204f5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489f86 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489686 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489386 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000420015 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042134d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488d7e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421c7d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418faf : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000487e0f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487c2f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000488607 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b43bd : xchg ch, dh ; jmp qword ptr [rdx]
0x0000000000487527 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488427 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420835 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fb35 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041f655 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420355 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042149d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420cbd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418a05 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000439e54 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000473d9e : xchg dword ptr [rbx - 0x77000000], esp ; ret 0x348
0x0000000000411ed8 : xchg dword ptr [rbx - 0x9fffffb], ebp ; ret
0x00000000004750a3 : xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ac3ac : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048eb22 : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000046e770 : xchg dword ptr [rcx], ebx ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000473bc1 : xchg dword ptr [rdi - 0x77000000], esp ; ret 0x348
0x00000000004371cd : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4371cd ; pop rdx ; pop r10 ; ret
0x00000000004ac54b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000487168 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000448e1c : xchg eax, ebp ; cmp dl, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000472818 : xchg eax, ebp ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000400739 : xchg eax, ebp ; ret
0x000000000047c38f : xchg eax, ebp ; ret 0x2948
0x0000000000456e36 : xchg eax, ebp ; ret 0x5389
0x000000000040a4a3 : xchg eax, ebp ; ret 0x60e9
0x0000000000403e96 : xchg eax, ebp ; ret 0x81e9
0x0000000000412a9b : xchg eax, ebp ; ret 0x8348
0x000000000040f973 : xchg eax, ebp ; ret 0x8441
0x000000000040abe4 : xchg eax, ebp ; ret 0x8445
0x000000000041406d : xchg eax, ebp ; ret 0x948
0x0000000000403465 : xchg eax, ebp ; ret 0x953d
0x000000000047734b : xchg eax, ebp ; ret 0xb60f
0x000000000045b802 : xchg eax, ebp ; ret 0xc031
0x000000000045b40c : xchg eax, ebp ; ret 0xc8e9
0x00000000004379bd : xchg eax, ebp ; ret 0xd009
0x0000000000476ff4 : xchg eax, ebp ; ret 0xd138
0x0000000000403b1c : xchg eax, ebp ; ret 0xd284
0x000000000047bfdf : xchg eax, ebp ; ret 0xd349
0x00000000004083a7 : xchg eax, ebp ; ret 0xdaf7
0x000000000047bf24 : xchg eax, ebp ; ret 0xe083
0x0000000000438761 : xchg eax, ebp ; ret 0xe1eb
0x000000000045f9a7 : xchg eax, ebp ; ret 0xe74
0x000000000045b87b : xchg eax, ebp ; ret 0xf748
0x000000000045b268 : xchg eax, ebp ; ret 0xf883
0x0000000000452834 : xchg eax, ebp ; shr dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000460a6c : xchg eax, ebx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040da22 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004bb7a5 : xchg eax, ebx ; add byte ptr [rax], al ; call 0xffffffffe44bb1bc
0x00000000004243b0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000043039c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000425b32 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040a5a6 : xchg eax, ebx ; ret 0x3948
0x0000000000444f6f : xchg eax, ebx ; ret 0x3949
0x0000000000445257 : xchg eax, ebx ; ret 0x8348
0x000000000040bedf : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004964d0 : xchg eax, ecx ; clc ; jmp qword ptr [rcx]
0x00000000004b4d09 : xchg eax, ecx ; cmc ; call qword ptr [rcx]
0x0000000000420941 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004679fb : xchg eax, ecx ; shl byte ptr [rip - 0x3b7cb800], 8 ; ret
0x000000000041f06f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004510e6 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x00000000004518d2 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x00000000004b9139 : xchg eax, edi ; clc ; call qword ptr [rdx]
0x00000000004374ad : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004b8751 : xchg eax, edi ; std ; call rsp
0x00000000004ac9f8 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000441f73 : xchg eax, edx ; add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004962ed : xchg eax, edx ; clc ; jmp qword ptr [rax]
0x000000000046cfaa : xchg eax, edx ; idiv edi ; dec ecx ; ret
0x00000000004ae2bd : xchg eax, edx ; jae 0x4ae29a ; push rsi ; pop rdx ; je 0x4ae28f ; ret 0xacfc
0x000000000040b6d3 : xchg eax, edx ; mov eax, dword ptr [rdx] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000436f80 : xchg eax, edx ; ret 0x970f
0x00000000004374b0 : xchg eax, edx ; ret 0xd029
0x00000000004ac3af : xchg eax, edx ; ret 0xf869
0x0000000000496854 : xchg eax, edx ; stc ; jmp qword ptr [rdx]
0x0000000000419417 : xchg eax, edx ; sub eax, edx ; ret
0x00000000004246b0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000429ef7 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000042476d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004246cb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000408b96 : xchg eax, esi ; ret 0
0x000000000045f0fe : xchg eax, esi ; ret 0x394c
0x000000000040f96c : xchg eax, esi ; ret 0x8348
0x00000000004aec4c : xchg eax, esi ; ret 0xcd11
0x000000000042471c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000473bdc : xchg eax, esi ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004967b0 : xchg eax, esi ; stc ; jmp qword ptr [rsi]
0x000000000045cc1e : xchg eax, esp ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000004b6b14 : xchg eax, esp ; add byte ptr [rax], r8b ; clc ; loopne 0x4b6b17 ; call qword ptr [rcx]
0x000000000041b31f : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000408b71 : xchg eax, esp ; add dword ptr [rax], eax ; mov rdi, r13 ; call 0x414e38
0x000000000044ed46 : xchg eax, esp ; and al, 0x2c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000043d54e : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047dbc3 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bde14 : xchg eax, esp ; mov ecx, 0xdb980000 ; sti ; call qword ptr [rdx]
0x00000000004aee5f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4aedf0 ; ret 0x48f
0x000000000040037f : xchg eax, esp ; ret
0x00000000004be714 : xchg eax, esp ; ret 0
0x0000000000411b9b : xchg eax, esp ; ret 0x1589
0x000000000045b771 : xchg eax, esp ; ret 0x2b3c
0x000000000046346a : xchg eax, esp ; ret 0x5385
0x0000000000477281 : xchg eax, esp ; ret 0x543a
0x00000000004771ca : xchg eax, esp ; ret 0x5c88
0x00000000004054c3 : xchg eax, esp ; ret 0x70e9
0x00000000004761ea : xchg eax, esp ; ret 0x950f
0x0000000000411df9 : xchg eax, esp ; ret 0xa0e9
0x00000000004023d8 : xchg eax, esp ; ret 0xb60f
0x00000000004013ad : xchg eax, esp ; ret 0xc031
0x0000000000460123 : xchg eax, esp ; ret 0xc283
0x000000000047480f : xchg eax, esp ; ret 0xd189
0x00000000004474ad : xchg eax, esp ; ret 0xd284
0x000000000040894c : xchg eax, esp ; ret 0xdaf7
0x000000000045ed3f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004503ae : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bd45d : xchg ebx, edi ; jmp qword ptr [rdx]
0x00000000004a4529 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000425a0c : xlatb ; add r9, r11 ; jmp r9
0x0000000000433881 : xlatb ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000049644d : xlatb ; clc ; call qword ptr [rax]
0x00000000004167f4 : xlatb ; je 0x416805 ; pop rbx ; ret
0x00000000004ad423 : xlatb ; jo 0x4ad49f ; mov ebp, 0xfb67d10d ; ret
0x00000000004469e2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4469c8 ; mov rax, rsi ; ret
0x0000000000417159 : xlatb ; ret
0x000000000041962f : xlatb ; ret 0x4166
0x00000000004ae8c6 : xlatb ; ret 0x4e27
0x0000000000459bf7 : xlatb ; ret 0x94c
0x000000000041bbbf : xlatb ; ret 0xc085
0x0000000000417150 : xlatb ; ret 0xc148
0x0000000000422b41 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000430ec6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000418626 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004184e6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000004183a6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000418266 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000418126 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000417fe6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000417ea6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000417d66 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000417c26 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000417ae6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000004179a6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000417866 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000417726 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004175e6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000004174a6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000430ec2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000459b95 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000459ba6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000414a15 : xor al, 0x18 ; pop rbx ; ret
0x00000000004ac3aa : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000414efc : xor al, 0x24 ; jmp rax
0x00000000004780c4 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000004be5b4 : xor al, 0xc1 ; add byte ptr [rax], al ; pop rax ; pop rbx ; cld ; call qword ptr [rax]
0x00000000004ad58a : xor al, 0xd8 ; ret
0x00000000004018cf : xor al, 3 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046e772 : xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b8bf9 : xor bh, al ; jmp rax
0x0000000000496a28 : xor bh, byte ptr [rdi] ; stc ; jmp qword ptr [rdx + 0x22fff93e]
0x000000000041be1c : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000045e339 : xor bl, byte ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000041bcdd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000408b10 : xor byte ptr [rax + 0x29], cl ; ret
0x0000000000481ccc : xor byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000491a64 : xor byte ptr [rax + 0x39], cl ; ret
0x000000000041717f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000417061 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000049631c : xor byte ptr [rax + rdi*8 - 0x7576f01], cl ; jmp rax
0x00000000004b8a4c : xor byte ptr [rax + rdi*8], ah ; jmp qword ptr [rdx]
0x000000000041952f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000045afcd : xor byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000456381 : xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x000000000043d143 : xor byte ptr [rax - 0x77], cl ; sbb bl, ch ; ret 0x1f0f
0x0000000000440d5d : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14d3dbbc], cl ; ret 0x8948
0x000000000043fc25 : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000492823 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rbx - 0x18] ; ret 0xfff7
0x00000000004901b4 : xor byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000472f2a : xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000407513 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000043330c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004590c1 : xor byte ptr [rax], al ; je 0x4590d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b371 : xor byte ptr [rax], al ; jne 0x46b388 ; add rsp, 0x48 ; ret
0x000000000040f78b : xor byte ptr [rax], dh ; sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004bcdd0 : xor byte ptr [rbp - 3], ah ; call rcx
0x00000000004915ab : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000433b23 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b6917 : xor byte ptr [rbx + 0xade0206], al ; ret
0x000000000041c92b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000040e2de : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000496328 : xor byte ptr [rbx - 0x537f0008], ch ; clc ; call rax
0x00000000004569d3 : xor byte ptr [rbx - 0x78f0f601], al ; ret
0x00000000004b72c0 : xor byte ptr [rbx - 0xa], bh ; call qword ptr [rax]
0x000000000040f78c : xor byte ptr [rbx], ch ; add byte ptr [rcx], al ; ret
0x0000000000472c1c : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004132b8 : xor byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x28 ; call rax
0x000000000045ae96 : xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004165dc : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408c56 : xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x000000000046ea3b : xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000046ddf2 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x000000000046e69b : xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000004ba2ec : xor byte ptr [rcx - 7], ch ; jmp qword ptr [rdx]
0x00000000004b9f30 : xor byte ptr [rcx - 7], cl ; call qword ptr [rsi]
0x00000000004969d8 : xor byte ptr [rcx], bh ; stc ; jmp qword ptr [rax + 0x16fff938]
0x00000000004961f0 : xor byte ptr [rcx], ch ; clc ; inc dword ptr [rax] ; sub bh, al ; call rax
0x000000000047ec04 : xor byte ptr [rip - 0x38b7fffd], ch ; ret 0xffc0
0x000000000042445f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000459b5c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041bcde : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004b31b0 : xor byte ptr [rsi - 0xb], al ; call qword ptr [rdx]
0x00000000004bd1c0 : xor ch, 0xfa ; jmp rbx
0x00000000004b5fac : xor ch, cl ; cmc ; jmp qword ptr [rdx]
0x0000000000476edb : xor cl, al ; call 0x49099806
0x00000000004769a6 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000411b99 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x000000000044783a : xor cl, ch ; ret
0x00000000004b8bf8 : xor dil, al ; jmp rax
0x0000000000449bea : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000414aba : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004345a7 : xor dword ptr [rbx + rax*2], 0 ; ret
0x00000000004b3a1c : xor dword ptr [rbx - 0xb], ebx ; jmp qword ptr [rdx]
0x00000000004010a6 : xor dword ptr [rbx], eax ; add byte ptr [rax], bh ; leave ; ret
0x000000000048f2db : xor dword ptr [rip - 0x7cb70007], ebp ; ret
0x000000000045ec60 : xor eax, 0x70c48348 ; pop rbx ; ret
0x0000000000464244 : xor eax, 0x8b480000 ; mov r9b, r13b ; ret
0x0000000000407510 : xor eax, dword ptr [0x30] ; call rax
0x000000000045e979 : xor eax, dword ptr [rdx] ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000048fe7a : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041624e : xor eax, eax ; add rsp, 0x18 ; ret
0x000000000046b416 : xor eax, eax ; add rsp, 0x58 ; ret
0x000000000046b4ef : xor eax, eax ; add rsp, 0x78 ; ret
0x0000000000414883 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415570 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047b564 : xor eax, eax ; call 0x467864
0x0000000000457d67 : xor eax, eax ; call r12
0x0000000000468049 : xor eax, eax ; cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x00000000004371a7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000045ee1e : xor eax, eax ; cmp rsi, rdx ; ja 0x45ee38 ; ret
0x000000000048e103 : xor eax, eax ; jmp 0x48dbae
0x00000000004375d0 : xor eax, eax ; leave ; ret
0x000000000045e335 : xor eax, eax ; mov dword ptr fs:[rdx], esi ; pop rbx ; ret
0x000000000040e935 : xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x000000000045b0fc : xor eax, eax ; nop ; ret
0x000000000040606a : xor eax, eax ; pop r12 ; ret
0x000000000043a93d : xor eax, eax ; pop r14 ; ret
0x000000000043754f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000044622d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040772d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004195bc : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040aefc : xor eax, eax ; pop rbx ; ret
0x0000000000401700 : xor eax, eax ; ret
0x000000000042437e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000433268 : xor eax, eax ; test dh, 0xf0 ; je 0x43323b ; movzx eax, dl ; pop rbx ; ret
0x0000000000491450 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046c4d1 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000004bd4e6 : xor ecx, dword ptr [rax + 0xd1cfffb] ; jrcxz 0x4bd47e ; sti ; jmp qword ptr [rdx]
0x00000000004683d8 : xor ecx, dword ptr [rsi + 0x5b010025] ; ret
0x000000000045e5ee : xor ecx, ecx ; jmp 0x45e5b8
0x000000000040aed5 : xor edx, edx ; call 0x4370f4
0x000000000043875c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43874c
0x000000000040de79 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000484053 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000475f3c : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000467964 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x0000000000414a11 : xor esi, edx ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000403569 : xor esi, esi ; call rax
0x0000000000401815 : xor esi, esi ; mov edi, 1 ; call rax
0x0000000000476169 : xor esi, esi ; mov edi, dword ptr [rip + 0x24d4df] ; jmp rax
0x0000000000435bf2 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000435c17 : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000435c3b : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000435c5b : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000435bcd : xor esi, esi ; mov rdi, rbp ; call rbx
0x0000000000457d66 : xor r8d, r8d ; call r12
0x000000000040750f : xor rax, qword ptr [0x30] ; call rax
0x000000000040750e : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000041bd5f : xor rax, rax ; ret

Unique gadgets found: 8837
